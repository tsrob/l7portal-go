// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DocumentsDocs An array of documents
// Example: {"application/json":[{"locale":"fr_FR","modifyTs":1578436733922,"navtitle":"gp","ordinal":0,"parentUuid":"","status":"PUBLISHED","title":"Grand Parent","type":"HOME","typeUuid":"3aec8420-28e3-4b6e-b971-d04fe6b72a60","uuid":"b76c92f7-a64b-4c3a-a7c1-c98c009bebc1"},{"locale":"fr_FR","modifyTs":1578436882282,"navtitle":"parent","ordinal":0,"parentUuid":"b76c92f7-a64b-4c3a-a7c1-c98c009bebc1","status":"PUBLISHED","title":"Parent","type":"HOME","typeUuid":"3aec8420-28e3-4b6e-b971-d04fe6b72a60","uuid":"e3a32811-c7f2-413c-88b3-d92cf378750e"}]}
//
// swagger:model DocumentsDocs
type DocumentsDocs []*DocumentDoc

// Validate validates this documents docs
func (m DocumentsDocs) Validate(formats strfmt.Registry) error {
	var res []error

	for i := 0; i < len(m); i++ {
		if swag.IsZero(m[i]) { // not required
			continue
		}

		if m[i] != nil {
			if err := m[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName(strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName(strconv.Itoa(i))
				}
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validate this documents docs based on the context it is used
func (m DocumentsDocs) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	for i := 0; i < len(m); i++ {

		if m[i] != nil {
			if err := m[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName(strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName(strconv.Itoa(i))
				}
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
