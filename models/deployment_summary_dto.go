// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeploymentSummaryDto deployment summary dto
//
// swagger:model DeploymentSummaryDto
type DeploymentSummaryDto struct {

	// The number of counts
	Count float64 `json:"count,omitempty"`

	// The deployment status of DEPLOYED, PENDING_DEPLOYMENT,ERROR, ERROR_UNDEPLOY,PENDING_UNDEPLOYMENT
	// Enum: [DEPLOYED PENDING_DEPLOYMENT ERROR ERROR_UNDEPLOY PENDING_UNDEPLOYMENT]
	DeploymentStatus string `json:"deploymentStatus,omitempty"`

	// The proxy name
	Name string `json:"name,omitempty"`

	// The deployment summary entity type of PortalApiDeployment, GWPublishedApiDeployment, ApiKeyDeployment, or BundleDeployment
	// Enum: [PortalApiDeployment GWPublishedApiDeployment ApiKeyDeployment BundleDeployment]
	Type string `json:"type,omitempty"`

	// The proxy UUID
	UUID string `json:"uuid,omitempty"`
}

// Validate validates this deployment summary dto
func (m *DeploymentSummaryDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeploymentStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var deploymentSummaryDtoTypeDeploymentStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DEPLOYED","PENDING_DEPLOYMENT","ERROR","ERROR_UNDEPLOY","PENDING_UNDEPLOYMENT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deploymentSummaryDtoTypeDeploymentStatusPropEnum = append(deploymentSummaryDtoTypeDeploymentStatusPropEnum, v)
	}
}

const (

	// DeploymentSummaryDtoDeploymentStatusDEPLOYED captures enum value "DEPLOYED"
	DeploymentSummaryDtoDeploymentStatusDEPLOYED string = "DEPLOYED"

	// DeploymentSummaryDtoDeploymentStatusPENDINGDEPLOYMENT captures enum value "PENDING_DEPLOYMENT"
	DeploymentSummaryDtoDeploymentStatusPENDINGDEPLOYMENT string = "PENDING_DEPLOYMENT"

	// DeploymentSummaryDtoDeploymentStatusERROR captures enum value "ERROR"
	DeploymentSummaryDtoDeploymentStatusERROR string = "ERROR"

	// DeploymentSummaryDtoDeploymentStatusERRORUNDEPLOY captures enum value "ERROR_UNDEPLOY"
	DeploymentSummaryDtoDeploymentStatusERRORUNDEPLOY string = "ERROR_UNDEPLOY"

	// DeploymentSummaryDtoDeploymentStatusPENDINGUNDEPLOYMENT captures enum value "PENDING_UNDEPLOYMENT"
	DeploymentSummaryDtoDeploymentStatusPENDINGUNDEPLOYMENT string = "PENDING_UNDEPLOYMENT"
)

// prop value enum
func (m *DeploymentSummaryDto) validateDeploymentStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, deploymentSummaryDtoTypeDeploymentStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DeploymentSummaryDto) validateDeploymentStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.DeploymentStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateDeploymentStatusEnum("deploymentStatus", "body", m.DeploymentStatus); err != nil {
		return err
	}

	return nil
}

var deploymentSummaryDtoTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PortalApiDeployment","GWPublishedApiDeployment","ApiKeyDeployment","BundleDeployment"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deploymentSummaryDtoTypeTypePropEnum = append(deploymentSummaryDtoTypeTypePropEnum, v)
	}
}

const (

	// DeploymentSummaryDtoTypePortalAPIDeployment captures enum value "PortalApiDeployment"
	DeploymentSummaryDtoTypePortalAPIDeployment string = "PortalApiDeployment"

	// DeploymentSummaryDtoTypeGWPublishedAPIDeployment captures enum value "GWPublishedApiDeployment"
	DeploymentSummaryDtoTypeGWPublishedAPIDeployment string = "GWPublishedApiDeployment"

	// DeploymentSummaryDtoTypeAPIKeyDeployment captures enum value "ApiKeyDeployment"
	DeploymentSummaryDtoTypeAPIKeyDeployment string = "ApiKeyDeployment"

	// DeploymentSummaryDtoTypeBundleDeployment captures enum value "BundleDeployment"
	DeploymentSummaryDtoTypeBundleDeployment string = "BundleDeployment"
)

// prop value enum
func (m *DeploymentSummaryDto) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, deploymentSummaryDtoTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DeploymentSummaryDto) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this deployment summary dto based on context it is used
func (m *DeploymentSummaryDto) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DeploymentSummaryDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeploymentSummaryDto) UnmarshalBinary(b []byte) error {
	var res DeploymentSummaryDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
