// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeploymentTypesDto deployment types dto
//
// swagger:model DeploymentTypesDto
type DeploymentTypesDto struct {

	// api
	// Enum: [AUTOMATIC ON_DEMAND MANUAL]
	API string `json:"api,omitempty"`
}

// Validate validates this deployment types dto
func (m *DeploymentTypesDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAPI(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var deploymentTypesDtoTypeAPIPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AUTOMATIC","ON_DEMAND","MANUAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deploymentTypesDtoTypeAPIPropEnum = append(deploymentTypesDtoTypeAPIPropEnum, v)
	}
}

const (

	// DeploymentTypesDtoAPIAUTOMATIC captures enum value "AUTOMATIC"
	DeploymentTypesDtoAPIAUTOMATIC string = "AUTOMATIC"

	// DeploymentTypesDtoAPIONDEMAND captures enum value "ON_DEMAND"
	DeploymentTypesDtoAPIONDEMAND string = "ON_DEMAND"

	// DeploymentTypesDtoAPIMANUAL captures enum value "MANUAL"
	DeploymentTypesDtoAPIMANUAL string = "MANUAL"
)

// prop value enum
func (m *DeploymentTypesDto) validateAPIEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, deploymentTypesDtoTypeAPIPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DeploymentTypesDto) validateAPI(formats strfmt.Registry) error {
	if swag.IsZero(m.API) { // not required
		return nil
	}

	// value enum
	if err := m.validateAPIEnum("api", "body", m.API); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this deployment types dto based on context it is used
func (m *DeploymentTypesDto) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DeploymentTypesDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeploymentTypesDto) UnmarshalBinary(b []byte) error {
	var res DeploymentTypesDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
