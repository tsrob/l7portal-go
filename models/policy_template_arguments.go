// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PolicyTemplateArguments Policy Template Arguments
//
// swagger:model PolicyTemplateArguments
type PolicyTemplateArguments struct {

	// Api policy entity xref Uuid
	APIPolicyEntityXrefUUID string `json:"ApiPolicyEntityXrefUuid,omitempty"`

	// Api Uuid
	APIUUID string `json:"ApiUuid,omitempty"`

	// policy template Uuid
	PolicyTemplateUUID string `json:"PolicyTemplateUuid,omitempty"`

	// Uuid
	UUID string `json:"Uuid,omitempty"`

	// value
	Value string `json:"Value,omitempty"`

	// label
	Label string `json:"label,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// type of the parameter (e.g. string, boolean, int)
	Type string `json:"type,omitempty"`
}

// Validate validates this policy template arguments
func (m *PolicyTemplateArguments) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this policy template arguments based on context it is used
func (m *PolicyTemplateArguments) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PolicyTemplateArguments) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PolicyTemplateArguments) UnmarshalBinary(b []byte) error {
	var res PolicyTemplateArguments
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
