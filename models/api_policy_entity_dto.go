// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// APIPolicyEntityDto ApiPolicyEntityDto
// Example: [{"policyEntityUuid":"72093738-871a-45bd-b114-ad3a61893ac0","policyTemplateArguments":[{"name":"debugMode","value":"true"}]},{"policyEntityUuid":"3b6d02e7-4368-4d2f-940f-444f8b016124","policyTemplateArguments":[{"name":"quotaMaxHitsPerDay","value":"300"}]}]
//
// swagger:model ApiPolicyEntityDto
type APIPolicyEntityDto struct {

	// policy entity Uuid
	PolicyEntityUUID string `json:"policyEntityUuid,omitempty"`

	// policy template arguments
	PolicyTemplateArguments []*APIPolicyTemplateXrefDto `json:"policyTemplateArguments"`
}

// Validate validates this Api policy entity dto
func (m *APIPolicyEntityDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePolicyTemplateArguments(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIPolicyEntityDto) validatePolicyTemplateArguments(formats strfmt.Registry) error {
	if swag.IsZero(m.PolicyTemplateArguments) { // not required
		return nil
	}

	for i := 0; i < len(m.PolicyTemplateArguments); i++ {
		if swag.IsZero(m.PolicyTemplateArguments[i]) { // not required
			continue
		}

		if m.PolicyTemplateArguments[i] != nil {
			if err := m.PolicyTemplateArguments[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("policyTemplateArguments" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("policyTemplateArguments" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this Api policy entity dto based on the context it is used
func (m *APIPolicyEntityDto) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidatePolicyTemplateArguments(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIPolicyEntityDto) contextValidatePolicyTemplateArguments(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.PolicyTemplateArguments); i++ {

		if m.PolicyTemplateArguments[i] != nil {
			if err := m.PolicyTemplateArguments[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("policyTemplateArguments" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("policyTemplateArguments" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *APIPolicyEntityDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIPolicyEntityDto) UnmarshalBinary(b []byte) error {
	var res APIPolicyEntityDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
