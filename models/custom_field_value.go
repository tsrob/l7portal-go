// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CustomFieldValue Custom Field Value
//
// swagger:model CustomFieldValue
type CustomFieldValue struct {

	// The uuid of the Custom Field entity applied to this API or Application instance.
	// Required: true
	CustomFieldUUID *string `json:"CustomFieldUuid"`

	// The uuid of this API or Application. Used to reference the API or Application instance from the Custom Field instance.
	// Required: true
	EntityUUID *string `json:"EntityUuid"`

	// Uuid
	// Required: true
	UUID *string `json:"Uuid"`

	// The value applied to this Custom Field instance.
	// Required: true
	Value *string `json:"value"`
}

// Validate validates this custom field value
func (m *CustomFieldValue) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCustomFieldUUID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEntityUUID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUUID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CustomFieldValue) validateCustomFieldUUID(formats strfmt.Registry) error {

	if err := validate.Required("CustomFieldUuid", "body", m.CustomFieldUUID); err != nil {
		return err
	}

	return nil
}

func (m *CustomFieldValue) validateEntityUUID(formats strfmt.Registry) error {

	if err := validate.Required("EntityUuid", "body", m.EntityUUID); err != nil {
		return err
	}

	return nil
}

func (m *CustomFieldValue) validateUUID(formats strfmt.Registry) error {

	if err := validate.Required("Uuid", "body", m.UUID); err != nil {
		return err
	}

	return nil
}

func (m *CustomFieldValue) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", m.Value); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this custom field value based on context it is used
func (m *CustomFieldValue) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CustomFieldValue) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustomFieldValue) UnmarshalBinary(b []byte) error {
	var res CustomFieldValue
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
