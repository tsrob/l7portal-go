// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserGetBasicV2 user get basic v2
//
// swagger:model UserGetBasicV2
type UserGetBasicV2 struct {

	// Uuid of the authentication scheme for which the user is created
	AuthConfigUUID string `json:"authConfigUuid,omitempty"`

	// Email of the user
	Email string `json:"email,omitempty"`

	// First name of the user
	FirstName string `json:"firstName,omitempty"`

	// Last name of the user
	LastName string `json:"lastName,omitempty"`

	// Locale the user supports
	Locale string `json:"locale,omitempty"`

	// Status of the user
	// Enum: [ENABLED LOCKED DISABLED REGISTRATION_INIT REGISTRATION_PENDING_APPROVAL]
	Status string `json:"status,omitempty"`

	// Tenant id for which the user is created
	TenantID string `json:"tenantId,omitempty"`

	// Unique string that is associated with the user
	Username string `json:"username,omitempty"`

	// The uuid which identifies the user uniquely
	UUID string `json:"uuid,omitempty"`
}

// Validate validates this user get basic v2
func (m *UserGetBasicV2) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var userGetBasicV2TypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ENABLED","LOCKED","DISABLED","REGISTRATION_INIT","REGISTRATION_PENDING_APPROVAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		userGetBasicV2TypeStatusPropEnum = append(userGetBasicV2TypeStatusPropEnum, v)
	}
}

const (

	// UserGetBasicV2StatusENABLED captures enum value "ENABLED"
	UserGetBasicV2StatusENABLED string = "ENABLED"

	// UserGetBasicV2StatusLOCKED captures enum value "LOCKED"
	UserGetBasicV2StatusLOCKED string = "LOCKED"

	// UserGetBasicV2StatusDISABLED captures enum value "DISABLED"
	UserGetBasicV2StatusDISABLED string = "DISABLED"

	// UserGetBasicV2StatusREGISTRATIONINIT captures enum value "REGISTRATION_INIT"
	UserGetBasicV2StatusREGISTRATIONINIT string = "REGISTRATION_INIT"

	// UserGetBasicV2StatusREGISTRATIONPENDINGAPPROVAL captures enum value "REGISTRATION_PENDING_APPROVAL"
	UserGetBasicV2StatusREGISTRATIONPENDINGAPPROVAL string = "REGISTRATION_PENDING_APPROVAL"
)

// prop value enum
func (m *UserGetBasicV2) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, userGetBasicV2TypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *UserGetBasicV2) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this user get basic v2 based on context it is used
func (m *UserGetBasicV2) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UserGetBasicV2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserGetBasicV2) UnmarshalBinary(b []byte) error {
	var res UserGetBasicV2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
