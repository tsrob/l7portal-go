// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ListBasic list basic
//
// swagger:model ListBasic
type ListBasic struct {

	// current page
	// Required: true
	CurrentPage *int64 `json:"currentPage"`

	// page size
	// Required: true
	PageSize *int64 `json:"pageSize"`

	// total elements
	// Required: true
	TotalElements *int64 `json:"totalElements"`

	// total pages
	// Required: true
	TotalPages *int64 `json:"totalPages"`
}

// Validate validates this list basic
func (m *ListBasic) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCurrentPage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePageSize(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalElements(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalPages(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ListBasic) validateCurrentPage(formats strfmt.Registry) error {

	if err := validate.Required("currentPage", "body", m.CurrentPage); err != nil {
		return err
	}

	return nil
}

func (m *ListBasic) validatePageSize(formats strfmt.Registry) error {

	if err := validate.Required("pageSize", "body", m.PageSize); err != nil {
		return err
	}

	return nil
}

func (m *ListBasic) validateTotalElements(formats strfmt.Registry) error {

	if err := validate.Required("totalElements", "body", m.TotalElements); err != nil {
		return err
	}

	return nil
}

func (m *ListBasic) validateTotalPages(formats strfmt.Registry) error {

	if err := validate.Required("totalPages", "body", m.TotalPages); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this list basic based on context it is used
func (m *ListBasic) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ListBasic) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ListBasic) UnmarshalBinary(b []byte) error {
	var res ListBasic
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
