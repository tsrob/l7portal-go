// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// EmailTemplate Email Template
//
// swagger:model EmailTemplate
type EmailTemplate struct {

	// The email body for the specific type.
	// Example: \u003c!DOCTYPE html\u003e\u003chtml\u003e\u003cbody\u003e\u003ch1\u003eTeam Notification!\u003c/h1\u003e \u003cp\u003eSir:\u003c/p\u003e\u003cdiv\u003e\u003cspan\u003eYou recently submitted a delete request for \u003c/span\u003e\u003cspan\u003e{{APP_NAME}}\u003c/span\u003e\u003cspan\u003e on the \u003c/span\u003e\u003cspan\u003e{{PORTAL_NAME}}.\u003c/div\u003e\u003cdiv\u003e\u003cspan\u003eYour request has now been approved. This is a system generated email, please do not reply to this email.\u003c/span\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e\u003c/html\u003e
	// Required: true
	Body *string `json:"body"`

	// The email subject for the specific type.
	// Example: Team Application Delete Request for {{PORTAL_NAME}} has been Approved
	// Required: true
	Subject *string `json:"subject"`

	// The email template type, a pre-defined system enum.
	// Example: EMAIL_FOR_APPLICATION_REQUEST
	// Required: true
	Type *string `json:"type"`

	// uuid
	// Example: c3867a7b-8a68-4be4-8b6a-006c30efb8ea
	// Required: true
	UUID *string `json:"uuid"`
}

// Validate validates this email template
func (m *EmailTemplate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBody(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubject(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUUID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EmailTemplate) validateBody(formats strfmt.Registry) error {

	if err := validate.Required("body", "body", m.Body); err != nil {
		return err
	}

	return nil
}

func (m *EmailTemplate) validateSubject(formats strfmt.Registry) error {

	if err := validate.Required("subject", "body", m.Subject); err != nil {
		return err
	}

	return nil
}

func (m *EmailTemplate) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

func (m *EmailTemplate) validateUUID(formats strfmt.Registry) error {

	if err := validate.Required("uuid", "body", m.UUID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this email template based on context it is used
func (m *EmailTemplate) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EmailTemplate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EmailTemplate) UnmarshalBinary(b []byte) error {
	var res EmailTemplate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
