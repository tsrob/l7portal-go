// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// APICatalogDto Api catalog dto
//
// swagger:model ApiCatalogDto
type APICatalogDto struct {

	// access status
	// Enum: [PUBLIC PRIVATE]
	AccessStatus string `json:"accessStatus,omitempty"`

	// api service type
	// Enum: [REST SOAP]
	APIServiceType string `json:"apiServiceType,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// portal status
	// Enum: [ENABLED DEPRECATED]
	PortalStatus string `json:"portalStatus,omitempty"`

	// tags
	Tags []string `json:"tags"`

	// uuid
	UUID string `json:"uuid,omitempty"`
}

// Validate validates this Api catalog dto
func (m *APICatalogDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccessStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAPIServiceType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePortalStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var apiCatalogDtoTypeAccessStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PUBLIC","PRIVATE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiCatalogDtoTypeAccessStatusPropEnum = append(apiCatalogDtoTypeAccessStatusPropEnum, v)
	}
}

const (

	// APICatalogDtoAccessStatusPUBLIC captures enum value "PUBLIC"
	APICatalogDtoAccessStatusPUBLIC string = "PUBLIC"

	// APICatalogDtoAccessStatusPRIVATE captures enum value "PRIVATE"
	APICatalogDtoAccessStatusPRIVATE string = "PRIVATE"
)

// prop value enum
func (m *APICatalogDto) validateAccessStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, apiCatalogDtoTypeAccessStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *APICatalogDto) validateAccessStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.AccessStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateAccessStatusEnum("accessStatus", "body", m.AccessStatus); err != nil {
		return err
	}

	return nil
}

var apiCatalogDtoTypeAPIServiceTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["REST","SOAP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiCatalogDtoTypeAPIServiceTypePropEnum = append(apiCatalogDtoTypeAPIServiceTypePropEnum, v)
	}
}

const (

	// APICatalogDtoAPIServiceTypeREST captures enum value "REST"
	APICatalogDtoAPIServiceTypeREST string = "REST"

	// APICatalogDtoAPIServiceTypeSOAP captures enum value "SOAP"
	APICatalogDtoAPIServiceTypeSOAP string = "SOAP"
)

// prop value enum
func (m *APICatalogDto) validateAPIServiceTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, apiCatalogDtoTypeAPIServiceTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *APICatalogDto) validateAPIServiceType(formats strfmt.Registry) error {
	if swag.IsZero(m.APIServiceType) { // not required
		return nil
	}

	// value enum
	if err := m.validateAPIServiceTypeEnum("apiServiceType", "body", m.APIServiceType); err != nil {
		return err
	}

	return nil
}

var apiCatalogDtoTypePortalStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ENABLED","DEPRECATED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiCatalogDtoTypePortalStatusPropEnum = append(apiCatalogDtoTypePortalStatusPropEnum, v)
	}
}

const (

	// APICatalogDtoPortalStatusENABLED captures enum value "ENABLED"
	APICatalogDtoPortalStatusENABLED string = "ENABLED"

	// APICatalogDtoPortalStatusDEPRECATED captures enum value "DEPRECATED"
	APICatalogDtoPortalStatusDEPRECATED string = "DEPRECATED"
)

// prop value enum
func (m *APICatalogDto) validatePortalStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, apiCatalogDtoTypePortalStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *APICatalogDto) validatePortalStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.PortalStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validatePortalStatusEnum("portalStatus", "body", m.PortalStatus); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this Api catalog dto based on context it is used
func (m *APICatalogDto) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *APICatalogDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APICatalogDto) UnmarshalBinary(b []byte) error {
	var res APICatalogDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
