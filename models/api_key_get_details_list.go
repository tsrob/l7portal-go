// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// APIKeyGetDetailsList Api key get details list
//
// swagger:model ApiKeyGetDetailsList
type APIKeyGetDetailsList struct {
	ListBasic

	// results
	Results []*APIKeyGetDetailsDto `json:"results"`

	LinksBasic

	APIKeyGetDetailsListAllOf3
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *APIKeyGetDetailsList) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 ListBasic
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.ListBasic = aO0

	// AO1
	var dataAO1 struct {
		Results []*APIKeyGetDetailsDto `json:"results"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.Results = dataAO1.Results

	// AO2
	var aO2 LinksBasic
	if err := swag.ReadJSON(raw, &aO2); err != nil {
		return err
	}
	m.LinksBasic = aO2

	// AO3
	var aO3 APIKeyGetDetailsListAllOf3
	if err := swag.ReadJSON(raw, &aO3); err != nil {
		return err
	}
	m.APIKeyGetDetailsListAllOf3 = aO3

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m APIKeyGetDetailsList) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 4)

	aO0, err := swag.WriteJSON(m.ListBasic)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)
	var dataAO1 struct {
		Results []*APIKeyGetDetailsDto `json:"results"`
	}

	dataAO1.Results = m.Results

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)

	aO2, err := swag.WriteJSON(m.LinksBasic)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO2)

	aO3, err := swag.WriteJSON(m.APIKeyGetDetailsListAllOf3)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO3)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this Api key get details list
func (m *APIKeyGetDetailsList) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with ListBasic
	if err := m.ListBasic.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResults(formats); err != nil {
		res = append(res, err)
	}

	// validation for a type composition with LinksBasic
	if err := m.LinksBasic.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with APIKeyGetDetailsListAllOf3

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIKeyGetDetailsList) validateResults(formats strfmt.Registry) error {

	if swag.IsZero(m.Results) { // not required
		return nil
	}

	for i := 0; i < len(m.Results); i++ {
		if swag.IsZero(m.Results[i]) { // not required
			continue
		}

		if m.Results[i] != nil {
			if err := m.Results[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("results" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("results" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this Api key get details list based on the context it is used
func (m *APIKeyGetDetailsList) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with ListBasic
	if err := m.ListBasic.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateResults(ctx, formats); err != nil {
		res = append(res, err)
	}

	// validation for a type composition with LinksBasic
	if err := m.LinksBasic.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with APIKeyGetDetailsListAllOf3

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIKeyGetDetailsList) contextValidateResults(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Results); i++ {

		if m.Results[i] != nil {
			if err := m.Results[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("results" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("results" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *APIKeyGetDetailsList) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIKeyGetDetailsList) UnmarshalBinary(b []byte) error {
	var res APIKeyGetDetailsList
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// APIKeyGetDetailsListAllOf3 API key get details list all of3
// Example: {"application/json":{"_links":{"self":{"href":"/api-management/1.0/api-keys?page=0\u0026size=20"}},"currentPage":0,"pageSize":20,"results":[{"apiKey":"l75e86e20cc6b045be98dfe7bb81ce0192","applicationUuid":"01e8b248-05db-4036-810f-9cb6cd24af0b","defaultKey":true,"name":"api key 1","status":"ENABLED"},{"apiKey":"l7e9926f86ee75456db9745cbc8b692c9a","applicationUuid":"4c2482d5-e8a4-4e51-8ce8-93f0addc73c6","defaultKey":true,"name":"api key 1","status":"ENABLED"},{"apiKey":"l7875d1b62c9404ed6a2f65565ff8871e4","applicationUuid":"01e8b248-05db-4036-810f-9cb6cd24af0b","defaultKey":false,"name":"TestKey","status":"ENABLED"}],"totalElements":3,"totalPages":1}}
//
// swagger:model APIKeyGetDetailsListAllOf3
type APIKeyGetDetailsListAllOf3 interface{}
