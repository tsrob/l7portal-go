// Code generated by go-swagger; DO NOT EDIT.

package gateway_bundle_deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// UpdateGatewayBundleDeploymentUsingPUTReader is a Reader for the UpdateGatewayBundleDeploymentUsingPUT structure.
type UpdateGatewayBundleDeploymentUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateGatewayBundleDeploymentUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateGatewayBundleDeploymentUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateGatewayBundleDeploymentUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateGatewayBundleDeploymentUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateGatewayBundleDeploymentUsingPUTOK creates a UpdateGatewayBundleDeploymentUsingPUTOK with default headers values
func NewUpdateGatewayBundleDeploymentUsingPUTOK() *UpdateGatewayBundleDeploymentUsingPUTOK {
	return &UpdateGatewayBundleDeploymentUsingPUTOK{}
}

/*
UpdateGatewayBundleDeploymentUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateGatewayBundleDeploymentUsingPUTOK struct {
	Payload *models.GatewayBundleDeploymentBasicDto
}

// IsSuccess returns true when this update gateway bundle deployment using p u t o k response has a 2xx status code
func (o *UpdateGatewayBundleDeploymentUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update gateway bundle deployment using p u t o k response has a 3xx status code
func (o *UpdateGatewayBundleDeploymentUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update gateway bundle deployment using p u t o k response has a 4xx status code
func (o *UpdateGatewayBundleDeploymentUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update gateway bundle deployment using p u t o k response has a 5xx status code
func (o *UpdateGatewayBundleDeploymentUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update gateway bundle deployment using p u t o k response a status code equal to that given
func (o *UpdateGatewayBundleDeploymentUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update gateway bundle deployment using p u t o k response
func (o *UpdateGatewayBundleDeploymentUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateGatewayBundleDeploymentUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /deployments/0.1/gateway-bundles/{uuid}/proxies/{proxyUuid}][%d] updateGatewayBundleDeploymentUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateGatewayBundleDeploymentUsingPUTOK) String() string {
	return fmt.Sprintf("[PUT /deployments/0.1/gateway-bundles/{uuid}/proxies/{proxyUuid}][%d] updateGatewayBundleDeploymentUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateGatewayBundleDeploymentUsingPUTOK) GetPayload() *models.GatewayBundleDeploymentBasicDto {
	return o.Payload
}

func (o *UpdateGatewayBundleDeploymentUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayBundleDeploymentBasicDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGatewayBundleDeploymentUsingPUTBadRequest creates a UpdateGatewayBundleDeploymentUsingPUTBadRequest with default headers values
func NewUpdateGatewayBundleDeploymentUsingPUTBadRequest() *UpdateGatewayBundleDeploymentUsingPUTBadRequest {
	return &UpdateGatewayBundleDeploymentUsingPUTBadRequest{}
}

/*
UpdateGatewayBundleDeploymentUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type UpdateGatewayBundleDeploymentUsingPUTBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update gateway bundle deployment using p u t bad request response has a 2xx status code
func (o *UpdateGatewayBundleDeploymentUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update gateway bundle deployment using p u t bad request response has a 3xx status code
func (o *UpdateGatewayBundleDeploymentUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update gateway bundle deployment using p u t bad request response has a 4xx status code
func (o *UpdateGatewayBundleDeploymentUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update gateway bundle deployment using p u t bad request response has a 5xx status code
func (o *UpdateGatewayBundleDeploymentUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update gateway bundle deployment using p u t bad request response a status code equal to that given
func (o *UpdateGatewayBundleDeploymentUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update gateway bundle deployment using p u t bad request response
func (o *UpdateGatewayBundleDeploymentUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateGatewayBundleDeploymentUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /deployments/0.1/gateway-bundles/{uuid}/proxies/{proxyUuid}][%d] updateGatewayBundleDeploymentUsingPUTBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateGatewayBundleDeploymentUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /deployments/0.1/gateway-bundles/{uuid}/proxies/{proxyUuid}][%d] updateGatewayBundleDeploymentUsingPUTBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateGatewayBundleDeploymentUsingPUTBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateGatewayBundleDeploymentUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGatewayBundleDeploymentUsingPUTNotFound creates a UpdateGatewayBundleDeploymentUsingPUTNotFound with default headers values
func NewUpdateGatewayBundleDeploymentUsingPUTNotFound() *UpdateGatewayBundleDeploymentUsingPUTNotFound {
	return &UpdateGatewayBundleDeploymentUsingPUTNotFound{}
}

/*
UpdateGatewayBundleDeploymentUsingPUTNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type UpdateGatewayBundleDeploymentUsingPUTNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update gateway bundle deployment using p u t not found response has a 2xx status code
func (o *UpdateGatewayBundleDeploymentUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update gateway bundle deployment using p u t not found response has a 3xx status code
func (o *UpdateGatewayBundleDeploymentUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update gateway bundle deployment using p u t not found response has a 4xx status code
func (o *UpdateGatewayBundleDeploymentUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update gateway bundle deployment using p u t not found response has a 5xx status code
func (o *UpdateGatewayBundleDeploymentUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update gateway bundle deployment using p u t not found response a status code equal to that given
func (o *UpdateGatewayBundleDeploymentUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update gateway bundle deployment using p u t not found response
func (o *UpdateGatewayBundleDeploymentUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateGatewayBundleDeploymentUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /deployments/0.1/gateway-bundles/{uuid}/proxies/{proxyUuid}][%d] updateGatewayBundleDeploymentUsingPUTNotFound  %+v", 404, o.Payload)
}

func (o *UpdateGatewayBundleDeploymentUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /deployments/0.1/gateway-bundles/{uuid}/proxies/{proxyUuid}][%d] updateGatewayBundleDeploymentUsingPUTNotFound  %+v", 404, o.Payload)
}

func (o *UpdateGatewayBundleDeploymentUsingPUTNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateGatewayBundleDeploymentUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
