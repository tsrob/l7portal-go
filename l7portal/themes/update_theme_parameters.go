// Code generated by go-swagger; DO NOT EDIT.

package themes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// NewUpdateThemeParams creates a new UpdateThemeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateThemeParams() *UpdateThemeParams {
	return &UpdateThemeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateThemeParamsWithTimeout creates a new UpdateThemeParams object
// with the ability to set a timeout on a request.
func NewUpdateThemeParamsWithTimeout(timeout time.Duration) *UpdateThemeParams {
	return &UpdateThemeParams{
		timeout: timeout,
	}
}

// NewUpdateThemeParamsWithContext creates a new UpdateThemeParams object
// with the ability to set a context for a request.
func NewUpdateThemeParamsWithContext(ctx context.Context) *UpdateThemeParams {
	return &UpdateThemeParams{
		Context: ctx,
	}
}

// NewUpdateThemeParamsWithHTTPClient creates a new UpdateThemeParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateThemeParamsWithHTTPClient(client *http.Client) *UpdateThemeParams {
	return &UpdateThemeParams{
		HTTPClient: client,
	}
}

/*
UpdateThemeParams contains all the parameters to send to the API endpoint

	for the update theme operation.

	Typically these are written to a http.Request.
*/
type UpdateThemeParams struct {

	/* APIMOrgUUID.

	   The UUID of the Organization to update
	*/
	APIMOrgUUID *string

	/* Body.

	   Provides the values needed to set up the Theme object.
	*/
	Body *models.ThemePut

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update theme params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateThemeParams) WithDefaults() *UpdateThemeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update theme params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateThemeParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update theme params
func (o *UpdateThemeParams) WithTimeout(timeout time.Duration) *UpdateThemeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update theme params
func (o *UpdateThemeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update theme params
func (o *UpdateThemeParams) WithContext(ctx context.Context) *UpdateThemeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update theme params
func (o *UpdateThemeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update theme params
func (o *UpdateThemeParams) WithHTTPClient(client *http.Client) *UpdateThemeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update theme params
func (o *UpdateThemeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIMOrgUUID adds the aPIMOrgUUID to the update theme params
func (o *UpdateThemeParams) WithAPIMOrgUUID(aPIMOrgUUID *string) *UpdateThemeParams {
	o.SetAPIMOrgUUID(aPIMOrgUUID)
	return o
}

// SetAPIMOrgUUID adds the apiMOrgUuid to the update theme params
func (o *UpdateThemeParams) SetAPIMOrgUUID(aPIMOrgUUID *string) {
	o.APIMOrgUUID = aPIMOrgUUID
}

// WithBody adds the body to the update theme params
func (o *UpdateThemeParams) WithBody(body *models.ThemePut) *UpdateThemeParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update theme params
func (o *UpdateThemeParams) SetBody(body *models.ThemePut) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateThemeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.APIMOrgUUID != nil {

		// header param APIM-OrgUuid
		if err := r.SetHeaderParam("APIM-OrgUuid", *o.APIMOrgUUID); err != nil {
			return err
		}
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
