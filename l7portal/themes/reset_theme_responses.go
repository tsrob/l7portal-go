// Code generated by go-swagger; DO NOT EDIT.

package themes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// ResetThemeReader is a Reader for the ResetTheme structure.
type ResetThemeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResetThemeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewResetThemeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewResetThemeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewResetThemeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewResetThemeBadRequest creates a ResetThemeBadRequest with default headers values
func NewResetThemeBadRequest() *ResetThemeBadRequest {
	return &ResetThemeBadRequest{}
}

/*
ResetThemeBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type ResetThemeBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this reset theme bad request response has a 2xx status code
func (o *ResetThemeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset theme bad request response has a 3xx status code
func (o *ResetThemeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset theme bad request response has a 4xx status code
func (o *ResetThemeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this reset theme bad request response has a 5xx status code
func (o *ResetThemeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this reset theme bad request response a status code equal to that given
func (o *ResetThemeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the reset theme bad request response
func (o *ResetThemeBadRequest) Code() int {
	return 400
}

func (o *ResetThemeBadRequest) Error() string {
	return fmt.Sprintf("[POST /branding/1.0/themes/reset][%d] resetThemeBadRequest  %+v", 400, o.Payload)
}

func (o *ResetThemeBadRequest) String() string {
	return fmt.Sprintf("[POST /branding/1.0/themes/reset][%d] resetThemeBadRequest  %+v", 400, o.Payload)
}

func (o *ResetThemeBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ResetThemeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetThemeNotFound creates a ResetThemeNotFound with default headers values
func NewResetThemeNotFound() *ResetThemeNotFound {
	return &ResetThemeNotFound{}
}

/*
ResetThemeNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type ResetThemeNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this reset theme not found response has a 2xx status code
func (o *ResetThemeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset theme not found response has a 3xx status code
func (o *ResetThemeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset theme not found response has a 4xx status code
func (o *ResetThemeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this reset theme not found response has a 5xx status code
func (o *ResetThemeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this reset theme not found response a status code equal to that given
func (o *ResetThemeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the reset theme not found response
func (o *ResetThemeNotFound) Code() int {
	return 404
}

func (o *ResetThemeNotFound) Error() string {
	return fmt.Sprintf("[POST /branding/1.0/themes/reset][%d] resetThemeNotFound  %+v", 404, o.Payload)
}

func (o *ResetThemeNotFound) String() string {
	return fmt.Sprintf("[POST /branding/1.0/themes/reset][%d] resetThemeNotFound  %+v", 404, o.Payload)
}

func (o *ResetThemeNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ResetThemeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetThemeInternalServerError creates a ResetThemeInternalServerError with default headers values
func NewResetThemeInternalServerError() *ResetThemeInternalServerError {
	return &ResetThemeInternalServerError{}
}

/*
ResetThemeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type ResetThemeInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this reset theme internal server error response has a 2xx status code
func (o *ResetThemeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset theme internal server error response has a 3xx status code
func (o *ResetThemeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset theme internal server error response has a 4xx status code
func (o *ResetThemeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this reset theme internal server error response has a 5xx status code
func (o *ResetThemeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this reset theme internal server error response a status code equal to that given
func (o *ResetThemeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the reset theme internal server error response
func (o *ResetThemeInternalServerError) Code() int {
	return 500
}

func (o *ResetThemeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /branding/1.0/themes/reset][%d] resetThemeInternalServerError  %+v", 500, o.Payload)
}

func (o *ResetThemeInternalServerError) String() string {
	return fmt.Sprintf("[POST /branding/1.0/themes/reset][%d] resetThemeInternalServerError  %+v", 500, o.Payload)
}

func (o *ResetThemeInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ResetThemeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
