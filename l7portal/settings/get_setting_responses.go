// Code generated by go-swagger; DO NOT EDIT.

package settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// GetSettingReader is a Reader for the GetSetting structure.
type GetSettingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSettingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSettingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSettingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSettingOK creates a GetSettingOK with default headers values
func NewGetSettingOK() *GetSettingOK {
	return &GetSettingOK{}
}

/*
GetSettingOK describes a response with status code 200, with default header values.

An object describing a single Setting.
*/
type GetSettingOK struct {
	Payload *models.Setting
}

// IsSuccess returns true when this get setting o k response has a 2xx status code
func (o *GetSettingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get setting o k response has a 3xx status code
func (o *GetSettingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get setting o k response has a 4xx status code
func (o *GetSettingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get setting o k response has a 5xx status code
func (o *GetSettingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get setting o k response a status code equal to that given
func (o *GetSettingOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get setting o k response
func (o *GetSettingOK) Code() int {
	return 200
}

func (o *GetSettingOK) Error() string {
	return fmt.Sprintf("[GET /Settings('{input}')][%d] getSettingOK  %+v", 200, o.Payload)
}

func (o *GetSettingOK) String() string {
	return fmt.Sprintf("[GET /Settings('{input}')][%d] getSettingOK  %+v", 200, o.Payload)
}

func (o *GetSettingOK) GetPayload() *models.Setting {
	return o.Payload
}

func (o *GetSettingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Setting)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSettingNotFound creates a GetSettingNotFound with default headers values
func NewGetSettingNotFound() *GetSettingNotFound {
	return &GetSettingNotFound{}
}

/*
GetSettingNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type GetSettingNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get setting not found response has a 2xx status code
func (o *GetSettingNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get setting not found response has a 3xx status code
func (o *GetSettingNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get setting not found response has a 4xx status code
func (o *GetSettingNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get setting not found response has a 5xx status code
func (o *GetSettingNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get setting not found response a status code equal to that given
func (o *GetSettingNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get setting not found response
func (o *GetSettingNotFound) Code() int {
	return 404
}

func (o *GetSettingNotFound) Error() string {
	return fmt.Sprintf("[GET /Settings('{input}')][%d] getSettingNotFound  %+v", 404, o.Payload)
}

func (o *GetSettingNotFound) String() string {
	return fmt.Sprintf("[GET /Settings('{input}')][%d] getSettingNotFound  %+v", 404, o.Payload)
}

func (o *GetSettingNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSettingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
