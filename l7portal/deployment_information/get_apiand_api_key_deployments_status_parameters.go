// Code generated by go-swagger; DO NOT EDIT.

package deployment_information

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetApiandAPIKeyDeploymentsStatusParams creates a new GetApiandAPIKeyDeploymentsStatusParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetApiandAPIKeyDeploymentsStatusParams() *GetApiandAPIKeyDeploymentsStatusParams {
	return &GetApiandAPIKeyDeploymentsStatusParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetApiandAPIKeyDeploymentsStatusParamsWithTimeout creates a new GetApiandAPIKeyDeploymentsStatusParams object
// with the ability to set a timeout on a request.
func NewGetApiandAPIKeyDeploymentsStatusParamsWithTimeout(timeout time.Duration) *GetApiandAPIKeyDeploymentsStatusParams {
	return &GetApiandAPIKeyDeploymentsStatusParams{
		timeout: timeout,
	}
}

// NewGetApiandAPIKeyDeploymentsStatusParamsWithContext creates a new GetApiandAPIKeyDeploymentsStatusParams object
// with the ability to set a context for a request.
func NewGetApiandAPIKeyDeploymentsStatusParamsWithContext(ctx context.Context) *GetApiandAPIKeyDeploymentsStatusParams {
	return &GetApiandAPIKeyDeploymentsStatusParams{
		Context: ctx,
	}
}

// NewGetApiandAPIKeyDeploymentsStatusParamsWithHTTPClient creates a new GetApiandAPIKeyDeploymentsStatusParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetApiandAPIKeyDeploymentsStatusParamsWithHTTPClient(client *http.Client) *GetApiandAPIKeyDeploymentsStatusParams {
	return &GetApiandAPIKeyDeploymentsStatusParams{
		HTTPClient: client,
	}
}

/*
GetApiandAPIKeyDeploymentsStatusParams contains all the parameters to send to the API endpoint

	for the get apiand Api key deployments status operation.

	Typically these are written to a http.Request.
*/
type GetApiandAPIKeyDeploymentsStatusParams struct {

	/* ProxyUUID.

	   The UUID of the proxy
	*/
	ProxyUUID *string

	/* Status.

	   Status filter, support multiple values. Use comma to separate different DeploymentStatus e.g., ?status=ERROR,PENDING_DEPLOYMENT
	*/
	Status []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get apiand Api key deployments status params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetApiandAPIKeyDeploymentsStatusParams) WithDefaults() *GetApiandAPIKeyDeploymentsStatusParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get apiand Api key deployments status params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetApiandAPIKeyDeploymentsStatusParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get apiand Api key deployments status params
func (o *GetApiandAPIKeyDeploymentsStatusParams) WithTimeout(timeout time.Duration) *GetApiandAPIKeyDeploymentsStatusParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get apiand Api key deployments status params
func (o *GetApiandAPIKeyDeploymentsStatusParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get apiand Api key deployments status params
func (o *GetApiandAPIKeyDeploymentsStatusParams) WithContext(ctx context.Context) *GetApiandAPIKeyDeploymentsStatusParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get apiand Api key deployments status params
func (o *GetApiandAPIKeyDeploymentsStatusParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get apiand Api key deployments status params
func (o *GetApiandAPIKeyDeploymentsStatusParams) WithHTTPClient(client *http.Client) *GetApiandAPIKeyDeploymentsStatusParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get apiand Api key deployments status params
func (o *GetApiandAPIKeyDeploymentsStatusParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProxyUUID adds the proxyUUID to the get apiand Api key deployments status params
func (o *GetApiandAPIKeyDeploymentsStatusParams) WithProxyUUID(proxyUUID *string) *GetApiandAPIKeyDeploymentsStatusParams {
	o.SetProxyUUID(proxyUUID)
	return o
}

// SetProxyUUID adds the proxyUuid to the get apiand Api key deployments status params
func (o *GetApiandAPIKeyDeploymentsStatusParams) SetProxyUUID(proxyUUID *string) {
	o.ProxyUUID = proxyUUID
}

// WithStatus adds the status to the get apiand Api key deployments status params
func (o *GetApiandAPIKeyDeploymentsStatusParams) WithStatus(status []string) *GetApiandAPIKeyDeploymentsStatusParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the get apiand Api key deployments status params
func (o *GetApiandAPIKeyDeploymentsStatusParams) SetStatus(status []string) {
	o.Status = status
}

// WriteToRequest writes these params to a swagger request
func (o *GetApiandAPIKeyDeploymentsStatusParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ProxyUUID != nil {

		// query param proxyUuid
		var qrProxyUUID string

		if o.ProxyUUID != nil {
			qrProxyUUID = *o.ProxyUUID
		}
		qProxyUUID := qrProxyUUID
		if qProxyUUID != "" {

			if err := r.SetQueryParam("proxyUuid", qProxyUUID); err != nil {
				return err
			}
		}
	}

	if o.Status != nil {

		// binding items for status
		joinedStatus := o.bindParamStatus(reg)

		// query array param status
		if err := r.SetQueryParam("status", joinedStatus...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetApiandAPIKeyDeploymentsStatus binds the parameter status
func (o *GetApiandAPIKeyDeploymentsStatusParams) bindParamStatus(formats strfmt.Registry) []string {
	statusIR := o.Status

	var statusIC []string
	for _, statusIIR := range statusIR { // explode []string

		statusIIV := statusIIR // string as string
		statusIC = append(statusIC, statusIIV)
	}

	// items.CollectionFormat: ""
	statusIS := swag.JoinByFormat(statusIC, "")

	return statusIS
}
