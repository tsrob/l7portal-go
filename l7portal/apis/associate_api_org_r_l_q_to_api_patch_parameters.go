// Code generated by go-swagger; DO NOT EDIT.

package apis

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// NewAssociateAPIOrgRLQToAPIPatchParams creates a new AssociateAPIOrgRLQToAPIPatchParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAssociateAPIOrgRLQToAPIPatchParams() *AssociateAPIOrgRLQToAPIPatchParams {
	return &AssociateAPIOrgRLQToAPIPatchParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAssociateAPIOrgRLQToAPIPatchParamsWithTimeout creates a new AssociateAPIOrgRLQToAPIPatchParams object
// with the ability to set a timeout on a request.
func NewAssociateAPIOrgRLQToAPIPatchParamsWithTimeout(timeout time.Duration) *AssociateAPIOrgRLQToAPIPatchParams {
	return &AssociateAPIOrgRLQToAPIPatchParams{
		timeout: timeout,
	}
}

// NewAssociateAPIOrgRLQToAPIPatchParamsWithContext creates a new AssociateAPIOrgRLQToAPIPatchParams object
// with the ability to set a context for a request.
func NewAssociateAPIOrgRLQToAPIPatchParamsWithContext(ctx context.Context) *AssociateAPIOrgRLQToAPIPatchParams {
	return &AssociateAPIOrgRLQToAPIPatchParams{
		Context: ctx,
	}
}

// NewAssociateAPIOrgRLQToAPIPatchParamsWithHTTPClient creates a new AssociateAPIOrgRLQToAPIPatchParams object
// with the ability to set a custom HTTPClient for a request.
func NewAssociateAPIOrgRLQToAPIPatchParamsWithHTTPClient(client *http.Client) *AssociateAPIOrgRLQToAPIPatchParams {
	return &AssociateAPIOrgRLQToAPIPatchParams{
		HTTPClient: client,
	}
}

/*
AssociateAPIOrgRLQToAPIPatchParams contains all the parameters to send to the API endpoint

	for the associate Api org r l q to Api patch operation.

	Typically these are written to a http.Request.
*/
type AssociateAPIOrgRLQToAPIPatchParams struct {

	/* Action.

	   Optional param if passed and value is "remove" then it will remove all api-org-ratequota mappings of given orgUuids
	*/
	Action *string

	/* APIUUID.

	   apiUuid
	*/
	APIUUID string

	/* Body.

	   An Array of Organization and Rate Limit Quota(Api per Org) combination.
	*/
	Body *models.APIOrgRLQPut

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the associate Api org r l q to Api patch params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AssociateAPIOrgRLQToAPIPatchParams) WithDefaults() *AssociateAPIOrgRLQToAPIPatchParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the associate Api org r l q to Api patch params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AssociateAPIOrgRLQToAPIPatchParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the associate Api org r l q to Api patch params
func (o *AssociateAPIOrgRLQToAPIPatchParams) WithTimeout(timeout time.Duration) *AssociateAPIOrgRLQToAPIPatchParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the associate Api org r l q to Api patch params
func (o *AssociateAPIOrgRLQToAPIPatchParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the associate Api org r l q to Api patch params
func (o *AssociateAPIOrgRLQToAPIPatchParams) WithContext(ctx context.Context) *AssociateAPIOrgRLQToAPIPatchParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the associate Api org r l q to Api patch params
func (o *AssociateAPIOrgRLQToAPIPatchParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the associate Api org r l q to Api patch params
func (o *AssociateAPIOrgRLQToAPIPatchParams) WithHTTPClient(client *http.Client) *AssociateAPIOrgRLQToAPIPatchParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the associate Api org r l q to Api patch params
func (o *AssociateAPIOrgRLQToAPIPatchParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAction adds the action to the associate Api org r l q to Api patch params
func (o *AssociateAPIOrgRLQToAPIPatchParams) WithAction(action *string) *AssociateAPIOrgRLQToAPIPatchParams {
	o.SetAction(action)
	return o
}

// SetAction adds the action to the associate Api org r l q to Api patch params
func (o *AssociateAPIOrgRLQToAPIPatchParams) SetAction(action *string) {
	o.Action = action
}

// WithAPIUUID adds the aPIUUID to the associate Api org r l q to Api patch params
func (o *AssociateAPIOrgRLQToAPIPatchParams) WithAPIUUID(aPIUUID string) *AssociateAPIOrgRLQToAPIPatchParams {
	o.SetAPIUUID(aPIUUID)
	return o
}

// SetAPIUUID adds the apiUuid to the associate Api org r l q to Api patch params
func (o *AssociateAPIOrgRLQToAPIPatchParams) SetAPIUUID(aPIUUID string) {
	o.APIUUID = aPIUUID
}

// WithBody adds the body to the associate Api org r l q to Api patch params
func (o *AssociateAPIOrgRLQToAPIPatchParams) WithBody(body *models.APIOrgRLQPut) *AssociateAPIOrgRLQToAPIPatchParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the associate Api org r l q to Api patch params
func (o *AssociateAPIOrgRLQToAPIPatchParams) SetBody(body *models.APIOrgRLQPut) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *AssociateAPIOrgRLQToAPIPatchParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Action != nil {

		// query param action
		var qrAction string

		if o.Action != nil {
			qrAction = *o.Action
		}
		qAction := qrAction
		if qAction != "" {

			if err := r.SetQueryParam("action", qAction); err != nil {
				return err
			}
		}
	}

	// path param apiUuid
	if err := r.SetPathParam("apiUuid", o.APIUUID); err != nil {
		return err
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
