// Code generated by go-swagger; DO NOT EDIT.

package apis

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetApis10Params creates a new GetApis10Params object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetApis10Params() *GetApis10Params {
	return &GetApis10Params{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetApis10ParamsWithTimeout creates a new GetApis10Params object
// with the ability to set a timeout on a request.
func NewGetApis10ParamsWithTimeout(timeout time.Duration) *GetApis10Params {
	return &GetApis10Params{
		timeout: timeout,
	}
}

// NewGetApis10ParamsWithContext creates a new GetApis10Params object
// with the ability to set a context for a request.
func NewGetApis10ParamsWithContext(ctx context.Context) *GetApis10Params {
	return &GetApis10Params{
		Context: ctx,
	}
}

// NewGetApis10ParamsWithHTTPClient creates a new GetApis10Params object
// with the ability to set a custom HTTPClient for a request.
func NewGetApis10ParamsWithHTTPClient(client *http.Client) *GetApis10Params {
	return &GetApis10Params{
		HTTPClient: client,
	}
}

/*
GetApis10Params contains all the parameters to send to the API endpoint

	for the get apis1 0 operation.

	Typically these are written to a http.Request.
*/
type GetApis10Params struct {

	/* AccessStatus.

	   Access status of an API.
	*/
	AccessStatus *string

	/* APIEulaUUID.

	   Comma separated eula uuids to filter the API list.
	*/
	APIEulaUUID []string

	/* APIServiceType.

	   Service Type of an API; attribute returned as ssgServiceType.
	*/
	APIServiceType *string

	/* Description.

	   Description of an API.
	*/
	Description *string

	/* ID.

	   Comma separated API Uuids to filter the API list.
	*/
	ID []string

	/* Name.

	   Name of an API.
	*/
	Name *string

	/* OrgUUID.

	   Uuid of the Managing Organization or Uuid of the organization that has API visibility permissions for the API.
	*/
	OrgUUID *string

	/* OrgUUIDNot.

	   This filter acts to provide a list of APIs that are not currently accessible to a specified organization. These are the private APIs that are managed by other organizations where access has not yet been granted to the specified organization.
	*/
	OrgUUIDNot *string

	/* Page.

	   Fetch records of given page number.
	*/
	Page *int64

	/* PortalStatus.

	   Comma separated API Status to filter the API list. The NEW status is equivalent to Unpublished in the UI.
	*/
	PortalStatus []string

	/* PublishedByPortal.

	   If set true, returns all the Portal published APIs else Gateway published.
	*/
	PublishedByPortal *bool

	/* RateQuotaUUID.

	   Comma separated Rate Limit and Quota uuids to filter the API list.
	*/
	RateQuotaUUID []string

	/* Size.

	   Number of APIs per page to be fetched.
	*/
	Size *int64

	/* Sort.

	   A parameter on which APIs will be sorted.
	*/
	Sort *string

	/* Tags.

	   Comma separated API tags to filter the API list.
	*/
	Tags []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get apis1 0 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetApis10Params) WithDefaults() *GetApis10Params {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get apis1 0 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetApis10Params) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get apis1 0 params
func (o *GetApis10Params) WithTimeout(timeout time.Duration) *GetApis10Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get apis1 0 params
func (o *GetApis10Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get apis1 0 params
func (o *GetApis10Params) WithContext(ctx context.Context) *GetApis10Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get apis1 0 params
func (o *GetApis10Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get apis1 0 params
func (o *GetApis10Params) WithHTTPClient(client *http.Client) *GetApis10Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get apis1 0 params
func (o *GetApis10Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccessStatus adds the accessStatus to the get apis1 0 params
func (o *GetApis10Params) WithAccessStatus(accessStatus *string) *GetApis10Params {
	o.SetAccessStatus(accessStatus)
	return o
}

// SetAccessStatus adds the accessStatus to the get apis1 0 params
func (o *GetApis10Params) SetAccessStatus(accessStatus *string) {
	o.AccessStatus = accessStatus
}

// WithAPIEulaUUID adds the aPIEulaUUID to the get apis1 0 params
func (o *GetApis10Params) WithAPIEulaUUID(aPIEulaUUID []string) *GetApis10Params {
	o.SetAPIEulaUUID(aPIEulaUUID)
	return o
}

// SetAPIEulaUUID adds the apiEulaUuid to the get apis1 0 params
func (o *GetApis10Params) SetAPIEulaUUID(aPIEulaUUID []string) {
	o.APIEulaUUID = aPIEulaUUID
}

// WithAPIServiceType adds the aPIServiceType to the get apis1 0 params
func (o *GetApis10Params) WithAPIServiceType(aPIServiceType *string) *GetApis10Params {
	o.SetAPIServiceType(aPIServiceType)
	return o
}

// SetAPIServiceType adds the apiServiceType to the get apis1 0 params
func (o *GetApis10Params) SetAPIServiceType(aPIServiceType *string) {
	o.APIServiceType = aPIServiceType
}

// WithDescription adds the description to the get apis1 0 params
func (o *GetApis10Params) WithDescription(description *string) *GetApis10Params {
	o.SetDescription(description)
	return o
}

// SetDescription adds the description to the get apis1 0 params
func (o *GetApis10Params) SetDescription(description *string) {
	o.Description = description
}

// WithID adds the id to the get apis1 0 params
func (o *GetApis10Params) WithID(id []string) *GetApis10Params {
	o.SetID(id)
	return o
}

// SetID adds the id to the get apis1 0 params
func (o *GetApis10Params) SetID(id []string) {
	o.ID = id
}

// WithName adds the name to the get apis1 0 params
func (o *GetApis10Params) WithName(name *string) *GetApis10Params {
	o.SetName(name)
	return o
}

// SetName adds the name to the get apis1 0 params
func (o *GetApis10Params) SetName(name *string) {
	o.Name = name
}

// WithOrgUUID adds the orgUUID to the get apis1 0 params
func (o *GetApis10Params) WithOrgUUID(orgUUID *string) *GetApis10Params {
	o.SetOrgUUID(orgUUID)
	return o
}

// SetOrgUUID adds the orgUuid to the get apis1 0 params
func (o *GetApis10Params) SetOrgUUID(orgUUID *string) {
	o.OrgUUID = orgUUID
}

// WithOrgUUIDNot adds the orgUUIDNot to the get apis1 0 params
func (o *GetApis10Params) WithOrgUUIDNot(orgUUIDNot *string) *GetApis10Params {
	o.SetOrgUUIDNot(orgUUIDNot)
	return o
}

// SetOrgUUIDNot adds the orgUuidNot to the get apis1 0 params
func (o *GetApis10Params) SetOrgUUIDNot(orgUUIDNot *string) {
	o.OrgUUIDNot = orgUUIDNot
}

// WithPage adds the page to the get apis1 0 params
func (o *GetApis10Params) WithPage(page *int64) *GetApis10Params {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get apis1 0 params
func (o *GetApis10Params) SetPage(page *int64) {
	o.Page = page
}

// WithPortalStatus adds the portalStatus to the get apis1 0 params
func (o *GetApis10Params) WithPortalStatus(portalStatus []string) *GetApis10Params {
	o.SetPortalStatus(portalStatus)
	return o
}

// SetPortalStatus adds the portalStatus to the get apis1 0 params
func (o *GetApis10Params) SetPortalStatus(portalStatus []string) {
	o.PortalStatus = portalStatus
}

// WithPublishedByPortal adds the publishedByPortal to the get apis1 0 params
func (o *GetApis10Params) WithPublishedByPortal(publishedByPortal *bool) *GetApis10Params {
	o.SetPublishedByPortal(publishedByPortal)
	return o
}

// SetPublishedByPortal adds the publishedByPortal to the get apis1 0 params
func (o *GetApis10Params) SetPublishedByPortal(publishedByPortal *bool) {
	o.PublishedByPortal = publishedByPortal
}

// WithRateQuotaUUID adds the rateQuotaUUID to the get apis1 0 params
func (o *GetApis10Params) WithRateQuotaUUID(rateQuotaUUID []string) *GetApis10Params {
	o.SetRateQuotaUUID(rateQuotaUUID)
	return o
}

// SetRateQuotaUUID adds the rateQuotaUuid to the get apis1 0 params
func (o *GetApis10Params) SetRateQuotaUUID(rateQuotaUUID []string) {
	o.RateQuotaUUID = rateQuotaUUID
}

// WithSize adds the size to the get apis1 0 params
func (o *GetApis10Params) WithSize(size *int64) *GetApis10Params {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the get apis1 0 params
func (o *GetApis10Params) SetSize(size *int64) {
	o.Size = size
}

// WithSort adds the sort to the get apis1 0 params
func (o *GetApis10Params) WithSort(sort *string) *GetApis10Params {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the get apis1 0 params
func (o *GetApis10Params) SetSort(sort *string) {
	o.Sort = sort
}

// WithTags adds the tags to the get apis1 0 params
func (o *GetApis10Params) WithTags(tags []string) *GetApis10Params {
	o.SetTags(tags)
	return o
}

// SetTags adds the tags to the get apis1 0 params
func (o *GetApis10Params) SetTags(tags []string) {
	o.Tags = tags
}

// WriteToRequest writes these params to a swagger request
func (o *GetApis10Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccessStatus != nil {

		// query param accessStatus
		var qrAccessStatus string

		if o.AccessStatus != nil {
			qrAccessStatus = *o.AccessStatus
		}
		qAccessStatus := qrAccessStatus
		if qAccessStatus != "" {

			if err := r.SetQueryParam("accessStatus", qAccessStatus); err != nil {
				return err
			}
		}
	}

	if o.APIEulaUUID != nil {

		// binding items for apiEulaUuid
		joinedAPIEulaUUID := o.bindParamAPIEulaUUID(reg)

		// query array param apiEulaUuid
		if err := r.SetQueryParam("apiEulaUuid", joinedAPIEulaUUID...); err != nil {
			return err
		}
	}

	if o.APIServiceType != nil {

		// query param apiServiceType
		var qrAPIServiceType string

		if o.APIServiceType != nil {
			qrAPIServiceType = *o.APIServiceType
		}
		qAPIServiceType := qrAPIServiceType
		if qAPIServiceType != "" {

			if err := r.SetQueryParam("apiServiceType", qAPIServiceType); err != nil {
				return err
			}
		}
	}

	if o.Description != nil {

		// query param description
		var qrDescription string

		if o.Description != nil {
			qrDescription = *o.Description
		}
		qDescription := qrDescription
		if qDescription != "" {

			if err := r.SetQueryParam("description", qDescription); err != nil {
				return err
			}
		}
	}

	if o.ID != nil {

		// binding items for id
		joinedID := o.bindParamID(reg)

		// query array param id
		if err := r.SetQueryParam("id", joinedID...); err != nil {
			return err
		}
	}

	if o.Name != nil {

		// query param name
		var qrName string

		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.OrgUUID != nil {

		// query param orgUuid
		var qrOrgUUID string

		if o.OrgUUID != nil {
			qrOrgUUID = *o.OrgUUID
		}
		qOrgUUID := qrOrgUUID
		if qOrgUUID != "" {

			if err := r.SetQueryParam("orgUuid", qOrgUUID); err != nil {
				return err
			}
		}
	}

	if o.OrgUUIDNot != nil {

		// query param orgUuidNot
		var qrOrgUUIDNot string

		if o.OrgUUIDNot != nil {
			qrOrgUUIDNot = *o.OrgUUIDNot
		}
		qOrgUUIDNot := qrOrgUUIDNot
		if qOrgUUIDNot != "" {

			if err := r.SetQueryParam("orgUuidNot", qOrgUUIDNot); err != nil {
				return err
			}
		}
	}

	if o.Page != nil {

		// query param page
		var qrPage int64

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt64(qrPage)
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.PortalStatus != nil {

		// binding items for portalStatus
		joinedPortalStatus := o.bindParamPortalStatus(reg)

		// query array param portalStatus
		if err := r.SetQueryParam("portalStatus", joinedPortalStatus...); err != nil {
			return err
		}
	}

	if o.PublishedByPortal != nil {

		// query param publishedByPortal
		var qrPublishedByPortal bool

		if o.PublishedByPortal != nil {
			qrPublishedByPortal = *o.PublishedByPortal
		}
		qPublishedByPortal := swag.FormatBool(qrPublishedByPortal)
		if qPublishedByPortal != "" {

			if err := r.SetQueryParam("publishedByPortal", qPublishedByPortal); err != nil {
				return err
			}
		}
	}

	if o.RateQuotaUUID != nil {

		// binding items for rateQuotaUuid
		joinedRateQuotaUUID := o.bindParamRateQuotaUUID(reg)

		// query array param rateQuotaUuid
		if err := r.SetQueryParam("rateQuotaUuid", joinedRateQuotaUUID...); err != nil {
			return err
		}
	}

	if o.Size != nil {

		// query param size
		var qrSize int64

		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := swag.FormatInt64(qrSize)
		if qSize != "" {

			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}
	}

	if o.Sort != nil {

		// query param sort
		var qrSort string

		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {

			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}
	}

	if o.Tags != nil {

		// binding items for tags
		joinedTags := o.bindParamTags(reg)

		// query array param tags
		if err := r.SetQueryParam("tags", joinedTags...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetApis10 binds the parameter apiEulaUuid
func (o *GetApis10Params) bindParamAPIEulaUUID(formats strfmt.Registry) []string {
	aPIEulaUUIDIR := o.APIEulaUUID

	var aPIEulaUUIDIC []string
	for _, aPIEulaUUIDIIR := range aPIEulaUUIDIR { // explode []string

		aPIEulaUUIDIIV := aPIEulaUUIDIIR // string as string
		aPIEulaUUIDIC = append(aPIEulaUUIDIC, aPIEulaUUIDIIV)
	}

	// items.CollectionFormat: ""
	aPIEulaUUIDIS := swag.JoinByFormat(aPIEulaUUIDIC, "")

	return aPIEulaUUIDIS
}

// bindParamGetApis10 binds the parameter id
func (o *GetApis10Params) bindParamID(formats strfmt.Registry) []string {
	iDIR := o.ID

	var iDIC []string
	for _, iDIIR := range iDIR { // explode []string

		iDIIV := iDIIR // string as string
		iDIC = append(iDIC, iDIIV)
	}

	// items.CollectionFormat: ""
	iDIS := swag.JoinByFormat(iDIC, "")

	return iDIS
}

// bindParamGetApis10 binds the parameter portalStatus
func (o *GetApis10Params) bindParamPortalStatus(formats strfmt.Registry) []string {
	portalStatusIR := o.PortalStatus

	var portalStatusIC []string
	for _, portalStatusIIR := range portalStatusIR { // explode []string

		portalStatusIIV := portalStatusIIR // string as string
		portalStatusIC = append(portalStatusIC, portalStatusIIV)
	}

	// items.CollectionFormat: ""
	portalStatusIS := swag.JoinByFormat(portalStatusIC, "")

	return portalStatusIS
}

// bindParamGetApis10 binds the parameter rateQuotaUuid
func (o *GetApis10Params) bindParamRateQuotaUUID(formats strfmt.Registry) []string {
	rateQuotaUUIDIR := o.RateQuotaUUID

	var rateQuotaUUIDIC []string
	for _, rateQuotaUUIDIIR := range rateQuotaUUIDIR { // explode []string

		rateQuotaUUIDIIV := rateQuotaUUIDIIR // string as string
		rateQuotaUUIDIC = append(rateQuotaUUIDIC, rateQuotaUUIDIIV)
	}

	// items.CollectionFormat: ""
	rateQuotaUUIDIS := swag.JoinByFormat(rateQuotaUUIDIC, "")

	return rateQuotaUUIDIS
}

// bindParamGetApis10 binds the parameter tags
func (o *GetApis10Params) bindParamTags(formats strfmt.Registry) []string {
	tagsIR := o.Tags

	var tagsIC []string
	for _, tagsIIR := range tagsIR { // explode []string

		tagsIIV := tagsIIR // string as string
		tagsIC = append(tagsIC, tagsIIV)
	}

	// items.CollectionFormat: ""
	tagsIS := swag.JoinByFormat(tagsIC, "")

	return tagsIS
}
