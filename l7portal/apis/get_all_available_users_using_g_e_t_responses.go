// Code generated by go-swagger; DO NOT EDIT.

package apis

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// GetAllAvailableUsersUsingGETReader is a Reader for the GetAllAvailableUsersUsingGET structure.
type GetAllAvailableUsersUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllAvailableUsersUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllAvailableUsersUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllAvailableUsersUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllAvailableUsersUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllAvailableUsersUsingGETOK creates a GetAllAvailableUsersUsingGETOK with default headers values
func NewGetAllAvailableUsersUsingGETOK() *GetAllAvailableUsersUsingGETOK {
	return &GetAllAvailableUsersUsingGETOK{}
}

/*
GetAllAvailableUsersUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllAvailableUsersUsingGETOK struct {
	Payload []*models.UserDto
}

// IsSuccess returns true when this get all available users using g e t o k response has a 2xx status code
func (o *GetAllAvailableUsersUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all available users using g e t o k response has a 3xx status code
func (o *GetAllAvailableUsersUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all available users using g e t o k response has a 4xx status code
func (o *GetAllAvailableUsersUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all available users using g e t o k response has a 5xx status code
func (o *GetAllAvailableUsersUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all available users using g e t o k response a status code equal to that given
func (o *GetAllAvailableUsersUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all available users using g e t o k response
func (o *GetAllAvailableUsersUsingGETOK) Code() int {
	return 200
}

func (o *GetAllAvailableUsersUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /api-management/0.1/permissions/apis/{apiUuid}/available-users][%d] getAllAvailableUsersUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllAvailableUsersUsingGETOK) String() string {
	return fmt.Sprintf("[GET /api-management/0.1/permissions/apis/{apiUuid}/available-users][%d] getAllAvailableUsersUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllAvailableUsersUsingGETOK) GetPayload() []*models.UserDto {
	return o.Payload
}

func (o *GetAllAvailableUsersUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllAvailableUsersUsingGETBadRequest creates a GetAllAvailableUsersUsingGETBadRequest with default headers values
func NewGetAllAvailableUsersUsingGETBadRequest() *GetAllAvailableUsersUsingGETBadRequest {
	return &GetAllAvailableUsersUsingGETBadRequest{}
}

/*
GetAllAvailableUsersUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllAvailableUsersUsingGETBadRequest struct {
}

// IsSuccess returns true when this get all available users using g e t bad request response has a 2xx status code
func (o *GetAllAvailableUsersUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all available users using g e t bad request response has a 3xx status code
func (o *GetAllAvailableUsersUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all available users using g e t bad request response has a 4xx status code
func (o *GetAllAvailableUsersUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all available users using g e t bad request response has a 5xx status code
func (o *GetAllAvailableUsersUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all available users using g e t bad request response a status code equal to that given
func (o *GetAllAvailableUsersUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all available users using g e t bad request response
func (o *GetAllAvailableUsersUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetAllAvailableUsersUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /api-management/0.1/permissions/apis/{apiUuid}/available-users][%d] getAllAvailableUsersUsingGETBadRequest ", 400)
}

func (o *GetAllAvailableUsersUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /api-management/0.1/permissions/apis/{apiUuid}/available-users][%d] getAllAvailableUsersUsingGETBadRequest ", 400)
}

func (o *GetAllAvailableUsersUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllAvailableUsersUsingGETInternalServerError creates a GetAllAvailableUsersUsingGETInternalServerError with default headers values
func NewGetAllAvailableUsersUsingGETInternalServerError() *GetAllAvailableUsersUsingGETInternalServerError {
	return &GetAllAvailableUsersUsingGETInternalServerError{}
}

/*
GetAllAvailableUsersUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Failure
*/
type GetAllAvailableUsersUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get all available users using g e t internal server error response has a 2xx status code
func (o *GetAllAvailableUsersUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all available users using g e t internal server error response has a 3xx status code
func (o *GetAllAvailableUsersUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all available users using g e t internal server error response has a 4xx status code
func (o *GetAllAvailableUsersUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all available users using g e t internal server error response has a 5xx status code
func (o *GetAllAvailableUsersUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all available users using g e t internal server error response a status code equal to that given
func (o *GetAllAvailableUsersUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all available users using g e t internal server error response
func (o *GetAllAvailableUsersUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetAllAvailableUsersUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api-management/0.1/permissions/apis/{apiUuid}/available-users][%d] getAllAvailableUsersUsingGETInternalServerError ", 500)
}

func (o *GetAllAvailableUsersUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /api-management/0.1/permissions/apis/{apiUuid}/available-users][%d] getAllAvailableUsersUsingGETInternalServerError ", 500)
}

func (o *GetAllAvailableUsersUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
