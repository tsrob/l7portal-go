// Code generated by go-swagger; DO NOT EDIT.

package apis

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// GetAPIUsageReader is a Reader for the GetAPIUsage structure.
type GetAPIUsageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIUsageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIUsageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIUsageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAPIUsageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIUsageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAPIUsageOK creates a GetAPIUsageOK with default headers values
func NewGetAPIUsageOK() *GetAPIUsageOK {
	return &GetAPIUsageOK{}
}

/*
GetAPIUsageOK describes a response with status code 200, with default header values.

GetAPIUsageOK get Api usage o k
*/
type GetAPIUsageOK struct {
	Payload *models.APIUsage
}

// IsSuccess returns true when this get Api usage o k response has a 2xx status code
func (o *GetAPIUsageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api usage o k response has a 3xx status code
func (o *GetAPIUsageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api usage o k response has a 4xx status code
func (o *GetAPIUsageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api usage o k response has a 5xx status code
func (o *GetAPIUsageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api usage o k response a status code equal to that given
func (o *GetAPIUsageOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api usage o k response
func (o *GetAPIUsageOK) Code() int {
	return 200
}

func (o *GetAPIUsageOK) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/apis/{apiUuid}/usage][%d] getApiUsageOK  %+v", 200, o.Payload)
}

func (o *GetAPIUsageOK) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/apis/{apiUuid}/usage][%d] getApiUsageOK  %+v", 200, o.Payload)
}

func (o *GetAPIUsageOK) GetPayload() *models.APIUsage {
	return o.Payload
}

func (o *GetAPIUsageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIUsage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIUsageBadRequest creates a GetAPIUsageBadRequest with default headers values
func NewGetAPIUsageBadRequest() *GetAPIUsageBadRequest {
	return &GetAPIUsageBadRequest{}
}

/*
GetAPIUsageBadRequest describes a response with status code 400, with default header values.

Bad Request due to Invalid Uuid.
*/
type GetAPIUsageBadRequest struct {
	Payload *models.LongerError
}

// IsSuccess returns true when this get Api usage bad request response has a 2xx status code
func (o *GetAPIUsageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api usage bad request response has a 3xx status code
func (o *GetAPIUsageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api usage bad request response has a 4xx status code
func (o *GetAPIUsageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api usage bad request response has a 5xx status code
func (o *GetAPIUsageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api usage bad request response a status code equal to that given
func (o *GetAPIUsageBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api usage bad request response
func (o *GetAPIUsageBadRequest) Code() int {
	return 400
}

func (o *GetAPIUsageBadRequest) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/apis/{apiUuid}/usage][%d] getApiUsageBadRequest  %+v", 400, o.Payload)
}

func (o *GetAPIUsageBadRequest) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/apis/{apiUuid}/usage][%d] getApiUsageBadRequest  %+v", 400, o.Payload)
}

func (o *GetAPIUsageBadRequest) GetPayload() *models.LongerError {
	return o.Payload
}

func (o *GetAPIUsageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LongerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIUsageNotFound creates a GetAPIUsageNotFound with default headers values
func NewGetAPIUsageNotFound() *GetAPIUsageNotFound {
	return &GetAPIUsageNotFound{}
}

/*
GetAPIUsageNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type GetAPIUsageNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get Api usage not found response has a 2xx status code
func (o *GetAPIUsageNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api usage not found response has a 3xx status code
func (o *GetAPIUsageNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api usage not found response has a 4xx status code
func (o *GetAPIUsageNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api usage not found response has a 5xx status code
func (o *GetAPIUsageNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api usage not found response a status code equal to that given
func (o *GetAPIUsageNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get Api usage not found response
func (o *GetAPIUsageNotFound) Code() int {
	return 404
}

func (o *GetAPIUsageNotFound) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/apis/{apiUuid}/usage][%d] getApiUsageNotFound  %+v", 404, o.Payload)
}

func (o *GetAPIUsageNotFound) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/apis/{apiUuid}/usage][%d] getApiUsageNotFound  %+v", 404, o.Payload)
}

func (o *GetAPIUsageNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAPIUsageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIUsageInternalServerError creates a GetAPIUsageInternalServerError with default headers values
func NewGetAPIUsageInternalServerError() *GetAPIUsageInternalServerError {
	return &GetAPIUsageInternalServerError{}
}

/*
GetAPIUsageInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type GetAPIUsageInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get Api usage internal server error response has a 2xx status code
func (o *GetAPIUsageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api usage internal server error response has a 3xx status code
func (o *GetAPIUsageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api usage internal server error response has a 4xx status code
func (o *GetAPIUsageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api usage internal server error response has a 5xx status code
func (o *GetAPIUsageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api usage internal server error response a status code equal to that given
func (o *GetAPIUsageInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api usage internal server error response
func (o *GetAPIUsageInternalServerError) Code() int {
	return 500
}

func (o *GetAPIUsageInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/apis/{apiUuid}/usage][%d] getApiUsageInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAPIUsageInternalServerError) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/apis/{apiUuid}/usage][%d] getApiUsageInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAPIUsageInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAPIUsageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
