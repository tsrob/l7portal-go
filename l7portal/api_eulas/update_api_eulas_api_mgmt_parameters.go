// Code generated by go-swagger; DO NOT EDIT.

package api_eulas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/tsrob/l7portal-go/models"
)

// NewUpdateAPIEulasAPIMgmtParams creates a new UpdateAPIEulasAPIMgmtParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateAPIEulasAPIMgmtParams() *UpdateAPIEulasAPIMgmtParams {
	return &UpdateAPIEulasAPIMgmtParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateAPIEulasAPIMgmtParamsWithTimeout creates a new UpdateAPIEulasAPIMgmtParams object
// with the ability to set a timeout on a request.
func NewUpdateAPIEulasAPIMgmtParamsWithTimeout(timeout time.Duration) *UpdateAPIEulasAPIMgmtParams {
	return &UpdateAPIEulasAPIMgmtParams{
		timeout: timeout,
	}
}

// NewUpdateAPIEulasAPIMgmtParamsWithContext creates a new UpdateAPIEulasAPIMgmtParams object
// with the ability to set a context for a request.
func NewUpdateAPIEulasAPIMgmtParamsWithContext(ctx context.Context) *UpdateAPIEulasAPIMgmtParams {
	return &UpdateAPIEulasAPIMgmtParams{
		Context: ctx,
	}
}

// NewUpdateAPIEulasAPIMgmtParamsWithHTTPClient creates a new UpdateAPIEulasAPIMgmtParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateAPIEulasAPIMgmtParamsWithHTTPClient(client *http.Client) *UpdateAPIEulasAPIMgmtParams {
	return &UpdateAPIEulasAPIMgmtParams{
		HTTPClient: client,
	}
}

/*
UpdateAPIEulasAPIMgmtParams contains all the parameters to send to the API endpoint

	for the update Api eulas Api mgmt operation.

	Typically these are written to a http.Request.
*/
type UpdateAPIEulasAPIMgmtParams struct {

	/* Body.

	   Update an existing API EULA.
	*/
	Body *models.EulaPut

	/* ForceUpdate.

	   If true, EULA is updated even if associated with APIs.
	*/
	ForceUpdate *bool

	/* UUID.

	   The UUID of the API EULA to update.
	*/
	UUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update Api eulas Api mgmt params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateAPIEulasAPIMgmtParams) WithDefaults() *UpdateAPIEulasAPIMgmtParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update Api eulas Api mgmt params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateAPIEulasAPIMgmtParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update Api eulas Api mgmt params
func (o *UpdateAPIEulasAPIMgmtParams) WithTimeout(timeout time.Duration) *UpdateAPIEulasAPIMgmtParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update Api eulas Api mgmt params
func (o *UpdateAPIEulasAPIMgmtParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update Api eulas Api mgmt params
func (o *UpdateAPIEulasAPIMgmtParams) WithContext(ctx context.Context) *UpdateAPIEulasAPIMgmtParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update Api eulas Api mgmt params
func (o *UpdateAPIEulasAPIMgmtParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update Api eulas Api mgmt params
func (o *UpdateAPIEulasAPIMgmtParams) WithHTTPClient(client *http.Client) *UpdateAPIEulasAPIMgmtParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update Api eulas Api mgmt params
func (o *UpdateAPIEulasAPIMgmtParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update Api eulas Api mgmt params
func (o *UpdateAPIEulasAPIMgmtParams) WithBody(body *models.EulaPut) *UpdateAPIEulasAPIMgmtParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update Api eulas Api mgmt params
func (o *UpdateAPIEulasAPIMgmtParams) SetBody(body *models.EulaPut) {
	o.Body = body
}

// WithForceUpdate adds the forceUpdate to the update Api eulas Api mgmt params
func (o *UpdateAPIEulasAPIMgmtParams) WithForceUpdate(forceUpdate *bool) *UpdateAPIEulasAPIMgmtParams {
	o.SetForceUpdate(forceUpdate)
	return o
}

// SetForceUpdate adds the forceUpdate to the update Api eulas Api mgmt params
func (o *UpdateAPIEulasAPIMgmtParams) SetForceUpdate(forceUpdate *bool) {
	o.ForceUpdate = forceUpdate
}

// WithUUID adds the uuid to the update Api eulas Api mgmt params
func (o *UpdateAPIEulasAPIMgmtParams) WithUUID(uuid string) *UpdateAPIEulasAPIMgmtParams {
	o.SetUUID(uuid)
	return o
}

// SetUUID adds the uuid to the update Api eulas Api mgmt params
func (o *UpdateAPIEulasAPIMgmtParams) SetUUID(uuid string) {
	o.UUID = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateAPIEulasAPIMgmtParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.ForceUpdate != nil {

		// query param forceUpdate
		var qrForceUpdate bool

		if o.ForceUpdate != nil {
			qrForceUpdate = *o.ForceUpdate
		}
		qForceUpdate := swag.FormatBool(qrForceUpdate)
		if qForceUpdate != "" {

			if err := r.SetQueryParam("forceUpdate", qForceUpdate); err != nil {
				return err
			}
		}
	}

	// path param uuid
	if err := r.SetPathParam("uuid", o.UUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
