// Code generated by go-swagger; DO NOT EDIT.

package role_mappings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// CreateRoleMappingsReader is a Reader for the CreateRoleMappings structure.
type CreateRoleMappingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRoleMappingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateRoleMappingsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateRoleMappingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateRoleMappingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateRoleMappingsCreated creates a CreateRoleMappingsCreated with default headers values
func NewCreateRoleMappingsCreated() *CreateRoleMappingsCreated {
	return &CreateRoleMappingsCreated{}
}

/*
CreateRoleMappingsCreated describes a response with status code 201, with default header values.

An object describing a single newly created User.
*/
type CreateRoleMappingsCreated struct {
	Payload *models.RoleMapping
}

// IsSuccess returns true when this create role mappings created response has a 2xx status code
func (o *CreateRoleMappingsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create role mappings created response has a 3xx status code
func (o *CreateRoleMappingsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create role mappings created response has a 4xx status code
func (o *CreateRoleMappingsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create role mappings created response has a 5xx status code
func (o *CreateRoleMappingsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create role mappings created response a status code equal to that given
func (o *CreateRoleMappingsCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create role mappings created response
func (o *CreateRoleMappingsCreated) Code() int {
	return 201
}

func (o *CreateRoleMappingsCreated) Error() string {
	return fmt.Sprintf("[POST /v2/role-mappings][%d] createRoleMappingsCreated  %+v", 201, o.Payload)
}

func (o *CreateRoleMappingsCreated) String() string {
	return fmt.Sprintf("[POST /v2/role-mappings][%d] createRoleMappingsCreated  %+v", 201, o.Payload)
}

func (o *CreateRoleMappingsCreated) GetPayload() *models.RoleMapping {
	return o.Payload
}

func (o *CreateRoleMappingsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RoleMapping)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRoleMappingsBadRequest creates a CreateRoleMappingsBadRequest with default headers values
func NewCreateRoleMappingsBadRequest() *CreateRoleMappingsBadRequest {
	return &CreateRoleMappingsBadRequest{}
}

/*
CreateRoleMappingsBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type CreateRoleMappingsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create role mappings bad request response has a 2xx status code
func (o *CreateRoleMappingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create role mappings bad request response has a 3xx status code
func (o *CreateRoleMappingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create role mappings bad request response has a 4xx status code
func (o *CreateRoleMappingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create role mappings bad request response has a 5xx status code
func (o *CreateRoleMappingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create role mappings bad request response a status code equal to that given
func (o *CreateRoleMappingsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create role mappings bad request response
func (o *CreateRoleMappingsBadRequest) Code() int {
	return 400
}

func (o *CreateRoleMappingsBadRequest) Error() string {
	return fmt.Sprintf("[POST /v2/role-mappings][%d] createRoleMappingsBadRequest  %+v", 400, o.Payload)
}

func (o *CreateRoleMappingsBadRequest) String() string {
	return fmt.Sprintf("[POST /v2/role-mappings][%d] createRoleMappingsBadRequest  %+v", 400, o.Payload)
}

func (o *CreateRoleMappingsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateRoleMappingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRoleMappingsInternalServerError creates a CreateRoleMappingsInternalServerError with default headers values
func NewCreateRoleMappingsInternalServerError() *CreateRoleMappingsInternalServerError {
	return &CreateRoleMappingsInternalServerError{}
}

/*
CreateRoleMappingsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type CreateRoleMappingsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this create role mappings internal server error response has a 2xx status code
func (o *CreateRoleMappingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create role mappings internal server error response has a 3xx status code
func (o *CreateRoleMappingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create role mappings internal server error response has a 4xx status code
func (o *CreateRoleMappingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create role mappings internal server error response has a 5xx status code
func (o *CreateRoleMappingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create role mappings internal server error response a status code equal to that given
func (o *CreateRoleMappingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create role mappings internal server error response
func (o *CreateRoleMappingsInternalServerError) Code() int {
	return 500
}

func (o *CreateRoleMappingsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v2/role-mappings][%d] createRoleMappingsInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateRoleMappingsInternalServerError) String() string {
	return fmt.Sprintf("[POST /v2/role-mappings][%d] createRoleMappingsInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateRoleMappingsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateRoleMappingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
