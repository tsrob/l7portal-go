// Code generated by go-swagger; DO NOT EDIT.

package requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetRequestsParams creates a new GetRequestsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetRequestsParams() *GetRequestsParams {
	return &GetRequestsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetRequestsParamsWithTimeout creates a new GetRequestsParams object
// with the ability to set a timeout on a request.
func NewGetRequestsParamsWithTimeout(timeout time.Duration) *GetRequestsParams {
	return &GetRequestsParams{
		timeout: timeout,
	}
}

// NewGetRequestsParamsWithContext creates a new GetRequestsParams object
// with the ability to set a context for a request.
func NewGetRequestsParamsWithContext(ctx context.Context) *GetRequestsParams {
	return &GetRequestsParams{
		Context: ctx,
	}
}

// NewGetRequestsParamsWithHTTPClient creates a new GetRequestsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetRequestsParamsWithHTTPClient(client *http.Client) *GetRequestsParams {
	return &GetRequestsParams{
		HTTPClient: client,
	}
}

/*
GetRequestsParams contains all the parameters to send to the API endpoint

	for the get requests operation.

	Typically these are written to a http.Request.
*/
type GetRequestsParams struct {

	/* EntityName.

	   The Entity name (either Application's name or User's email) that the request belongs to.
	*/
	EntityName *string

	/* EntityUUID.

	   The Entity (Application/User) Uuid that the request belongs to.
	*/
	EntityUUID *string

	/* OrganizationName.

	   The Organization that the request belongs to.
	*/
	OrganizationName *string

	/* PageNum.

	   The specific page of request to fetch.
	*/
	PageNum *int64

	/* PageSize.

	   The number of requests to fetch on a page.
	*/
	PageSize *int64

	/* RequestStatus.

	   The status of request to fetch.
	*/
	RequestStatus *string

	/* RequestType.

	   The type of request to fetch.
	*/
	RequestType *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get requests params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRequestsParams) WithDefaults() *GetRequestsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get requests params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRequestsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get requests params
func (o *GetRequestsParams) WithTimeout(timeout time.Duration) *GetRequestsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get requests params
func (o *GetRequestsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get requests params
func (o *GetRequestsParams) WithContext(ctx context.Context) *GetRequestsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get requests params
func (o *GetRequestsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get requests params
func (o *GetRequestsParams) WithHTTPClient(client *http.Client) *GetRequestsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get requests params
func (o *GetRequestsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEntityName adds the entityName to the get requests params
func (o *GetRequestsParams) WithEntityName(entityName *string) *GetRequestsParams {
	o.SetEntityName(entityName)
	return o
}

// SetEntityName adds the entityName to the get requests params
func (o *GetRequestsParams) SetEntityName(entityName *string) {
	o.EntityName = entityName
}

// WithEntityUUID adds the entityUUID to the get requests params
func (o *GetRequestsParams) WithEntityUUID(entityUUID *string) *GetRequestsParams {
	o.SetEntityUUID(entityUUID)
	return o
}

// SetEntityUUID adds the entityUuid to the get requests params
func (o *GetRequestsParams) SetEntityUUID(entityUUID *string) {
	o.EntityUUID = entityUUID
}

// WithOrganizationName adds the organizationName to the get requests params
func (o *GetRequestsParams) WithOrganizationName(organizationName *string) *GetRequestsParams {
	o.SetOrganizationName(organizationName)
	return o
}

// SetOrganizationName adds the organizationName to the get requests params
func (o *GetRequestsParams) SetOrganizationName(organizationName *string) {
	o.OrganizationName = organizationName
}

// WithPageNum adds the pageNum to the get requests params
func (o *GetRequestsParams) WithPageNum(pageNum *int64) *GetRequestsParams {
	o.SetPageNum(pageNum)
	return o
}

// SetPageNum adds the pageNum to the get requests params
func (o *GetRequestsParams) SetPageNum(pageNum *int64) {
	o.PageNum = pageNum
}

// WithPageSize adds the pageSize to the get requests params
func (o *GetRequestsParams) WithPageSize(pageSize *int64) *GetRequestsParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get requests params
func (o *GetRequestsParams) SetPageSize(pageSize *int64) {
	o.PageSize = pageSize
}

// WithRequestStatus adds the requestStatus to the get requests params
func (o *GetRequestsParams) WithRequestStatus(requestStatus *string) *GetRequestsParams {
	o.SetRequestStatus(requestStatus)
	return o
}

// SetRequestStatus adds the requestStatus to the get requests params
func (o *GetRequestsParams) SetRequestStatus(requestStatus *string) {
	o.RequestStatus = requestStatus
}

// WithRequestType adds the requestType to the get requests params
func (o *GetRequestsParams) WithRequestType(requestType *string) *GetRequestsParams {
	o.SetRequestType(requestType)
	return o
}

// SetRequestType adds the requestType to the get requests params
func (o *GetRequestsParams) SetRequestType(requestType *string) {
	o.RequestType = requestType
}

// WriteToRequest writes these params to a swagger request
func (o *GetRequestsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EntityName != nil {

		// query param entityName
		var qrEntityName string

		if o.EntityName != nil {
			qrEntityName = *o.EntityName
		}
		qEntityName := qrEntityName
		if qEntityName != "" {

			if err := r.SetQueryParam("entityName", qEntityName); err != nil {
				return err
			}
		}
	}

	if o.EntityUUID != nil {

		// query param entityUuid
		var qrEntityUUID string

		if o.EntityUUID != nil {
			qrEntityUUID = *o.EntityUUID
		}
		qEntityUUID := qrEntityUUID
		if qEntityUUID != "" {

			if err := r.SetQueryParam("entityUuid", qEntityUUID); err != nil {
				return err
			}
		}
	}

	if o.OrganizationName != nil {

		// query param organizationName
		var qrOrganizationName string

		if o.OrganizationName != nil {
			qrOrganizationName = *o.OrganizationName
		}
		qOrganizationName := qrOrganizationName
		if qOrganizationName != "" {

			if err := r.SetQueryParam("organizationName", qOrganizationName); err != nil {
				return err
			}
		}
	}

	if o.PageNum != nil {

		// query param pageNum
		var qrPageNum int64

		if o.PageNum != nil {
			qrPageNum = *o.PageNum
		}
		qPageNum := swag.FormatInt64(qrPageNum)
		if qPageNum != "" {

			if err := r.SetQueryParam("pageNum", qPageNum); err != nil {
				return err
			}
		}
	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize int64

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt64(qrPageSize)
		if qPageSize != "" {

			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}
	}

	if o.RequestStatus != nil {

		// query param requestStatus
		var qrRequestStatus string

		if o.RequestStatus != nil {
			qrRequestStatus = *o.RequestStatus
		}
		qRequestStatus := qrRequestStatus
		if qRequestStatus != "" {

			if err := r.SetQueryParam("requestStatus", qRequestStatus); err != nil {
				return err
			}
		}
	}

	if o.RequestType != nil {

		// query param requestType
		var qrRequestType string

		if o.RequestType != nil {
			qrRequestType = *o.RequestType
		}
		qRequestType := qrRequestType
		if qRequestType != "" {

			if err := r.SetQueryParam("requestType", qRequestType); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
