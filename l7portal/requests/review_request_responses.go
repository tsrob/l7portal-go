// Code generated by go-swagger; DO NOT EDIT.

package requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// ReviewRequestReader is a Reader for the ReviewRequest structure.
type ReviewRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReviewRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewReviewRequestNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReviewRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReviewRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewReviewRequestNoContent creates a ReviewRequestNoContent with default headers values
func NewReviewRequestNoContent() *ReviewRequestNoContent {
	return &ReviewRequestNoContent{}
}

/*
ReviewRequestNoContent describes a response with status code 204, with default header values.

Success, no content to show
*/
type ReviewRequestNoContent struct {
}

// IsSuccess returns true when this review request no content response has a 2xx status code
func (o *ReviewRequestNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this review request no content response has a 3xx status code
func (o *ReviewRequestNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this review request no content response has a 4xx status code
func (o *ReviewRequestNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this review request no content response has a 5xx status code
func (o *ReviewRequestNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this review request no content response a status code equal to that given
func (o *ReviewRequestNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the review request no content response
func (o *ReviewRequestNoContent) Code() int {
	return 204
}

func (o *ReviewRequestNoContent) Error() string {
	return fmt.Sprintf("[PUT /api-management/1.0/requests/{uuid}/reviews][%d] reviewRequestNoContent ", 204)
}

func (o *ReviewRequestNoContent) String() string {
	return fmt.Sprintf("[PUT /api-management/1.0/requests/{uuid}/reviews][%d] reviewRequestNoContent ", 204)
}

func (o *ReviewRequestNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReviewRequestBadRequest creates a ReviewRequestBadRequest with default headers values
func NewReviewRequestBadRequest() *ReviewRequestBadRequest {
	return &ReviewRequestBadRequest{}
}

/*
ReviewRequestBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type ReviewRequestBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this review request bad request response has a 2xx status code
func (o *ReviewRequestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this review request bad request response has a 3xx status code
func (o *ReviewRequestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this review request bad request response has a 4xx status code
func (o *ReviewRequestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this review request bad request response has a 5xx status code
func (o *ReviewRequestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this review request bad request response a status code equal to that given
func (o *ReviewRequestBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the review request bad request response
func (o *ReviewRequestBadRequest) Code() int {
	return 400
}

func (o *ReviewRequestBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api-management/1.0/requests/{uuid}/reviews][%d] reviewRequestBadRequest  %+v", 400, o.Payload)
}

func (o *ReviewRequestBadRequest) String() string {
	return fmt.Sprintf("[PUT /api-management/1.0/requests/{uuid}/reviews][%d] reviewRequestBadRequest  %+v", 400, o.Payload)
}

func (o *ReviewRequestBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ReviewRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReviewRequestNotFound creates a ReviewRequestNotFound with default headers values
func NewReviewRequestNotFound() *ReviewRequestNotFound {
	return &ReviewRequestNotFound{}
}

/*
ReviewRequestNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type ReviewRequestNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this review request not found response has a 2xx status code
func (o *ReviewRequestNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this review request not found response has a 3xx status code
func (o *ReviewRequestNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this review request not found response has a 4xx status code
func (o *ReviewRequestNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this review request not found response has a 5xx status code
func (o *ReviewRequestNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this review request not found response a status code equal to that given
func (o *ReviewRequestNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the review request not found response
func (o *ReviewRequestNotFound) Code() int {
	return 404
}

func (o *ReviewRequestNotFound) Error() string {
	return fmt.Sprintf("[PUT /api-management/1.0/requests/{uuid}/reviews][%d] reviewRequestNotFound  %+v", 404, o.Payload)
}

func (o *ReviewRequestNotFound) String() string {
	return fmt.Sprintf("[PUT /api-management/1.0/requests/{uuid}/reviews][%d] reviewRequestNotFound  %+v", 404, o.Payload)
}

func (o *ReviewRequestNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ReviewRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
