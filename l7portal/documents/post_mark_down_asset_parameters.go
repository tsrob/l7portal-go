// Code generated by go-swagger; DO NOT EDIT.

package documents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// NewPostMarkDownAssetParams creates a new PostMarkDownAssetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostMarkDownAssetParams() *PostMarkDownAssetParams {
	return &PostMarkDownAssetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostMarkDownAssetParamsWithTimeout creates a new PostMarkDownAssetParams object
// with the ability to set a timeout on a request.
func NewPostMarkDownAssetParamsWithTimeout(timeout time.Duration) *PostMarkDownAssetParams {
	return &PostMarkDownAssetParams{
		timeout: timeout,
	}
}

// NewPostMarkDownAssetParamsWithContext creates a new PostMarkDownAssetParams object
// with the ability to set a context for a request.
func NewPostMarkDownAssetParamsWithContext(ctx context.Context) *PostMarkDownAssetParams {
	return &PostMarkDownAssetParams{
		Context: ctx,
	}
}

// NewPostMarkDownAssetParamsWithHTTPClient creates a new PostMarkDownAssetParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostMarkDownAssetParamsWithHTTPClient(client *http.Client) *PostMarkDownAssetParams {
	return &PostMarkDownAssetParams{
		HTTPClient: client,
	}
}

/*
PostMarkDownAssetParams contains all the parameters to send to the API endpoint

	for the post mark down asset operation.

	Typically these are written to a http.Request.
*/
type PostMarkDownAssetParams struct {

	/* Body.

	   Provides the values that are needed to add or update a document.
	*/
	Body *models.DocumentServicePost

	/* Navtitle.

	   The navigation title for the document.
	*/
	Navtitle string

	/* Type.

	   The entity type associated to the document. For example, api and application.
	*/
	Type string

	/* TypeUUID.

	   The UUID of the entity associated with the document.
	*/
	TypeUUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post mark down asset params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostMarkDownAssetParams) WithDefaults() *PostMarkDownAssetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post mark down asset params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostMarkDownAssetParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post mark down asset params
func (o *PostMarkDownAssetParams) WithTimeout(timeout time.Duration) *PostMarkDownAssetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post mark down asset params
func (o *PostMarkDownAssetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post mark down asset params
func (o *PostMarkDownAssetParams) WithContext(ctx context.Context) *PostMarkDownAssetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post mark down asset params
func (o *PostMarkDownAssetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post mark down asset params
func (o *PostMarkDownAssetParams) WithHTTPClient(client *http.Client) *PostMarkDownAssetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post mark down asset params
func (o *PostMarkDownAssetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the post mark down asset params
func (o *PostMarkDownAssetParams) WithBody(body *models.DocumentServicePost) *PostMarkDownAssetParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post mark down asset params
func (o *PostMarkDownAssetParams) SetBody(body *models.DocumentServicePost) {
	o.Body = body
}

// WithNavtitle adds the navtitle to the post mark down asset params
func (o *PostMarkDownAssetParams) WithNavtitle(navtitle string) *PostMarkDownAssetParams {
	o.SetNavtitle(navtitle)
	return o
}

// SetNavtitle adds the navtitle to the post mark down asset params
func (o *PostMarkDownAssetParams) SetNavtitle(navtitle string) {
	o.Navtitle = navtitle
}

// WithType adds the typeVar to the post mark down asset params
func (o *PostMarkDownAssetParams) WithType(typeVar string) *PostMarkDownAssetParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the post mark down asset params
func (o *PostMarkDownAssetParams) SetType(typeVar string) {
	o.Type = typeVar
}

// WithTypeUUID adds the typeUUID to the post mark down asset params
func (o *PostMarkDownAssetParams) WithTypeUUID(typeUUID string) *PostMarkDownAssetParams {
	o.SetTypeUUID(typeUUID)
	return o
}

// SetTypeUUID adds the typeUuid to the post mark down asset params
func (o *PostMarkDownAssetParams) SetTypeUUID(typeUUID string) {
	o.TypeUUID = typeUUID
}

// WriteToRequest writes these params to a swagger request
func (o *PostMarkDownAssetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param navtitle
	if err := r.SetPathParam("navtitle", o.Navtitle); err != nil {
		return err
	}

	// path param type
	if err := r.SetPathParam("type", o.Type); err != nil {
		return err
	}

	// path param typeUuid
	if err := r.SetPathParam("typeUuid", o.TypeUUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
