// Code generated by go-swagger; DO NOT EDIT.

package documents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// PutMarkDownAssetReader is a Reader for the PutMarkDownAsset structure.
type PutMarkDownAssetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutMarkDownAssetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutMarkDownAssetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutMarkDownAssetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutMarkDownAssetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutMarkDownAssetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutMarkDownAssetOK creates a PutMarkDownAssetOK with default headers values
func NewPutMarkDownAssetOK() *PutMarkDownAssetOK {
	return &PutMarkDownAssetOK{}
}

/*
PutMarkDownAssetOK describes a response with status code 200, with default header values.

Ok
*/
type PutMarkDownAssetOK struct {
	Payload *models.DocumentServicePut
}

// IsSuccess returns true when this put mark down asset o k response has a 2xx status code
func (o *PutMarkDownAssetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put mark down asset o k response has a 3xx status code
func (o *PutMarkDownAssetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put mark down asset o k response has a 4xx status code
func (o *PutMarkDownAssetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put mark down asset o k response has a 5xx status code
func (o *PutMarkDownAssetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put mark down asset o k response a status code equal to that given
func (o *PutMarkDownAssetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put mark down asset o k response
func (o *PutMarkDownAssetOK) Code() int {
	return 200
}

func (o *PutMarkDownAssetOK) Error() string {
	return fmt.Sprintf("[PUT /document-service/1.0/docs/{type}/{typeUuid}/{navtitle}][%d] putMarkDownAssetOK  %+v", 200, o.Payload)
}

func (o *PutMarkDownAssetOK) String() string {
	return fmt.Sprintf("[PUT /document-service/1.0/docs/{type}/{typeUuid}/{navtitle}][%d] putMarkDownAssetOK  %+v", 200, o.Payload)
}

func (o *PutMarkDownAssetOK) GetPayload() *models.DocumentServicePut {
	return o.Payload
}

func (o *PutMarkDownAssetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DocumentServicePut)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutMarkDownAssetBadRequest creates a PutMarkDownAssetBadRequest with default headers values
func NewPutMarkDownAssetBadRequest() *PutMarkDownAssetBadRequest {
	return &PutMarkDownAssetBadRequest{}
}

/*
PutMarkDownAssetBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type PutMarkDownAssetBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this put mark down asset bad request response has a 2xx status code
func (o *PutMarkDownAssetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put mark down asset bad request response has a 3xx status code
func (o *PutMarkDownAssetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put mark down asset bad request response has a 4xx status code
func (o *PutMarkDownAssetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put mark down asset bad request response has a 5xx status code
func (o *PutMarkDownAssetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put mark down asset bad request response a status code equal to that given
func (o *PutMarkDownAssetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put mark down asset bad request response
func (o *PutMarkDownAssetBadRequest) Code() int {
	return 400
}

func (o *PutMarkDownAssetBadRequest) Error() string {
	return fmt.Sprintf("[PUT /document-service/1.0/docs/{type}/{typeUuid}/{navtitle}][%d] putMarkDownAssetBadRequest  %+v", 400, o.Payload)
}

func (o *PutMarkDownAssetBadRequest) String() string {
	return fmt.Sprintf("[PUT /document-service/1.0/docs/{type}/{typeUuid}/{navtitle}][%d] putMarkDownAssetBadRequest  %+v", 400, o.Payload)
}

func (o *PutMarkDownAssetBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutMarkDownAssetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutMarkDownAssetNotFound creates a PutMarkDownAssetNotFound with default headers values
func NewPutMarkDownAssetNotFound() *PutMarkDownAssetNotFound {
	return &PutMarkDownAssetNotFound{}
}

/*
PutMarkDownAssetNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type PutMarkDownAssetNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this put mark down asset not found response has a 2xx status code
func (o *PutMarkDownAssetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put mark down asset not found response has a 3xx status code
func (o *PutMarkDownAssetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put mark down asset not found response has a 4xx status code
func (o *PutMarkDownAssetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put mark down asset not found response has a 5xx status code
func (o *PutMarkDownAssetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put mark down asset not found response a status code equal to that given
func (o *PutMarkDownAssetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put mark down asset not found response
func (o *PutMarkDownAssetNotFound) Code() int {
	return 404
}

func (o *PutMarkDownAssetNotFound) Error() string {
	return fmt.Sprintf("[PUT /document-service/1.0/docs/{type}/{typeUuid}/{navtitle}][%d] putMarkDownAssetNotFound  %+v", 404, o.Payload)
}

func (o *PutMarkDownAssetNotFound) String() string {
	return fmt.Sprintf("[PUT /document-service/1.0/docs/{type}/{typeUuid}/{navtitle}][%d] putMarkDownAssetNotFound  %+v", 404, o.Payload)
}

func (o *PutMarkDownAssetNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutMarkDownAssetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutMarkDownAssetInternalServerError creates a PutMarkDownAssetInternalServerError with default headers values
func NewPutMarkDownAssetInternalServerError() *PutMarkDownAssetInternalServerError {
	return &PutMarkDownAssetInternalServerError{}
}

/*
PutMarkDownAssetInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type PutMarkDownAssetInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this put mark down asset internal server error response has a 2xx status code
func (o *PutMarkDownAssetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put mark down asset internal server error response has a 3xx status code
func (o *PutMarkDownAssetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put mark down asset internal server error response has a 4xx status code
func (o *PutMarkDownAssetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put mark down asset internal server error response has a 5xx status code
func (o *PutMarkDownAssetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put mark down asset internal server error response a status code equal to that given
func (o *PutMarkDownAssetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the put mark down asset internal server error response
func (o *PutMarkDownAssetInternalServerError) Code() int {
	return 500
}

func (o *PutMarkDownAssetInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /document-service/1.0/docs/{type}/{typeUuid}/{navtitle}][%d] putMarkDownAssetInternalServerError  %+v", 500, o.Payload)
}

func (o *PutMarkDownAssetInternalServerError) String() string {
	return fmt.Sprintf("[PUT /document-service/1.0/docs/{type}/{typeUuid}/{navtitle}][%d] putMarkDownAssetInternalServerError  %+v", 500, o.Payload)
}

func (o *PutMarkDownAssetInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutMarkDownAssetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
