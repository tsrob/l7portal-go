// Code generated by go-swagger; DO NOT EDIT.

package applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/tsrob/l7portal-go/models"
)

// DetectifApplicationNameisUiqueReader is a Reader for the DetectifApplicationNameisUique structure.
type DetectifApplicationNameisUiqueReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DetectifApplicationNameisUiqueReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDetectifApplicationNameisUiqueOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDetectifApplicationNameisUiqueBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDetectifApplicationNameisUiqueNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDetectifApplicationNameisUiqueInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDetectifApplicationNameisUiqueOK creates a DetectifApplicationNameisUiqueOK with default headers values
func NewDetectifApplicationNameisUiqueOK() *DetectifApplicationNameisUiqueOK {
	return &DetectifApplicationNameisUiqueOK{}
}

/*
DetectifApplicationNameisUiqueOK describes a response with status code 200, with default header values.

OK
*/
type DetectifApplicationNameisUiqueOK struct {
	Payload *DetectifApplicationNameisUiqueOKBody
}

// IsSuccess returns true when this detectif application nameis uique o k response has a 2xx status code
func (o *DetectifApplicationNameisUiqueOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this detectif application nameis uique o k response has a 3xx status code
func (o *DetectifApplicationNameisUiqueOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this detectif application nameis uique o k response has a 4xx status code
func (o *DetectifApplicationNameisUiqueOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this detectif application nameis uique o k response has a 5xx status code
func (o *DetectifApplicationNameisUiqueOK) IsServerError() bool {
	return false
}

// IsCode returns true when this detectif application nameis uique o k response a status code equal to that given
func (o *DetectifApplicationNameisUiqueOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the detectif application nameis uique o k response
func (o *DetectifApplicationNameisUiqueOK) Code() int {
	return 200
}

func (o *DetectifApplicationNameisUiqueOK) Error() string {
	return fmt.Sprintf("[GET /api-management/0.1/applications/unique-name][%d] detectifApplicationNameisUiqueOK  %+v", 200, o.Payload)
}

func (o *DetectifApplicationNameisUiqueOK) String() string {
	return fmt.Sprintf("[GET /api-management/0.1/applications/unique-name][%d] detectifApplicationNameisUiqueOK  %+v", 200, o.Payload)
}

func (o *DetectifApplicationNameisUiqueOK) GetPayload() *DetectifApplicationNameisUiqueOKBody {
	return o.Payload
}

func (o *DetectifApplicationNameisUiqueOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DetectifApplicationNameisUiqueOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDetectifApplicationNameisUiqueBadRequest creates a DetectifApplicationNameisUiqueBadRequest with default headers values
func NewDetectifApplicationNameisUiqueBadRequest() *DetectifApplicationNameisUiqueBadRequest {
	return &DetectifApplicationNameisUiqueBadRequest{}
}

/*
DetectifApplicationNameisUiqueBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type DetectifApplicationNameisUiqueBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this detectif application nameis uique bad request response has a 2xx status code
func (o *DetectifApplicationNameisUiqueBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this detectif application nameis uique bad request response has a 3xx status code
func (o *DetectifApplicationNameisUiqueBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this detectif application nameis uique bad request response has a 4xx status code
func (o *DetectifApplicationNameisUiqueBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this detectif application nameis uique bad request response has a 5xx status code
func (o *DetectifApplicationNameisUiqueBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this detectif application nameis uique bad request response a status code equal to that given
func (o *DetectifApplicationNameisUiqueBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the detectif application nameis uique bad request response
func (o *DetectifApplicationNameisUiqueBadRequest) Code() int {
	return 400
}

func (o *DetectifApplicationNameisUiqueBadRequest) Error() string {
	return fmt.Sprintf("[GET /api-management/0.1/applications/unique-name][%d] detectifApplicationNameisUiqueBadRequest  %+v", 400, o.Payload)
}

func (o *DetectifApplicationNameisUiqueBadRequest) String() string {
	return fmt.Sprintf("[GET /api-management/0.1/applications/unique-name][%d] detectifApplicationNameisUiqueBadRequest  %+v", 400, o.Payload)
}

func (o *DetectifApplicationNameisUiqueBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DetectifApplicationNameisUiqueBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDetectifApplicationNameisUiqueNotFound creates a DetectifApplicationNameisUiqueNotFound with default headers values
func NewDetectifApplicationNameisUiqueNotFound() *DetectifApplicationNameisUiqueNotFound {
	return &DetectifApplicationNameisUiqueNotFound{}
}

/*
DetectifApplicationNameisUiqueNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type DetectifApplicationNameisUiqueNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this detectif application nameis uique not found response has a 2xx status code
func (o *DetectifApplicationNameisUiqueNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this detectif application nameis uique not found response has a 3xx status code
func (o *DetectifApplicationNameisUiqueNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this detectif application nameis uique not found response has a 4xx status code
func (o *DetectifApplicationNameisUiqueNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this detectif application nameis uique not found response has a 5xx status code
func (o *DetectifApplicationNameisUiqueNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this detectif application nameis uique not found response a status code equal to that given
func (o *DetectifApplicationNameisUiqueNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the detectif application nameis uique not found response
func (o *DetectifApplicationNameisUiqueNotFound) Code() int {
	return 404
}

func (o *DetectifApplicationNameisUiqueNotFound) Error() string {
	return fmt.Sprintf("[GET /api-management/0.1/applications/unique-name][%d] detectifApplicationNameisUiqueNotFound  %+v", 404, o.Payload)
}

func (o *DetectifApplicationNameisUiqueNotFound) String() string {
	return fmt.Sprintf("[GET /api-management/0.1/applications/unique-name][%d] detectifApplicationNameisUiqueNotFound  %+v", 404, o.Payload)
}

func (o *DetectifApplicationNameisUiqueNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DetectifApplicationNameisUiqueNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDetectifApplicationNameisUiqueInternalServerError creates a DetectifApplicationNameisUiqueInternalServerError with default headers values
func NewDetectifApplicationNameisUiqueInternalServerError() *DetectifApplicationNameisUiqueInternalServerError {
	return &DetectifApplicationNameisUiqueInternalServerError{}
}

/*
DetectifApplicationNameisUiqueInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type DetectifApplicationNameisUiqueInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this detectif application nameis uique internal server error response has a 2xx status code
func (o *DetectifApplicationNameisUiqueInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this detectif application nameis uique internal server error response has a 3xx status code
func (o *DetectifApplicationNameisUiqueInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this detectif application nameis uique internal server error response has a 4xx status code
func (o *DetectifApplicationNameisUiqueInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this detectif application nameis uique internal server error response has a 5xx status code
func (o *DetectifApplicationNameisUiqueInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this detectif application nameis uique internal server error response a status code equal to that given
func (o *DetectifApplicationNameisUiqueInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the detectif application nameis uique internal server error response
func (o *DetectifApplicationNameisUiqueInternalServerError) Code() int {
	return 500
}

func (o *DetectifApplicationNameisUiqueInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api-management/0.1/applications/unique-name][%d] detectifApplicationNameisUiqueInternalServerError  %+v", 500, o.Payload)
}

func (o *DetectifApplicationNameisUiqueInternalServerError) String() string {
	return fmt.Sprintf("[GET /api-management/0.1/applications/unique-name][%d] detectifApplicationNameisUiqueInternalServerError  %+v", 500, o.Payload)
}

func (o *DetectifApplicationNameisUiqueInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DetectifApplicationNameisUiqueInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
DetectifApplicationNameisUiqueOKBody detectif application nameis uique o k body
swagger:model DetectifApplicationNameisUiqueOKBody
*/
type DetectifApplicationNameisUiqueOKBody struct {

	// The name is unique or not.
	IsUnique bool `json:"isUnique,omitempty"`

	// A string "result"
	Result string `json:"result,omitempty"`
}

// Validate validates this detectif application nameis uique o k body
func (o *DetectifApplicationNameisUiqueOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this detectif application nameis uique o k body based on context it is used
func (o *DetectifApplicationNameisUiqueOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DetectifApplicationNameisUiqueOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DetectifApplicationNameisUiqueOKBody) UnmarshalBinary(b []byte) error {
	var res DetectifApplicationNameisUiqueOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
