// Code generated by go-swagger; DO NOT EDIT.

package applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// GetApplicationAPIPlanUsingUUIDReader is a Reader for the GetApplicationAPIPlanUsingUUID structure.
type GetApplicationAPIPlanUsingUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplicationAPIPlanUsingUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplicationAPIPlanUsingUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetApplicationAPIPlanUsingUUIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetApplicationAPIPlanUsingUUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetApplicationAPIPlanUsingUUIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetApplicationAPIPlanUsingUUIDOK creates a GetApplicationAPIPlanUsingUUIDOK with default headers values
func NewGetApplicationAPIPlanUsingUUIDOK() *GetApplicationAPIPlanUsingUUIDOK {
	return &GetApplicationAPIPlanUsingUUIDOK{}
}

/*
GetApplicationAPIPlanUsingUUIDOK describes a response with status code 200, with default header values.

OK
*/
type GetApplicationAPIPlanUsingUUIDOK struct {
	Payload []*models.ApplicationAPIPlanReference
}

// IsSuccess returns true when this get application Api plan using Uuid o k response has a 2xx status code
func (o *GetApplicationAPIPlanUsingUUIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get application Api plan using Uuid o k response has a 3xx status code
func (o *GetApplicationAPIPlanUsingUUIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application Api plan using Uuid o k response has a 4xx status code
func (o *GetApplicationAPIPlanUsingUUIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application Api plan using Uuid o k response has a 5xx status code
func (o *GetApplicationAPIPlanUsingUUIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get application Api plan using Uuid o k response a status code equal to that given
func (o *GetApplicationAPIPlanUsingUUIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get application Api plan using Uuid o k response
func (o *GetApplicationAPIPlanUsingUUIDOK) Code() int {
	return 200
}

func (o *GetApplicationAPIPlanUsingUUIDOK) Error() string {
	return fmt.Sprintf("[GET /api-management/0.1/applications/{appUuid}/api-plans][%d] getApplicationApiPlanUsingUuidOK  %+v", 200, o.Payload)
}

func (o *GetApplicationAPIPlanUsingUUIDOK) String() string {
	return fmt.Sprintf("[GET /api-management/0.1/applications/{appUuid}/api-plans][%d] getApplicationApiPlanUsingUuidOK  %+v", 200, o.Payload)
}

func (o *GetApplicationAPIPlanUsingUUIDOK) GetPayload() []*models.ApplicationAPIPlanReference {
	return o.Payload
}

func (o *GetApplicationAPIPlanUsingUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationAPIPlanUsingUUIDBadRequest creates a GetApplicationAPIPlanUsingUUIDBadRequest with default headers values
func NewGetApplicationAPIPlanUsingUUIDBadRequest() *GetApplicationAPIPlanUsingUUIDBadRequest {
	return &GetApplicationAPIPlanUsingUUIDBadRequest{}
}

/*
GetApplicationAPIPlanUsingUUIDBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type GetApplicationAPIPlanUsingUUIDBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get application Api plan using Uuid bad request response has a 2xx status code
func (o *GetApplicationAPIPlanUsingUUIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application Api plan using Uuid bad request response has a 3xx status code
func (o *GetApplicationAPIPlanUsingUUIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application Api plan using Uuid bad request response has a 4xx status code
func (o *GetApplicationAPIPlanUsingUUIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application Api plan using Uuid bad request response has a 5xx status code
func (o *GetApplicationAPIPlanUsingUUIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get application Api plan using Uuid bad request response a status code equal to that given
func (o *GetApplicationAPIPlanUsingUUIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get application Api plan using Uuid bad request response
func (o *GetApplicationAPIPlanUsingUUIDBadRequest) Code() int {
	return 400
}

func (o *GetApplicationAPIPlanUsingUUIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api-management/0.1/applications/{appUuid}/api-plans][%d] getApplicationApiPlanUsingUuidBadRequest  %+v", 400, o.Payload)
}

func (o *GetApplicationAPIPlanUsingUUIDBadRequest) String() string {
	return fmt.Sprintf("[GET /api-management/0.1/applications/{appUuid}/api-plans][%d] getApplicationApiPlanUsingUuidBadRequest  %+v", 400, o.Payload)
}

func (o *GetApplicationAPIPlanUsingUUIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetApplicationAPIPlanUsingUUIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationAPIPlanUsingUUIDNotFound creates a GetApplicationAPIPlanUsingUUIDNotFound with default headers values
func NewGetApplicationAPIPlanUsingUUIDNotFound() *GetApplicationAPIPlanUsingUUIDNotFound {
	return &GetApplicationAPIPlanUsingUUIDNotFound{}
}

/*
GetApplicationAPIPlanUsingUUIDNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type GetApplicationAPIPlanUsingUUIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get application Api plan using Uuid not found response has a 2xx status code
func (o *GetApplicationAPIPlanUsingUUIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application Api plan using Uuid not found response has a 3xx status code
func (o *GetApplicationAPIPlanUsingUUIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application Api plan using Uuid not found response has a 4xx status code
func (o *GetApplicationAPIPlanUsingUUIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application Api plan using Uuid not found response has a 5xx status code
func (o *GetApplicationAPIPlanUsingUUIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get application Api plan using Uuid not found response a status code equal to that given
func (o *GetApplicationAPIPlanUsingUUIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get application Api plan using Uuid not found response
func (o *GetApplicationAPIPlanUsingUUIDNotFound) Code() int {
	return 404
}

func (o *GetApplicationAPIPlanUsingUUIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api-management/0.1/applications/{appUuid}/api-plans][%d] getApplicationApiPlanUsingUuidNotFound  %+v", 404, o.Payload)
}

func (o *GetApplicationAPIPlanUsingUUIDNotFound) String() string {
	return fmt.Sprintf("[GET /api-management/0.1/applications/{appUuid}/api-plans][%d] getApplicationApiPlanUsingUuidNotFound  %+v", 404, o.Payload)
}

func (o *GetApplicationAPIPlanUsingUUIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetApplicationAPIPlanUsingUUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationAPIPlanUsingUUIDInternalServerError creates a GetApplicationAPIPlanUsingUUIDInternalServerError with default headers values
func NewGetApplicationAPIPlanUsingUUIDInternalServerError() *GetApplicationAPIPlanUsingUUIDInternalServerError {
	return &GetApplicationAPIPlanUsingUUIDInternalServerError{}
}

/*
GetApplicationAPIPlanUsingUUIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type GetApplicationAPIPlanUsingUUIDInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get application Api plan using Uuid internal server error response has a 2xx status code
func (o *GetApplicationAPIPlanUsingUUIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application Api plan using Uuid internal server error response has a 3xx status code
func (o *GetApplicationAPIPlanUsingUUIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application Api plan using Uuid internal server error response has a 4xx status code
func (o *GetApplicationAPIPlanUsingUUIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application Api plan using Uuid internal server error response has a 5xx status code
func (o *GetApplicationAPIPlanUsingUUIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get application Api plan using Uuid internal server error response a status code equal to that given
func (o *GetApplicationAPIPlanUsingUUIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get application Api plan using Uuid internal server error response
func (o *GetApplicationAPIPlanUsingUUIDInternalServerError) Code() int {
	return 500
}

func (o *GetApplicationAPIPlanUsingUUIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api-management/0.1/applications/{appUuid}/api-plans][%d] getApplicationApiPlanUsingUuidInternalServerError  %+v", 500, o.Payload)
}

func (o *GetApplicationAPIPlanUsingUUIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /api-management/0.1/applications/{appUuid}/api-plans][%d] getApplicationApiPlanUsingUuidInternalServerError  %+v", 500, o.Payload)
}

func (o *GetApplicationAPIPlanUsingUUIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetApplicationAPIPlanUsingUUIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
