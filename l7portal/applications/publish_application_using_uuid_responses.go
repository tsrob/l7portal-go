// Code generated by go-swagger; DO NOT EDIT.

package applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// PublishApplicationUsingUUIDReader is a Reader for the PublishApplicationUsingUUID structure.
type PublishApplicationUsingUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PublishApplicationUsingUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPublishApplicationUsingUUIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPublishApplicationUsingUUIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPublishApplicationUsingUUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPublishApplicationUsingUUIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPublishApplicationUsingUUIDNoContent creates a PublishApplicationUsingUUIDNoContent with default headers values
func NewPublishApplicationUsingUUIDNoContent() *PublishApplicationUsingUUIDNoContent {
	return &PublishApplicationUsingUUIDNoContent{}
}

/*
PublishApplicationUsingUUIDNoContent describes a response with status code 204, with default header values.

OK, no Content to show
*/
type PublishApplicationUsingUUIDNoContent struct {
}

// IsSuccess returns true when this publish application using Uuid no content response has a 2xx status code
func (o *PublishApplicationUsingUUIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this publish application using Uuid no content response has a 3xx status code
func (o *PublishApplicationUsingUUIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this publish application using Uuid no content response has a 4xx status code
func (o *PublishApplicationUsingUUIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this publish application using Uuid no content response has a 5xx status code
func (o *PublishApplicationUsingUUIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this publish application using Uuid no content response a status code equal to that given
func (o *PublishApplicationUsingUUIDNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the publish application using Uuid no content response
func (o *PublishApplicationUsingUUIDNoContent) Code() int {
	return 204
}

func (o *PublishApplicationUsingUUIDNoContent) Error() string {
	return fmt.Sprintf("[PUT /api-management/1.0/applications/{appUuid}/publish][%d] publishApplicationUsingUuidNoContent ", 204)
}

func (o *PublishApplicationUsingUUIDNoContent) String() string {
	return fmt.Sprintf("[PUT /api-management/1.0/applications/{appUuid}/publish][%d] publishApplicationUsingUuidNoContent ", 204)
}

func (o *PublishApplicationUsingUUIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPublishApplicationUsingUUIDBadRequest creates a PublishApplicationUsingUUIDBadRequest with default headers values
func NewPublishApplicationUsingUUIDBadRequest() *PublishApplicationUsingUUIDBadRequest {
	return &PublishApplicationUsingUUIDBadRequest{}
}

/*
PublishApplicationUsingUUIDBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type PublishApplicationUsingUUIDBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this publish application using Uuid bad request response has a 2xx status code
func (o *PublishApplicationUsingUUIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this publish application using Uuid bad request response has a 3xx status code
func (o *PublishApplicationUsingUUIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this publish application using Uuid bad request response has a 4xx status code
func (o *PublishApplicationUsingUUIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this publish application using Uuid bad request response has a 5xx status code
func (o *PublishApplicationUsingUUIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this publish application using Uuid bad request response a status code equal to that given
func (o *PublishApplicationUsingUUIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the publish application using Uuid bad request response
func (o *PublishApplicationUsingUUIDBadRequest) Code() int {
	return 400
}

func (o *PublishApplicationUsingUUIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api-management/1.0/applications/{appUuid}/publish][%d] publishApplicationUsingUuidBadRequest  %+v", 400, o.Payload)
}

func (o *PublishApplicationUsingUUIDBadRequest) String() string {
	return fmt.Sprintf("[PUT /api-management/1.0/applications/{appUuid}/publish][%d] publishApplicationUsingUuidBadRequest  %+v", 400, o.Payload)
}

func (o *PublishApplicationUsingUUIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PublishApplicationUsingUUIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPublishApplicationUsingUUIDNotFound creates a PublishApplicationUsingUUIDNotFound with default headers values
func NewPublishApplicationUsingUUIDNotFound() *PublishApplicationUsingUUIDNotFound {
	return &PublishApplicationUsingUUIDNotFound{}
}

/*
PublishApplicationUsingUUIDNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type PublishApplicationUsingUUIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this publish application using Uuid not found response has a 2xx status code
func (o *PublishApplicationUsingUUIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this publish application using Uuid not found response has a 3xx status code
func (o *PublishApplicationUsingUUIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this publish application using Uuid not found response has a 4xx status code
func (o *PublishApplicationUsingUUIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this publish application using Uuid not found response has a 5xx status code
func (o *PublishApplicationUsingUUIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this publish application using Uuid not found response a status code equal to that given
func (o *PublishApplicationUsingUUIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the publish application using Uuid not found response
func (o *PublishApplicationUsingUUIDNotFound) Code() int {
	return 404
}

func (o *PublishApplicationUsingUUIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /api-management/1.0/applications/{appUuid}/publish][%d] publishApplicationUsingUuidNotFound  %+v", 404, o.Payload)
}

func (o *PublishApplicationUsingUUIDNotFound) String() string {
	return fmt.Sprintf("[PUT /api-management/1.0/applications/{appUuid}/publish][%d] publishApplicationUsingUuidNotFound  %+v", 404, o.Payload)
}

func (o *PublishApplicationUsingUUIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PublishApplicationUsingUUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPublishApplicationUsingUUIDInternalServerError creates a PublishApplicationUsingUUIDInternalServerError with default headers values
func NewPublishApplicationUsingUUIDInternalServerError() *PublishApplicationUsingUUIDInternalServerError {
	return &PublishApplicationUsingUUIDInternalServerError{}
}

/*
PublishApplicationUsingUUIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type PublishApplicationUsingUUIDInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this publish application using Uuid internal server error response has a 2xx status code
func (o *PublishApplicationUsingUUIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this publish application using Uuid internal server error response has a 3xx status code
func (o *PublishApplicationUsingUUIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this publish application using Uuid internal server error response has a 4xx status code
func (o *PublishApplicationUsingUUIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this publish application using Uuid internal server error response has a 5xx status code
func (o *PublishApplicationUsingUUIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this publish application using Uuid internal server error response a status code equal to that given
func (o *PublishApplicationUsingUUIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the publish application using Uuid internal server error response
func (o *PublishApplicationUsingUUIDInternalServerError) Code() int {
	return 500
}

func (o *PublishApplicationUsingUUIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api-management/1.0/applications/{appUuid}/publish][%d] publishApplicationUsingUuidInternalServerError  %+v", 500, o.Payload)
}

func (o *PublishApplicationUsingUUIDInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api-management/1.0/applications/{appUuid}/publish][%d] publishApplicationUsingUuidInternalServerError  %+v", 500, o.Payload)
}

func (o *PublishApplicationUsingUUIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PublishApplicationUsingUUIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
