// Code generated by go-swagger; DO NOT EDIT.

package applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// GetApplicationUsingUUIDReader is a Reader for the GetApplicationUsingUUID structure.
type GetApplicationUsingUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplicationUsingUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplicationUsingUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetApplicationUsingUUIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetApplicationUsingUUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetApplicationUsingUUIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetApplicationUsingUUIDOK creates a GetApplicationUsingUUIDOK with default headers values
func NewGetApplicationUsingUUIDOK() *GetApplicationUsingUUIDOK {
	return &GetApplicationUsingUUIDOK{}
}

/*
GetApplicationUsingUUIDOK describes a response with status code 200, with default header values.

OK
*/
type GetApplicationUsingUUIDOK struct {
	Payload *models.ApplicationDto
}

// IsSuccess returns true when this get application using Uuid o k response has a 2xx status code
func (o *GetApplicationUsingUUIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get application using Uuid o k response has a 3xx status code
func (o *GetApplicationUsingUUIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application using Uuid o k response has a 4xx status code
func (o *GetApplicationUsingUUIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application using Uuid o k response has a 5xx status code
func (o *GetApplicationUsingUUIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get application using Uuid o k response a status code equal to that given
func (o *GetApplicationUsingUUIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get application using Uuid o k response
func (o *GetApplicationUsingUUIDOK) Code() int {
	return 200
}

func (o *GetApplicationUsingUUIDOK) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/applications/{appUuid}][%d] getApplicationUsingUuidOK  %+v", 200, o.Payload)
}

func (o *GetApplicationUsingUUIDOK) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/applications/{appUuid}][%d] getApplicationUsingUuidOK  %+v", 200, o.Payload)
}

func (o *GetApplicationUsingUUIDOK) GetPayload() *models.ApplicationDto {
	return o.Payload
}

func (o *GetApplicationUsingUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApplicationDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationUsingUUIDBadRequest creates a GetApplicationUsingUUIDBadRequest with default headers values
func NewGetApplicationUsingUUIDBadRequest() *GetApplicationUsingUUIDBadRequest {
	return &GetApplicationUsingUUIDBadRequest{}
}

/*
GetApplicationUsingUUIDBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type GetApplicationUsingUUIDBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get application using Uuid bad request response has a 2xx status code
func (o *GetApplicationUsingUUIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application using Uuid bad request response has a 3xx status code
func (o *GetApplicationUsingUUIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application using Uuid bad request response has a 4xx status code
func (o *GetApplicationUsingUUIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application using Uuid bad request response has a 5xx status code
func (o *GetApplicationUsingUUIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get application using Uuid bad request response a status code equal to that given
func (o *GetApplicationUsingUUIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get application using Uuid bad request response
func (o *GetApplicationUsingUUIDBadRequest) Code() int {
	return 400
}

func (o *GetApplicationUsingUUIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/applications/{appUuid}][%d] getApplicationUsingUuidBadRequest  %+v", 400, o.Payload)
}

func (o *GetApplicationUsingUUIDBadRequest) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/applications/{appUuid}][%d] getApplicationUsingUuidBadRequest  %+v", 400, o.Payload)
}

func (o *GetApplicationUsingUUIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetApplicationUsingUUIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationUsingUUIDNotFound creates a GetApplicationUsingUUIDNotFound with default headers values
func NewGetApplicationUsingUUIDNotFound() *GetApplicationUsingUUIDNotFound {
	return &GetApplicationUsingUUIDNotFound{}
}

/*
GetApplicationUsingUUIDNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type GetApplicationUsingUUIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get application using Uuid not found response has a 2xx status code
func (o *GetApplicationUsingUUIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application using Uuid not found response has a 3xx status code
func (o *GetApplicationUsingUUIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application using Uuid not found response has a 4xx status code
func (o *GetApplicationUsingUUIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application using Uuid not found response has a 5xx status code
func (o *GetApplicationUsingUUIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get application using Uuid not found response a status code equal to that given
func (o *GetApplicationUsingUUIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get application using Uuid not found response
func (o *GetApplicationUsingUUIDNotFound) Code() int {
	return 404
}

func (o *GetApplicationUsingUUIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/applications/{appUuid}][%d] getApplicationUsingUuidNotFound  %+v", 404, o.Payload)
}

func (o *GetApplicationUsingUUIDNotFound) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/applications/{appUuid}][%d] getApplicationUsingUuidNotFound  %+v", 404, o.Payload)
}

func (o *GetApplicationUsingUUIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetApplicationUsingUUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationUsingUUIDInternalServerError creates a GetApplicationUsingUUIDInternalServerError with default headers values
func NewGetApplicationUsingUUIDInternalServerError() *GetApplicationUsingUUIDInternalServerError {
	return &GetApplicationUsingUUIDInternalServerError{}
}

/*
GetApplicationUsingUUIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type GetApplicationUsingUUIDInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get application using Uuid internal server error response has a 2xx status code
func (o *GetApplicationUsingUUIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application using Uuid internal server error response has a 3xx status code
func (o *GetApplicationUsingUUIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application using Uuid internal server error response has a 4xx status code
func (o *GetApplicationUsingUUIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application using Uuid internal server error response has a 5xx status code
func (o *GetApplicationUsingUUIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get application using Uuid internal server error response a status code equal to that given
func (o *GetApplicationUsingUUIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get application using Uuid internal server error response
func (o *GetApplicationUsingUUIDInternalServerError) Code() int {
	return 500
}

func (o *GetApplicationUsingUUIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/applications/{appUuid}][%d] getApplicationUsingUuidInternalServerError  %+v", 500, o.Payload)
}

func (o *GetApplicationUsingUUIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/applications/{appUuid}][%d] getApplicationUsingUuidInternalServerError  %+v", 500, o.Payload)
}

func (o *GetApplicationUsingUUIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetApplicationUsingUUIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
