// Code generated by go-swagger; DO NOT EDIT.

package applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// GetAllAPIKeyUsingGET1Reader is a Reader for the GetAllAPIKeyUsingGET1 structure.
type GetAllAPIKeyUsingGET1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllAPIKeyUsingGET1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllAPIKeyUsingGET1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllAPIKeyUsingGET1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllAPIKeyUsingGET1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllAPIKeyUsingGET1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllAPIKeyUsingGET1OK creates a GetAllAPIKeyUsingGET1OK with default headers values
func NewGetAllAPIKeyUsingGET1OK() *GetAllAPIKeyUsingGET1OK {
	return &GetAllAPIKeyUsingGET1OK{}
}

/*
GetAllAPIKeyUsingGET1OK describes a response with status code 200, with default header values.

OK
*/
type GetAllAPIKeyUsingGET1OK struct {
	Payload *models.APIKeyList
}

// IsSuccess returns true when this get all Api key using g e t1 o k response has a 2xx status code
func (o *GetAllAPIKeyUsingGET1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all Api key using g e t1 o k response has a 3xx status code
func (o *GetAllAPIKeyUsingGET1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all Api key using g e t1 o k response has a 4xx status code
func (o *GetAllAPIKeyUsingGET1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all Api key using g e t1 o k response has a 5xx status code
func (o *GetAllAPIKeyUsingGET1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all Api key using g e t1 o k response a status code equal to that given
func (o *GetAllAPIKeyUsingGET1OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all Api key using g e t1 o k response
func (o *GetAllAPIKeyUsingGET1OK) Code() int {
	return 200
}

func (o *GetAllAPIKeyUsingGET1OK) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/applications/{appUuid}/api-keys][%d] getAllApiKeyUsingGET1OK  %+v", 200, o.Payload)
}

func (o *GetAllAPIKeyUsingGET1OK) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/applications/{appUuid}/api-keys][%d] getAllApiKeyUsingGET1OK  %+v", 200, o.Payload)
}

func (o *GetAllAPIKeyUsingGET1OK) GetPayload() *models.APIKeyList {
	return o.Payload
}

func (o *GetAllAPIKeyUsingGET1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIKeyList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllAPIKeyUsingGET1BadRequest creates a GetAllAPIKeyUsingGET1BadRequest with default headers values
func NewGetAllAPIKeyUsingGET1BadRequest() *GetAllAPIKeyUsingGET1BadRequest {
	return &GetAllAPIKeyUsingGET1BadRequest{}
}

/*
GetAllAPIKeyUsingGET1BadRequest describes a response with status code 400, with default header values.

Bad Request due to Invalid Uuid.
*/
type GetAllAPIKeyUsingGET1BadRequest struct {
	Payload *models.LongerError
}

// IsSuccess returns true when this get all Api key using g e t1 bad request response has a 2xx status code
func (o *GetAllAPIKeyUsingGET1BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all Api key using g e t1 bad request response has a 3xx status code
func (o *GetAllAPIKeyUsingGET1BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all Api key using g e t1 bad request response has a 4xx status code
func (o *GetAllAPIKeyUsingGET1BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all Api key using g e t1 bad request response has a 5xx status code
func (o *GetAllAPIKeyUsingGET1BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all Api key using g e t1 bad request response a status code equal to that given
func (o *GetAllAPIKeyUsingGET1BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all Api key using g e t1 bad request response
func (o *GetAllAPIKeyUsingGET1BadRequest) Code() int {
	return 400
}

func (o *GetAllAPIKeyUsingGET1BadRequest) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/applications/{appUuid}/api-keys][%d] getAllApiKeyUsingGET1BadRequest  %+v", 400, o.Payload)
}

func (o *GetAllAPIKeyUsingGET1BadRequest) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/applications/{appUuid}/api-keys][%d] getAllApiKeyUsingGET1BadRequest  %+v", 400, o.Payload)
}

func (o *GetAllAPIKeyUsingGET1BadRequest) GetPayload() *models.LongerError {
	return o.Payload
}

func (o *GetAllAPIKeyUsingGET1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LongerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllAPIKeyUsingGET1NotFound creates a GetAllAPIKeyUsingGET1NotFound with default headers values
func NewGetAllAPIKeyUsingGET1NotFound() *GetAllAPIKeyUsingGET1NotFound {
	return &GetAllAPIKeyUsingGET1NotFound{}
}

/*
GetAllAPIKeyUsingGET1NotFound describes a response with status code 404, with default header values.

Entity not Found
*/
type GetAllAPIKeyUsingGET1NotFound struct {
	Payload *models.ErrorEntity
}

// IsSuccess returns true when this get all Api key using g e t1 not found response has a 2xx status code
func (o *GetAllAPIKeyUsingGET1NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all Api key using g e t1 not found response has a 3xx status code
func (o *GetAllAPIKeyUsingGET1NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all Api key using g e t1 not found response has a 4xx status code
func (o *GetAllAPIKeyUsingGET1NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all Api key using g e t1 not found response has a 5xx status code
func (o *GetAllAPIKeyUsingGET1NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all Api key using g e t1 not found response a status code equal to that given
func (o *GetAllAPIKeyUsingGET1NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all Api key using g e t1 not found response
func (o *GetAllAPIKeyUsingGET1NotFound) Code() int {
	return 404
}

func (o *GetAllAPIKeyUsingGET1NotFound) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/applications/{appUuid}/api-keys][%d] getAllApiKeyUsingGET1NotFound  %+v", 404, o.Payload)
}

func (o *GetAllAPIKeyUsingGET1NotFound) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/applications/{appUuid}/api-keys][%d] getAllApiKeyUsingGET1NotFound  %+v", 404, o.Payload)
}

func (o *GetAllAPIKeyUsingGET1NotFound) GetPayload() *models.ErrorEntity {
	return o.Payload
}

func (o *GetAllAPIKeyUsingGET1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllAPIKeyUsingGET1InternalServerError creates a GetAllAPIKeyUsingGET1InternalServerError with default headers values
func NewGetAllAPIKeyUsingGET1InternalServerError() *GetAllAPIKeyUsingGET1InternalServerError {
	return &GetAllAPIKeyUsingGET1InternalServerError{}
}

/*
GetAllAPIKeyUsingGET1InternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type GetAllAPIKeyUsingGET1InternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get all Api key using g e t1 internal server error response has a 2xx status code
func (o *GetAllAPIKeyUsingGET1InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all Api key using g e t1 internal server error response has a 3xx status code
func (o *GetAllAPIKeyUsingGET1InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all Api key using g e t1 internal server error response has a 4xx status code
func (o *GetAllAPIKeyUsingGET1InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all Api key using g e t1 internal server error response has a 5xx status code
func (o *GetAllAPIKeyUsingGET1InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all Api key using g e t1 internal server error response a status code equal to that given
func (o *GetAllAPIKeyUsingGET1InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all Api key using g e t1 internal server error response
func (o *GetAllAPIKeyUsingGET1InternalServerError) Code() int {
	return 500
}

func (o *GetAllAPIKeyUsingGET1InternalServerError) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/applications/{appUuid}/api-keys][%d] getAllApiKeyUsingGET1InternalServerError  %+v", 500, o.Payload)
}

func (o *GetAllAPIKeyUsingGET1InternalServerError) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/applications/{appUuid}/api-keys][%d] getAllApiKeyUsingGET1InternalServerError  %+v", 500, o.Payload)
}

func (o *GetAllAPIKeyUsingGET1InternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllAPIKeyUsingGET1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
