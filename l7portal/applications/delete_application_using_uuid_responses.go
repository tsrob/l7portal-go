// Code generated by go-swagger; DO NOT EDIT.

package applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// DeleteApplicationUsingUUIDReader is a Reader for the DeleteApplicationUsingUUID structure.
type DeleteApplicationUsingUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteApplicationUsingUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteApplicationUsingUUIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteApplicationUsingUUIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteApplicationUsingUUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteApplicationUsingUUIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteApplicationUsingUUIDNoContent creates a DeleteApplicationUsingUUIDNoContent with default headers values
func NewDeleteApplicationUsingUUIDNoContent() *DeleteApplicationUsingUUIDNoContent {
	return &DeleteApplicationUsingUUIDNoContent{}
}

/*
DeleteApplicationUsingUUIDNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteApplicationUsingUUIDNoContent struct {
}

// IsSuccess returns true when this delete application using Uuid no content response has a 2xx status code
func (o *DeleteApplicationUsingUUIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete application using Uuid no content response has a 3xx status code
func (o *DeleteApplicationUsingUUIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete application using Uuid no content response has a 4xx status code
func (o *DeleteApplicationUsingUUIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete application using Uuid no content response has a 5xx status code
func (o *DeleteApplicationUsingUUIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete application using Uuid no content response a status code equal to that given
func (o *DeleteApplicationUsingUUIDNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete application using Uuid no content response
func (o *DeleteApplicationUsingUUIDNoContent) Code() int {
	return 204
}

func (o *DeleteApplicationUsingUUIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api-management/1.0/applications/{appUuid}][%d] deleteApplicationUsingUuidNoContent ", 204)
}

func (o *DeleteApplicationUsingUUIDNoContent) String() string {
	return fmt.Sprintf("[DELETE /api-management/1.0/applications/{appUuid}][%d] deleteApplicationUsingUuidNoContent ", 204)
}

func (o *DeleteApplicationUsingUUIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteApplicationUsingUUIDBadRequest creates a DeleteApplicationUsingUUIDBadRequest with default headers values
func NewDeleteApplicationUsingUUIDBadRequest() *DeleteApplicationUsingUUIDBadRequest {
	return &DeleteApplicationUsingUUIDBadRequest{}
}

/*
DeleteApplicationUsingUUIDBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type DeleteApplicationUsingUUIDBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete application using Uuid bad request response has a 2xx status code
func (o *DeleteApplicationUsingUUIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete application using Uuid bad request response has a 3xx status code
func (o *DeleteApplicationUsingUUIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete application using Uuid bad request response has a 4xx status code
func (o *DeleteApplicationUsingUUIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete application using Uuid bad request response has a 5xx status code
func (o *DeleteApplicationUsingUUIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete application using Uuid bad request response a status code equal to that given
func (o *DeleteApplicationUsingUUIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete application using Uuid bad request response
func (o *DeleteApplicationUsingUUIDBadRequest) Code() int {
	return 400
}

func (o *DeleteApplicationUsingUUIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api-management/1.0/applications/{appUuid}][%d] deleteApplicationUsingUuidBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteApplicationUsingUUIDBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api-management/1.0/applications/{appUuid}][%d] deleteApplicationUsingUuidBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteApplicationUsingUUIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteApplicationUsingUUIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteApplicationUsingUUIDNotFound creates a DeleteApplicationUsingUUIDNotFound with default headers values
func NewDeleteApplicationUsingUUIDNotFound() *DeleteApplicationUsingUUIDNotFound {
	return &DeleteApplicationUsingUUIDNotFound{}
}

/*
DeleteApplicationUsingUUIDNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type DeleteApplicationUsingUUIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete application using Uuid not found response has a 2xx status code
func (o *DeleteApplicationUsingUUIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete application using Uuid not found response has a 3xx status code
func (o *DeleteApplicationUsingUUIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete application using Uuid not found response has a 4xx status code
func (o *DeleteApplicationUsingUUIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete application using Uuid not found response has a 5xx status code
func (o *DeleteApplicationUsingUUIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete application using Uuid not found response a status code equal to that given
func (o *DeleteApplicationUsingUUIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete application using Uuid not found response
func (o *DeleteApplicationUsingUUIDNotFound) Code() int {
	return 404
}

func (o *DeleteApplicationUsingUUIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api-management/1.0/applications/{appUuid}][%d] deleteApplicationUsingUuidNotFound  %+v", 404, o.Payload)
}

func (o *DeleteApplicationUsingUUIDNotFound) String() string {
	return fmt.Sprintf("[DELETE /api-management/1.0/applications/{appUuid}][%d] deleteApplicationUsingUuidNotFound  %+v", 404, o.Payload)
}

func (o *DeleteApplicationUsingUUIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteApplicationUsingUUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteApplicationUsingUUIDInternalServerError creates a DeleteApplicationUsingUUIDInternalServerError with default headers values
func NewDeleteApplicationUsingUUIDInternalServerError() *DeleteApplicationUsingUUIDInternalServerError {
	return &DeleteApplicationUsingUUIDInternalServerError{}
}

/*
DeleteApplicationUsingUUIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type DeleteApplicationUsingUUIDInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete application using Uuid internal server error response has a 2xx status code
func (o *DeleteApplicationUsingUUIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete application using Uuid internal server error response has a 3xx status code
func (o *DeleteApplicationUsingUUIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete application using Uuid internal server error response has a 4xx status code
func (o *DeleteApplicationUsingUUIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete application using Uuid internal server error response has a 5xx status code
func (o *DeleteApplicationUsingUUIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete application using Uuid internal server error response a status code equal to that given
func (o *DeleteApplicationUsingUUIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete application using Uuid internal server error response
func (o *DeleteApplicationUsingUUIDInternalServerError) Code() int {
	return 500
}

func (o *DeleteApplicationUsingUUIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api-management/1.0/applications/{appUuid}][%d] deleteApplicationUsingUuidInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteApplicationUsingUUIDInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api-management/1.0/applications/{appUuid}][%d] deleteApplicationUsingUuidInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteApplicationUsingUUIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteApplicationUsingUUIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
