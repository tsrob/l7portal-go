// Code generated by go-swagger; DO NOT EDIT.

package applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// PutApplicationUsingUUIDReader is a Reader for the PutApplicationUsingUUID structure.
type PutApplicationUsingUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutApplicationUsingUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutApplicationUsingUUIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutApplicationUsingUUIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutApplicationUsingUUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutApplicationUsingUUIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutApplicationUsingUUIDNoContent creates a PutApplicationUsingUUIDNoContent with default headers values
func NewPutApplicationUsingUUIDNoContent() *PutApplicationUsingUUIDNoContent {
	return &PutApplicationUsingUUIDNoContent{}
}

/*
PutApplicationUsingUUIDNoContent describes a response with status code 204, with default header values.

OK, no Content to show.
*/
type PutApplicationUsingUUIDNoContent struct {
}

// IsSuccess returns true when this put application using Uuid no content response has a 2xx status code
func (o *PutApplicationUsingUUIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put application using Uuid no content response has a 3xx status code
func (o *PutApplicationUsingUUIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put application using Uuid no content response has a 4xx status code
func (o *PutApplicationUsingUUIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put application using Uuid no content response has a 5xx status code
func (o *PutApplicationUsingUUIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put application using Uuid no content response a status code equal to that given
func (o *PutApplicationUsingUUIDNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put application using Uuid no content response
func (o *PutApplicationUsingUUIDNoContent) Code() int {
	return 204
}

func (o *PutApplicationUsingUUIDNoContent) Error() string {
	return fmt.Sprintf("[PUT /api-management/1.0/applications/{appUuid}][%d] putApplicationUsingUuidNoContent ", 204)
}

func (o *PutApplicationUsingUUIDNoContent) String() string {
	return fmt.Sprintf("[PUT /api-management/1.0/applications/{appUuid}][%d] putApplicationUsingUuidNoContent ", 204)
}

func (o *PutApplicationUsingUUIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutApplicationUsingUUIDBadRequest creates a PutApplicationUsingUUIDBadRequest with default headers values
func NewPutApplicationUsingUUIDBadRequest() *PutApplicationUsingUUIDBadRequest {
	return &PutApplicationUsingUUIDBadRequest{}
}

/*
PutApplicationUsingUUIDBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type PutApplicationUsingUUIDBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this put application using Uuid bad request response has a 2xx status code
func (o *PutApplicationUsingUUIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put application using Uuid bad request response has a 3xx status code
func (o *PutApplicationUsingUUIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put application using Uuid bad request response has a 4xx status code
func (o *PutApplicationUsingUUIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put application using Uuid bad request response has a 5xx status code
func (o *PutApplicationUsingUUIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put application using Uuid bad request response a status code equal to that given
func (o *PutApplicationUsingUUIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put application using Uuid bad request response
func (o *PutApplicationUsingUUIDBadRequest) Code() int {
	return 400
}

func (o *PutApplicationUsingUUIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api-management/1.0/applications/{appUuid}][%d] putApplicationUsingUuidBadRequest  %+v", 400, o.Payload)
}

func (o *PutApplicationUsingUUIDBadRequest) String() string {
	return fmt.Sprintf("[PUT /api-management/1.0/applications/{appUuid}][%d] putApplicationUsingUuidBadRequest  %+v", 400, o.Payload)
}

func (o *PutApplicationUsingUUIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutApplicationUsingUUIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutApplicationUsingUUIDNotFound creates a PutApplicationUsingUUIDNotFound with default headers values
func NewPutApplicationUsingUUIDNotFound() *PutApplicationUsingUUIDNotFound {
	return &PutApplicationUsingUUIDNotFound{}
}

/*
PutApplicationUsingUUIDNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type PutApplicationUsingUUIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this put application using Uuid not found response has a 2xx status code
func (o *PutApplicationUsingUUIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put application using Uuid not found response has a 3xx status code
func (o *PutApplicationUsingUUIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put application using Uuid not found response has a 4xx status code
func (o *PutApplicationUsingUUIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put application using Uuid not found response has a 5xx status code
func (o *PutApplicationUsingUUIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put application using Uuid not found response a status code equal to that given
func (o *PutApplicationUsingUUIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put application using Uuid not found response
func (o *PutApplicationUsingUUIDNotFound) Code() int {
	return 404
}

func (o *PutApplicationUsingUUIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /api-management/1.0/applications/{appUuid}][%d] putApplicationUsingUuidNotFound  %+v", 404, o.Payload)
}

func (o *PutApplicationUsingUUIDNotFound) String() string {
	return fmt.Sprintf("[PUT /api-management/1.0/applications/{appUuid}][%d] putApplicationUsingUuidNotFound  %+v", 404, o.Payload)
}

func (o *PutApplicationUsingUUIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutApplicationUsingUUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutApplicationUsingUUIDInternalServerError creates a PutApplicationUsingUUIDInternalServerError with default headers values
func NewPutApplicationUsingUUIDInternalServerError() *PutApplicationUsingUUIDInternalServerError {
	return &PutApplicationUsingUUIDInternalServerError{}
}

/*
PutApplicationUsingUUIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type PutApplicationUsingUUIDInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this put application using Uuid internal server error response has a 2xx status code
func (o *PutApplicationUsingUUIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put application using Uuid internal server error response has a 3xx status code
func (o *PutApplicationUsingUUIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put application using Uuid internal server error response has a 4xx status code
func (o *PutApplicationUsingUUIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put application using Uuid internal server error response has a 5xx status code
func (o *PutApplicationUsingUUIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put application using Uuid internal server error response a status code equal to that given
func (o *PutApplicationUsingUUIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the put application using Uuid internal server error response
func (o *PutApplicationUsingUUIDInternalServerError) Code() int {
	return 500
}

func (o *PutApplicationUsingUUIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api-management/1.0/applications/{appUuid}][%d] putApplicationUsingUuidInternalServerError  %+v", 500, o.Payload)
}

func (o *PutApplicationUsingUUIDInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api-management/1.0/applications/{appUuid}][%d] putApplicationUsingUuidInternalServerError  %+v", 500, o.Payload)
}

func (o *PutApplicationUsingUUIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutApplicationUsingUUIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
