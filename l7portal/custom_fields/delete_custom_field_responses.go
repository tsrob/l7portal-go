// Code generated by go-swagger; DO NOT EDIT.

package custom_fields

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// DeleteCustomFieldReader is a Reader for the DeleteCustomField structure.
type DeleteCustomFieldReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCustomFieldReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewDeleteCustomFieldBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteCustomFieldNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteCustomFieldInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteCustomFieldBadRequest creates a DeleteCustomFieldBadRequest with default headers values
func NewDeleteCustomFieldBadRequest() *DeleteCustomFieldBadRequest {
	return &DeleteCustomFieldBadRequest{}
}

/*
DeleteCustomFieldBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type DeleteCustomFieldBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete custom field bad request response has a 2xx status code
func (o *DeleteCustomFieldBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete custom field bad request response has a 3xx status code
func (o *DeleteCustomFieldBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete custom field bad request response has a 4xx status code
func (o *DeleteCustomFieldBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete custom field bad request response has a 5xx status code
func (o *DeleteCustomFieldBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete custom field bad request response a status code equal to that given
func (o *DeleteCustomFieldBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete custom field bad request response
func (o *DeleteCustomFieldBadRequest) Code() int {
	return 400
}

func (o *DeleteCustomFieldBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /CustomFields('{uuid}')][%d] deleteCustomFieldBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteCustomFieldBadRequest) String() string {
	return fmt.Sprintf("[DELETE /CustomFields('{uuid}')][%d] deleteCustomFieldBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteCustomFieldBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteCustomFieldBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCustomFieldNotFound creates a DeleteCustomFieldNotFound with default headers values
func NewDeleteCustomFieldNotFound() *DeleteCustomFieldNotFound {
	return &DeleteCustomFieldNotFound{}
}

/*
DeleteCustomFieldNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type DeleteCustomFieldNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete custom field not found response has a 2xx status code
func (o *DeleteCustomFieldNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete custom field not found response has a 3xx status code
func (o *DeleteCustomFieldNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete custom field not found response has a 4xx status code
func (o *DeleteCustomFieldNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete custom field not found response has a 5xx status code
func (o *DeleteCustomFieldNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete custom field not found response a status code equal to that given
func (o *DeleteCustomFieldNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete custom field not found response
func (o *DeleteCustomFieldNotFound) Code() int {
	return 404
}

func (o *DeleteCustomFieldNotFound) Error() string {
	return fmt.Sprintf("[DELETE /CustomFields('{uuid}')][%d] deleteCustomFieldNotFound  %+v", 404, o.Payload)
}

func (o *DeleteCustomFieldNotFound) String() string {
	return fmt.Sprintf("[DELETE /CustomFields('{uuid}')][%d] deleteCustomFieldNotFound  %+v", 404, o.Payload)
}

func (o *DeleteCustomFieldNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteCustomFieldNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCustomFieldInternalServerError creates a DeleteCustomFieldInternalServerError with default headers values
func NewDeleteCustomFieldInternalServerError() *DeleteCustomFieldInternalServerError {
	return &DeleteCustomFieldInternalServerError{}
}

/*
DeleteCustomFieldInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type DeleteCustomFieldInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete custom field internal server error response has a 2xx status code
func (o *DeleteCustomFieldInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete custom field internal server error response has a 3xx status code
func (o *DeleteCustomFieldInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete custom field internal server error response has a 4xx status code
func (o *DeleteCustomFieldInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete custom field internal server error response has a 5xx status code
func (o *DeleteCustomFieldInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete custom field internal server error response a status code equal to that given
func (o *DeleteCustomFieldInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete custom field internal server error response
func (o *DeleteCustomFieldInternalServerError) Code() int {
	return 500
}

func (o *DeleteCustomFieldInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /CustomFields('{uuid}')][%d] deleteCustomFieldInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteCustomFieldInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /CustomFields('{uuid}')][%d] deleteCustomFieldInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteCustomFieldInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteCustomFieldInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
