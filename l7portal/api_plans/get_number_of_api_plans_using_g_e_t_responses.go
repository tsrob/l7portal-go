// Code generated by go-swagger; DO NOT EDIT.

package api_plans

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// GetNumberOfAPIPlansUsingGETReader is a Reader for the GetNumberOfAPIPlansUsingGET structure.
type GetNumberOfAPIPlansUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNumberOfAPIPlansUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNumberOfAPIPlansUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNumberOfAPIPlansUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNumberOfAPIPlansUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNumberOfAPIPlansUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetNumberOfAPIPlansUsingGETOK creates a GetNumberOfAPIPlansUsingGETOK with default headers values
func NewGetNumberOfAPIPlansUsingGETOK() *GetNumberOfAPIPlansUsingGETOK {
	return &GetNumberOfAPIPlansUsingGETOK{}
}

/*
GetNumberOfAPIPlansUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetNumberOfAPIPlansUsingGETOK struct {
	Payload int64
}

// IsSuccess returns true when this get number of Api plans using g e t o k response has a 2xx status code
func (o *GetNumberOfAPIPlansUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get number of Api plans using g e t o k response has a 3xx status code
func (o *GetNumberOfAPIPlansUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get number of Api plans using g e t o k response has a 4xx status code
func (o *GetNumberOfAPIPlansUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get number of Api plans using g e t o k response has a 5xx status code
func (o *GetNumberOfAPIPlansUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get number of Api plans using g e t o k response a status code equal to that given
func (o *GetNumberOfAPIPlansUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get number of Api plans using g e t o k response
func (o *GetNumberOfAPIPlansUsingGETOK) Code() int {
	return 200
}

func (o *GetNumberOfAPIPlansUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/api-plans/count][%d] getNumberOfApiPlansUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetNumberOfAPIPlansUsingGETOK) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/api-plans/count][%d] getNumberOfApiPlansUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetNumberOfAPIPlansUsingGETOK) GetPayload() int64 {
	return o.Payload
}

func (o *GetNumberOfAPIPlansUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNumberOfAPIPlansUsingGETBadRequest creates a GetNumberOfAPIPlansUsingGETBadRequest with default headers values
func NewGetNumberOfAPIPlansUsingGETBadRequest() *GetNumberOfAPIPlansUsingGETBadRequest {
	return &GetNumberOfAPIPlansUsingGETBadRequest{}
}

/*
GetNumberOfAPIPlansUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type GetNumberOfAPIPlansUsingGETBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get number of Api plans using g e t bad request response has a 2xx status code
func (o *GetNumberOfAPIPlansUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get number of Api plans using g e t bad request response has a 3xx status code
func (o *GetNumberOfAPIPlansUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get number of Api plans using g e t bad request response has a 4xx status code
func (o *GetNumberOfAPIPlansUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get number of Api plans using g e t bad request response has a 5xx status code
func (o *GetNumberOfAPIPlansUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get number of Api plans using g e t bad request response a status code equal to that given
func (o *GetNumberOfAPIPlansUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get number of Api plans using g e t bad request response
func (o *GetNumberOfAPIPlansUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetNumberOfAPIPlansUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/api-plans/count][%d] getNumberOfApiPlansUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GetNumberOfAPIPlansUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/api-plans/count][%d] getNumberOfApiPlansUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GetNumberOfAPIPlansUsingGETBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNumberOfAPIPlansUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNumberOfAPIPlansUsingGETNotFound creates a GetNumberOfAPIPlansUsingGETNotFound with default headers values
func NewGetNumberOfAPIPlansUsingGETNotFound() *GetNumberOfAPIPlansUsingGETNotFound {
	return &GetNumberOfAPIPlansUsingGETNotFound{}
}

/*
GetNumberOfAPIPlansUsingGETNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type GetNumberOfAPIPlansUsingGETNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get number of Api plans using g e t not found response has a 2xx status code
func (o *GetNumberOfAPIPlansUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get number of Api plans using g e t not found response has a 3xx status code
func (o *GetNumberOfAPIPlansUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get number of Api plans using g e t not found response has a 4xx status code
func (o *GetNumberOfAPIPlansUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get number of Api plans using g e t not found response has a 5xx status code
func (o *GetNumberOfAPIPlansUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get number of Api plans using g e t not found response a status code equal to that given
func (o *GetNumberOfAPIPlansUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get number of Api plans using g e t not found response
func (o *GetNumberOfAPIPlansUsingGETNotFound) Code() int {
	return 404
}

func (o *GetNumberOfAPIPlansUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/api-plans/count][%d] getNumberOfApiPlansUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetNumberOfAPIPlansUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/api-plans/count][%d] getNumberOfApiPlansUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetNumberOfAPIPlansUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNumberOfAPIPlansUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNumberOfAPIPlansUsingGETInternalServerError creates a GetNumberOfAPIPlansUsingGETInternalServerError with default headers values
func NewGetNumberOfAPIPlansUsingGETInternalServerError() *GetNumberOfAPIPlansUsingGETInternalServerError {
	return &GetNumberOfAPIPlansUsingGETInternalServerError{}
}

/*
GetNumberOfAPIPlansUsingGETInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type GetNumberOfAPIPlansUsingGETInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get number of Api plans using g e t internal server error response has a 2xx status code
func (o *GetNumberOfAPIPlansUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get number of Api plans using g e t internal server error response has a 3xx status code
func (o *GetNumberOfAPIPlansUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get number of Api plans using g e t internal server error response has a 4xx status code
func (o *GetNumberOfAPIPlansUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get number of Api plans using g e t internal server error response has a 5xx status code
func (o *GetNumberOfAPIPlansUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get number of Api plans using g e t internal server error response a status code equal to that given
func (o *GetNumberOfAPIPlansUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get number of Api plans using g e t internal server error response
func (o *GetNumberOfAPIPlansUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetNumberOfAPIPlansUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/api-plans/count][%d] getNumberOfApiPlansUsingGETInternalServerError  %+v", 500, o.Payload)
}

func (o *GetNumberOfAPIPlansUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/api-plans/count][%d] getNumberOfApiPlansUsingGETInternalServerError  %+v", 500, o.Payload)
}

func (o *GetNumberOfAPIPlansUsingGETInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNumberOfAPIPlansUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
