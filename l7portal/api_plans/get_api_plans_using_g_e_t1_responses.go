// Code generated by go-swagger; DO NOT EDIT.

package api_plans

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// GetAPIPlansUsingGET1Reader is a Reader for the GetAPIPlansUsingGET1 structure.
type GetAPIPlansUsingGET1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIPlansUsingGET1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIPlansUsingGET1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIPlansUsingGET1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAPIPlansUsingGET1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIPlansUsingGET1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAPIPlansUsingGET1OK creates a GetAPIPlansUsingGET1OK with default headers values
func NewGetAPIPlansUsingGET1OK() *GetAPIPlansUsingGET1OK {
	return &GetAPIPlansUsingGET1OK{}
}

/*
GetAPIPlansUsingGET1OK describes a response with status code 200, with default header values.

GetAPIPlansUsingGET1OK get Api plans using g e t1 o k
*/
type GetAPIPlansUsingGET1OK struct {
	Payload models.APIPlans
}

// IsSuccess returns true when this get Api plans using g e t1 o k response has a 2xx status code
func (o *GetAPIPlansUsingGET1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api plans using g e t1 o k response has a 3xx status code
func (o *GetAPIPlansUsingGET1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api plans using g e t1 o k response has a 4xx status code
func (o *GetAPIPlansUsingGET1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api plans using g e t1 o k response has a 5xx status code
func (o *GetAPIPlansUsingGET1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api plans using g e t1 o k response a status code equal to that given
func (o *GetAPIPlansUsingGET1OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api plans using g e t1 o k response
func (o *GetAPIPlansUsingGET1OK) Code() int {
	return 200
}

func (o *GetAPIPlansUsingGET1OK) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/api-plans][%d] getApiPlansUsingGET1OK  %+v", 200, o.Payload)
}

func (o *GetAPIPlansUsingGET1OK) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/api-plans][%d] getApiPlansUsingGET1OK  %+v", 200, o.Payload)
}

func (o *GetAPIPlansUsingGET1OK) GetPayload() models.APIPlans {
	return o.Payload
}

func (o *GetAPIPlansUsingGET1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIPlansUsingGET1BadRequest creates a GetAPIPlansUsingGET1BadRequest with default headers values
func NewGetAPIPlansUsingGET1BadRequest() *GetAPIPlansUsingGET1BadRequest {
	return &GetAPIPlansUsingGET1BadRequest{}
}

/*
GetAPIPlansUsingGET1BadRequest describes a response with status code 400, with default header values.

Bad Request due to Invalid Uuid.
*/
type GetAPIPlansUsingGET1BadRequest struct {
	Payload *models.LongerError
}

// IsSuccess returns true when this get Api plans using g e t1 bad request response has a 2xx status code
func (o *GetAPIPlansUsingGET1BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api plans using g e t1 bad request response has a 3xx status code
func (o *GetAPIPlansUsingGET1BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api plans using g e t1 bad request response has a 4xx status code
func (o *GetAPIPlansUsingGET1BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api plans using g e t1 bad request response has a 5xx status code
func (o *GetAPIPlansUsingGET1BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api plans using g e t1 bad request response a status code equal to that given
func (o *GetAPIPlansUsingGET1BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api plans using g e t1 bad request response
func (o *GetAPIPlansUsingGET1BadRequest) Code() int {
	return 400
}

func (o *GetAPIPlansUsingGET1BadRequest) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/api-plans][%d] getApiPlansUsingGET1BadRequest  %+v", 400, o.Payload)
}

func (o *GetAPIPlansUsingGET1BadRequest) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/api-plans][%d] getApiPlansUsingGET1BadRequest  %+v", 400, o.Payload)
}

func (o *GetAPIPlansUsingGET1BadRequest) GetPayload() *models.LongerError {
	return o.Payload
}

func (o *GetAPIPlansUsingGET1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LongerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIPlansUsingGET1NotFound creates a GetAPIPlansUsingGET1NotFound with default headers values
func NewGetAPIPlansUsingGET1NotFound() *GetAPIPlansUsingGET1NotFound {
	return &GetAPIPlansUsingGET1NotFound{}
}

/*
GetAPIPlansUsingGET1NotFound describes a response with status code 404, with default header values.

Entity not found
*/
type GetAPIPlansUsingGET1NotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get Api plans using g e t1 not found response has a 2xx status code
func (o *GetAPIPlansUsingGET1NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api plans using g e t1 not found response has a 3xx status code
func (o *GetAPIPlansUsingGET1NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api plans using g e t1 not found response has a 4xx status code
func (o *GetAPIPlansUsingGET1NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api plans using g e t1 not found response has a 5xx status code
func (o *GetAPIPlansUsingGET1NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api plans using g e t1 not found response a status code equal to that given
func (o *GetAPIPlansUsingGET1NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get Api plans using g e t1 not found response
func (o *GetAPIPlansUsingGET1NotFound) Code() int {
	return 404
}

func (o *GetAPIPlansUsingGET1NotFound) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/api-plans][%d] getApiPlansUsingGET1NotFound  %+v", 404, o.Payload)
}

func (o *GetAPIPlansUsingGET1NotFound) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/api-plans][%d] getApiPlansUsingGET1NotFound  %+v", 404, o.Payload)
}

func (o *GetAPIPlansUsingGET1NotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAPIPlansUsingGET1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIPlansUsingGET1InternalServerError creates a GetAPIPlansUsingGET1InternalServerError with default headers values
func NewGetAPIPlansUsingGET1InternalServerError() *GetAPIPlansUsingGET1InternalServerError {
	return &GetAPIPlansUsingGET1InternalServerError{}
}

/*
GetAPIPlansUsingGET1InternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type GetAPIPlansUsingGET1InternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get Api plans using g e t1 internal server error response has a 2xx status code
func (o *GetAPIPlansUsingGET1InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api plans using g e t1 internal server error response has a 3xx status code
func (o *GetAPIPlansUsingGET1InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api plans using g e t1 internal server error response has a 4xx status code
func (o *GetAPIPlansUsingGET1InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api plans using g e t1 internal server error response has a 5xx status code
func (o *GetAPIPlansUsingGET1InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api plans using g e t1 internal server error response a status code equal to that given
func (o *GetAPIPlansUsingGET1InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api plans using g e t1 internal server error response
func (o *GetAPIPlansUsingGET1InternalServerError) Code() int {
	return 500
}

func (o *GetAPIPlansUsingGET1InternalServerError) Error() string {
	return fmt.Sprintf("[GET /api-management/1.0/api-plans][%d] getApiPlansUsingGET1InternalServerError  %+v", 500, o.Payload)
}

func (o *GetAPIPlansUsingGET1InternalServerError) String() string {
	return fmt.Sprintf("[GET /api-management/1.0/api-plans][%d] getApiPlansUsingGET1InternalServerError  %+v", 500, o.Payload)
}

func (o *GetAPIPlansUsingGET1InternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAPIPlansUsingGET1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
