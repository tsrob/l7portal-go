// Code generated by go-swagger; DO NOT EDIT.

package api_plans

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// DeleteAPIPlanOrgUsingDELETEReader is a Reader for the DeleteAPIPlanOrgUsingDELETE structure.
type DeleteAPIPlanOrgUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAPIPlanOrgUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAPIPlanOrgUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAPIPlanOrgUsingDELETEBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAPIPlanOrgUsingDELETENotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAPIPlanOrgUsingDELETEInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteAPIPlanOrgUsingDELETEOK creates a DeleteAPIPlanOrgUsingDELETEOK with default headers values
func NewDeleteAPIPlanOrgUsingDELETEOK() *DeleteAPIPlanOrgUsingDELETEOK {
	return &DeleteAPIPlanOrgUsingDELETEOK{}
}

/*
DeleteAPIPlanOrgUsingDELETEOK describes a response with status code 200, with default header values.

Deleted
*/
type DeleteAPIPlanOrgUsingDELETEOK struct {
}

// IsSuccess returns true when this delete Api plan org using d e l e t e o k response has a 2xx status code
func (o *DeleteAPIPlanOrgUsingDELETEOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete Api plan org using d e l e t e o k response has a 3xx status code
func (o *DeleteAPIPlanOrgUsingDELETEOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Api plan org using d e l e t e o k response has a 4xx status code
func (o *DeleteAPIPlanOrgUsingDELETEOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete Api plan org using d e l e t e o k response has a 5xx status code
func (o *DeleteAPIPlanOrgUsingDELETEOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Api plan org using d e l e t e o k response a status code equal to that given
func (o *DeleteAPIPlanOrgUsingDELETEOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete Api plan org using d e l e t e o k response
func (o *DeleteAPIPlanOrgUsingDELETEOK) Code() int {
	return 200
}

func (o *DeleteAPIPlanOrgUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /api-management/0.1/api-plans/{uuid}/organization/{orguuid}][%d] deleteApiPlanOrgUsingDELETEOK ", 200)
}

func (o *DeleteAPIPlanOrgUsingDELETEOK) String() string {
	return fmt.Sprintf("[DELETE /api-management/0.1/api-plans/{uuid}/organization/{orguuid}][%d] deleteApiPlanOrgUsingDELETEOK ", 200)
}

func (o *DeleteAPIPlanOrgUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAPIPlanOrgUsingDELETEBadRequest creates a DeleteAPIPlanOrgUsingDELETEBadRequest with default headers values
func NewDeleteAPIPlanOrgUsingDELETEBadRequest() *DeleteAPIPlanOrgUsingDELETEBadRequest {
	return &DeleteAPIPlanOrgUsingDELETEBadRequest{}
}

/*
DeleteAPIPlanOrgUsingDELETEBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type DeleteAPIPlanOrgUsingDELETEBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete Api plan org using d e l e t e bad request response has a 2xx status code
func (o *DeleteAPIPlanOrgUsingDELETEBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Api plan org using d e l e t e bad request response has a 3xx status code
func (o *DeleteAPIPlanOrgUsingDELETEBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Api plan org using d e l e t e bad request response has a 4xx status code
func (o *DeleteAPIPlanOrgUsingDELETEBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete Api plan org using d e l e t e bad request response has a 5xx status code
func (o *DeleteAPIPlanOrgUsingDELETEBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Api plan org using d e l e t e bad request response a status code equal to that given
func (o *DeleteAPIPlanOrgUsingDELETEBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete Api plan org using d e l e t e bad request response
func (o *DeleteAPIPlanOrgUsingDELETEBadRequest) Code() int {
	return 400
}

func (o *DeleteAPIPlanOrgUsingDELETEBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api-management/0.1/api-plans/{uuid}/organization/{orguuid}][%d] deleteApiPlanOrgUsingDELETEBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAPIPlanOrgUsingDELETEBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api-management/0.1/api-plans/{uuid}/organization/{orguuid}][%d] deleteApiPlanOrgUsingDELETEBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAPIPlanOrgUsingDELETEBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAPIPlanOrgUsingDELETEBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIPlanOrgUsingDELETENotFound creates a DeleteAPIPlanOrgUsingDELETENotFound with default headers values
func NewDeleteAPIPlanOrgUsingDELETENotFound() *DeleteAPIPlanOrgUsingDELETENotFound {
	return &DeleteAPIPlanOrgUsingDELETENotFound{}
}

/*
DeleteAPIPlanOrgUsingDELETENotFound describes a response with status code 404, with default header values.

Entity not found
*/
type DeleteAPIPlanOrgUsingDELETENotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete Api plan org using d e l e t e not found response has a 2xx status code
func (o *DeleteAPIPlanOrgUsingDELETENotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Api plan org using d e l e t e not found response has a 3xx status code
func (o *DeleteAPIPlanOrgUsingDELETENotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Api plan org using d e l e t e not found response has a 4xx status code
func (o *DeleteAPIPlanOrgUsingDELETENotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete Api plan org using d e l e t e not found response has a 5xx status code
func (o *DeleteAPIPlanOrgUsingDELETENotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Api plan org using d e l e t e not found response a status code equal to that given
func (o *DeleteAPIPlanOrgUsingDELETENotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete Api plan org using d e l e t e not found response
func (o *DeleteAPIPlanOrgUsingDELETENotFound) Code() int {
	return 404
}

func (o *DeleteAPIPlanOrgUsingDELETENotFound) Error() string {
	return fmt.Sprintf("[DELETE /api-management/0.1/api-plans/{uuid}/organization/{orguuid}][%d] deleteApiPlanOrgUsingDELETENotFound  %+v", 404, o.Payload)
}

func (o *DeleteAPIPlanOrgUsingDELETENotFound) String() string {
	return fmt.Sprintf("[DELETE /api-management/0.1/api-plans/{uuid}/organization/{orguuid}][%d] deleteApiPlanOrgUsingDELETENotFound  %+v", 404, o.Payload)
}

func (o *DeleteAPIPlanOrgUsingDELETENotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAPIPlanOrgUsingDELETENotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIPlanOrgUsingDELETEInternalServerError creates a DeleteAPIPlanOrgUsingDELETEInternalServerError with default headers values
func NewDeleteAPIPlanOrgUsingDELETEInternalServerError() *DeleteAPIPlanOrgUsingDELETEInternalServerError {
	return &DeleteAPIPlanOrgUsingDELETEInternalServerError{}
}

/*
DeleteAPIPlanOrgUsingDELETEInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type DeleteAPIPlanOrgUsingDELETEInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete Api plan org using d e l e t e internal server error response has a 2xx status code
func (o *DeleteAPIPlanOrgUsingDELETEInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Api plan org using d e l e t e internal server error response has a 3xx status code
func (o *DeleteAPIPlanOrgUsingDELETEInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Api plan org using d e l e t e internal server error response has a 4xx status code
func (o *DeleteAPIPlanOrgUsingDELETEInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete Api plan org using d e l e t e internal server error response has a 5xx status code
func (o *DeleteAPIPlanOrgUsingDELETEInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete Api plan org using d e l e t e internal server error response a status code equal to that given
func (o *DeleteAPIPlanOrgUsingDELETEInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete Api plan org using d e l e t e internal server error response
func (o *DeleteAPIPlanOrgUsingDELETEInternalServerError) Code() int {
	return 500
}

func (o *DeleteAPIPlanOrgUsingDELETEInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api-management/0.1/api-plans/{uuid}/organization/{orguuid}][%d] deleteApiPlanOrgUsingDELETEInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAPIPlanOrgUsingDELETEInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api-management/0.1/api-plans/{uuid}/organization/{orguuid}][%d] deleteApiPlanOrgUsingDELETEInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAPIPlanOrgUsingDELETEInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAPIPlanOrgUsingDELETEInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
