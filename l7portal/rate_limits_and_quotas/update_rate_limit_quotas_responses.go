// Code generated by go-swagger; DO NOT EDIT.

package rate_limits_and_quotas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRateLimitQuotasReader is a Reader for the UpdateRateLimitQuotas structure.
type UpdateRateLimitQuotasReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRateLimitQuotasReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateRateLimitQuotasNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRateLimitQuotasBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRateLimitQuotasNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateRateLimitQuotasInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateRateLimitQuotasNoContent creates a UpdateRateLimitQuotasNoContent with default headers values
func NewUpdateRateLimitQuotasNoContent() *UpdateRateLimitQuotasNoContent {
	return &UpdateRateLimitQuotasNoContent{}
}

/*
UpdateRateLimitQuotasNoContent describes a response with status code 204, with default header values.

No Content
*/
type UpdateRateLimitQuotasNoContent struct {
}

// IsSuccess returns true when this update rate limit quotas no content response has a 2xx status code
func (o *UpdateRateLimitQuotasNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update rate limit quotas no content response has a 3xx status code
func (o *UpdateRateLimitQuotasNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update rate limit quotas no content response has a 4xx status code
func (o *UpdateRateLimitQuotasNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update rate limit quotas no content response has a 5xx status code
func (o *UpdateRateLimitQuotasNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update rate limit quotas no content response a status code equal to that given
func (o *UpdateRateLimitQuotasNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update rate limit quotas no content response
func (o *UpdateRateLimitQuotasNoContent) Code() int {
	return 204
}

func (o *UpdateRateLimitQuotasNoContent) Error() string {
	return fmt.Sprintf("[PUT /api-management/1.0/rate-quotas/{uuid}][%d] updateRateLimitQuotasNoContent ", 204)
}

func (o *UpdateRateLimitQuotasNoContent) String() string {
	return fmt.Sprintf("[PUT /api-management/1.0/rate-quotas/{uuid}][%d] updateRateLimitQuotasNoContent ", 204)
}

func (o *UpdateRateLimitQuotasNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRateLimitQuotasBadRequest creates a UpdateRateLimitQuotasBadRequest with default headers values
func NewUpdateRateLimitQuotasBadRequest() *UpdateRateLimitQuotasBadRequest {
	return &UpdateRateLimitQuotasBadRequest{}
}

/*
UpdateRateLimitQuotasBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateRateLimitQuotasBadRequest struct {
}

// IsSuccess returns true when this update rate limit quotas bad request response has a 2xx status code
func (o *UpdateRateLimitQuotasBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update rate limit quotas bad request response has a 3xx status code
func (o *UpdateRateLimitQuotasBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update rate limit quotas bad request response has a 4xx status code
func (o *UpdateRateLimitQuotasBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update rate limit quotas bad request response has a 5xx status code
func (o *UpdateRateLimitQuotasBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update rate limit quotas bad request response a status code equal to that given
func (o *UpdateRateLimitQuotasBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update rate limit quotas bad request response
func (o *UpdateRateLimitQuotasBadRequest) Code() int {
	return 400
}

func (o *UpdateRateLimitQuotasBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api-management/1.0/rate-quotas/{uuid}][%d] updateRateLimitQuotasBadRequest ", 400)
}

func (o *UpdateRateLimitQuotasBadRequest) String() string {
	return fmt.Sprintf("[PUT /api-management/1.0/rate-quotas/{uuid}][%d] updateRateLimitQuotasBadRequest ", 400)
}

func (o *UpdateRateLimitQuotasBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRateLimitQuotasNotFound creates a UpdateRateLimitQuotasNotFound with default headers values
func NewUpdateRateLimitQuotasNotFound() *UpdateRateLimitQuotasNotFound {
	return &UpdateRateLimitQuotasNotFound{}
}

/*
UpdateRateLimitQuotasNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateRateLimitQuotasNotFound struct {
}

// IsSuccess returns true when this update rate limit quotas not found response has a 2xx status code
func (o *UpdateRateLimitQuotasNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update rate limit quotas not found response has a 3xx status code
func (o *UpdateRateLimitQuotasNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update rate limit quotas not found response has a 4xx status code
func (o *UpdateRateLimitQuotasNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update rate limit quotas not found response has a 5xx status code
func (o *UpdateRateLimitQuotasNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update rate limit quotas not found response a status code equal to that given
func (o *UpdateRateLimitQuotasNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update rate limit quotas not found response
func (o *UpdateRateLimitQuotasNotFound) Code() int {
	return 404
}

func (o *UpdateRateLimitQuotasNotFound) Error() string {
	return fmt.Sprintf("[PUT /api-management/1.0/rate-quotas/{uuid}][%d] updateRateLimitQuotasNotFound ", 404)
}

func (o *UpdateRateLimitQuotasNotFound) String() string {
	return fmt.Sprintf("[PUT /api-management/1.0/rate-quotas/{uuid}][%d] updateRateLimitQuotasNotFound ", 404)
}

func (o *UpdateRateLimitQuotasNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRateLimitQuotasInternalServerError creates a UpdateRateLimitQuotasInternalServerError with default headers values
func NewUpdateRateLimitQuotasInternalServerError() *UpdateRateLimitQuotasInternalServerError {
	return &UpdateRateLimitQuotasInternalServerError{}
}

/*
UpdateRateLimitQuotasInternalServerError describes a response with status code 500, with default header values.

Server Failure
*/
type UpdateRateLimitQuotasInternalServerError struct {
}

// IsSuccess returns true when this update rate limit quotas internal server error response has a 2xx status code
func (o *UpdateRateLimitQuotasInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update rate limit quotas internal server error response has a 3xx status code
func (o *UpdateRateLimitQuotasInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update rate limit quotas internal server error response has a 4xx status code
func (o *UpdateRateLimitQuotasInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update rate limit quotas internal server error response has a 5xx status code
func (o *UpdateRateLimitQuotasInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update rate limit quotas internal server error response a status code equal to that given
func (o *UpdateRateLimitQuotasInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update rate limit quotas internal server error response
func (o *UpdateRateLimitQuotasInternalServerError) Code() int {
	return 500
}

func (o *UpdateRateLimitQuotasInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api-management/1.0/rate-quotas/{uuid}][%d] updateRateLimitQuotasInternalServerError ", 500)
}

func (o *UpdateRateLimitQuotasInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api-management/1.0/rate-quotas/{uuid}][%d] updateRateLimitQuotasInternalServerError ", 500)
}

func (o *UpdateRateLimitQuotasInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
