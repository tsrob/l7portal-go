// Code generated by go-swagger; DO NOT EDIT.

package api_permissions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// GetAPIUserPermissionsUsingGETReader is a Reader for the GetAPIUserPermissionsUsingGET structure.
type GetAPIUserPermissionsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIUserPermissionsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIUserPermissionsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIUserPermissionsUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIUserPermissionsUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAPIUserPermissionsUsingGETOK creates a GetAPIUserPermissionsUsingGETOK with default headers values
func NewGetAPIUserPermissionsUsingGETOK() *GetAPIUserPermissionsUsingGETOK {
	return &GetAPIUserPermissionsUsingGETOK{}
}

/*
GetAPIUserPermissionsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAPIUserPermissionsUsingGETOK struct {
	Payload []*models.ReferenceDto
}

// IsSuccess returns true when this get Api user permissions using g e t o k response has a 2xx status code
func (o *GetAPIUserPermissionsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api user permissions using g e t o k response has a 3xx status code
func (o *GetAPIUserPermissionsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api user permissions using g e t o k response has a 4xx status code
func (o *GetAPIUserPermissionsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api user permissions using g e t o k response has a 5xx status code
func (o *GetAPIUserPermissionsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api user permissions using g e t o k response a status code equal to that given
func (o *GetAPIUserPermissionsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api user permissions using g e t o k response
func (o *GetAPIUserPermissionsUsingGETOK) Code() int {
	return 200
}

func (o *GetAPIUserPermissionsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /api-management/0.1/permissions/apis/{apiUuid}][%d] getApiUserPermissionsUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAPIUserPermissionsUsingGETOK) String() string {
	return fmt.Sprintf("[GET /api-management/0.1/permissions/apis/{apiUuid}][%d] getApiUserPermissionsUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAPIUserPermissionsUsingGETOK) GetPayload() []*models.ReferenceDto {
	return o.Payload
}

func (o *GetAPIUserPermissionsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIUserPermissionsUsingGETBadRequest creates a GetAPIUserPermissionsUsingGETBadRequest with default headers values
func NewGetAPIUserPermissionsUsingGETBadRequest() *GetAPIUserPermissionsUsingGETBadRequest {
	return &GetAPIUserPermissionsUsingGETBadRequest{}
}

/*
GetAPIUserPermissionsUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAPIUserPermissionsUsingGETBadRequest struct {
}

// IsSuccess returns true when this get Api user permissions using g e t bad request response has a 2xx status code
func (o *GetAPIUserPermissionsUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api user permissions using g e t bad request response has a 3xx status code
func (o *GetAPIUserPermissionsUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api user permissions using g e t bad request response has a 4xx status code
func (o *GetAPIUserPermissionsUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api user permissions using g e t bad request response has a 5xx status code
func (o *GetAPIUserPermissionsUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api user permissions using g e t bad request response a status code equal to that given
func (o *GetAPIUserPermissionsUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api user permissions using g e t bad request response
func (o *GetAPIUserPermissionsUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetAPIUserPermissionsUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /api-management/0.1/permissions/apis/{apiUuid}][%d] getApiUserPermissionsUsingGETBadRequest ", 400)
}

func (o *GetAPIUserPermissionsUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /api-management/0.1/permissions/apis/{apiUuid}][%d] getApiUserPermissionsUsingGETBadRequest ", 400)
}

func (o *GetAPIUserPermissionsUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAPIUserPermissionsUsingGETInternalServerError creates a GetAPIUserPermissionsUsingGETInternalServerError with default headers values
func NewGetAPIUserPermissionsUsingGETInternalServerError() *GetAPIUserPermissionsUsingGETInternalServerError {
	return &GetAPIUserPermissionsUsingGETInternalServerError{}
}

/*
GetAPIUserPermissionsUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Failure
*/
type GetAPIUserPermissionsUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get Api user permissions using g e t internal server error response has a 2xx status code
func (o *GetAPIUserPermissionsUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api user permissions using g e t internal server error response has a 3xx status code
func (o *GetAPIUserPermissionsUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api user permissions using g e t internal server error response has a 4xx status code
func (o *GetAPIUserPermissionsUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api user permissions using g e t internal server error response has a 5xx status code
func (o *GetAPIUserPermissionsUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api user permissions using g e t internal server error response a status code equal to that given
func (o *GetAPIUserPermissionsUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api user permissions using g e t internal server error response
func (o *GetAPIUserPermissionsUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetAPIUserPermissionsUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api-management/0.1/permissions/apis/{apiUuid}][%d] getApiUserPermissionsUsingGETInternalServerError ", 500)
}

func (o *GetAPIUserPermissionsUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /api-management/0.1/permissions/apis/{apiUuid}][%d] getApiUserPermissionsUsingGETInternalServerError ", 500)
}

func (o *GetAPIUserPermissionsUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
