// Code generated by go-swagger; DO NOT EDIT.

package gateway_bundles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetGatewayBundlesUsingGETParams creates a new GetGatewayBundlesUsingGETParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetGatewayBundlesUsingGETParams() *GetGatewayBundlesUsingGETParams {
	return &GetGatewayBundlesUsingGETParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetGatewayBundlesUsingGETParamsWithTimeout creates a new GetGatewayBundlesUsingGETParams object
// with the ability to set a timeout on a request.
func NewGetGatewayBundlesUsingGETParamsWithTimeout(timeout time.Duration) *GetGatewayBundlesUsingGETParams {
	return &GetGatewayBundlesUsingGETParams{
		timeout: timeout,
	}
}

// NewGetGatewayBundlesUsingGETParamsWithContext creates a new GetGatewayBundlesUsingGETParams object
// with the ability to set a context for a request.
func NewGetGatewayBundlesUsingGETParamsWithContext(ctx context.Context) *GetGatewayBundlesUsingGETParams {
	return &GetGatewayBundlesUsingGETParams{
		Context: ctx,
	}
}

// NewGetGatewayBundlesUsingGETParamsWithHTTPClient creates a new GetGatewayBundlesUsingGETParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetGatewayBundlesUsingGETParamsWithHTTPClient(client *http.Client) *GetGatewayBundlesUsingGETParams {
	return &GetGatewayBundlesUsingGETParams{
		HTTPClient: client,
	}
}

/*
GetGatewayBundlesUsingGETParams contains all the parameters to send to the API endpoint

	for the get gateway bundles using g e t operation.

	Typically these are written to a http.Request.
*/
type GetGatewayBundlesUsingGETParams struct {

	/* GroupName.

	   Filter by full or partial group name of the Gateway bundles.
	*/
	GroupName *string

	/* L7template.

	   Filter based on policy templates. If the Gateway Bundle has a policy template, it can be consumed by a Portal-published API
	*/
	L7template *string

	/* Name.

	   Filter by full or partial name of Gateway bundles.
	*/
	Name *string

	/* Type.

	   Filter based on Gateway bundle type.
	*/
	Type *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get gateway bundles using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetGatewayBundlesUsingGETParams) WithDefaults() *GetGatewayBundlesUsingGETParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get gateway bundles using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetGatewayBundlesUsingGETParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get gateway bundles using g e t params
func (o *GetGatewayBundlesUsingGETParams) WithTimeout(timeout time.Duration) *GetGatewayBundlesUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get gateway bundles using g e t params
func (o *GetGatewayBundlesUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get gateway bundles using g e t params
func (o *GetGatewayBundlesUsingGETParams) WithContext(ctx context.Context) *GetGatewayBundlesUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get gateway bundles using g e t params
func (o *GetGatewayBundlesUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get gateway bundles using g e t params
func (o *GetGatewayBundlesUsingGETParams) WithHTTPClient(client *http.Client) *GetGatewayBundlesUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get gateway bundles using g e t params
func (o *GetGatewayBundlesUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGroupName adds the groupName to the get gateway bundles using g e t params
func (o *GetGatewayBundlesUsingGETParams) WithGroupName(groupName *string) *GetGatewayBundlesUsingGETParams {
	o.SetGroupName(groupName)
	return o
}

// SetGroupName adds the groupName to the get gateway bundles using g e t params
func (o *GetGatewayBundlesUsingGETParams) SetGroupName(groupName *string) {
	o.GroupName = groupName
}

// WithL7template adds the l7template to the get gateway bundles using g e t params
func (o *GetGatewayBundlesUsingGETParams) WithL7template(l7template *string) *GetGatewayBundlesUsingGETParams {
	o.SetL7template(l7template)
	return o
}

// SetL7template adds the l7template to the get gateway bundles using g e t params
func (o *GetGatewayBundlesUsingGETParams) SetL7template(l7template *string) {
	o.L7template = l7template
}

// WithName adds the name to the get gateway bundles using g e t params
func (o *GetGatewayBundlesUsingGETParams) WithName(name *string) *GetGatewayBundlesUsingGETParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get gateway bundles using g e t params
func (o *GetGatewayBundlesUsingGETParams) SetName(name *string) {
	o.Name = name
}

// WithType adds the typeVar to the get gateway bundles using g e t params
func (o *GetGatewayBundlesUsingGETParams) WithType(typeVar *string) *GetGatewayBundlesUsingGETParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get gateway bundles using g e t params
func (o *GetGatewayBundlesUsingGETParams) SetType(typeVar *string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *GetGatewayBundlesUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.GroupName != nil {

		// query param groupName
		var qrGroupName string

		if o.GroupName != nil {
			qrGroupName = *o.GroupName
		}
		qGroupName := qrGroupName
		if qGroupName != "" {

			if err := r.SetQueryParam("groupName", qGroupName); err != nil {
				return err
			}
		}
	}

	if o.L7template != nil {

		// query param l7template
		var qrL7template string

		if o.L7template != nil {
			qrL7template = *o.L7template
		}
		qL7template := qrL7template
		if qL7template != "" {

			if err := r.SetQueryParam("l7template", qL7template); err != nil {
				return err
			}
		}
	}

	if o.Name != nil {

		// query param name
		var qrName string

		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.Type != nil {

		// query param type
		var qrType string

		if o.Type != nil {
			qrType = *o.Type
		}
		qType := qrType
		if qType != "" {

			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
