// Code generated by go-swagger; DO NOT EDIT.

package gateway_bundles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetGatewayBundlesApisUsingGETParams creates a new GetGatewayBundlesApisUsingGETParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetGatewayBundlesApisUsingGETParams() *GetGatewayBundlesApisUsingGETParams {
	return &GetGatewayBundlesApisUsingGETParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetGatewayBundlesApisUsingGETParamsWithTimeout creates a new GetGatewayBundlesApisUsingGETParams object
// with the ability to set a timeout on a request.
func NewGetGatewayBundlesApisUsingGETParamsWithTimeout(timeout time.Duration) *GetGatewayBundlesApisUsingGETParams {
	return &GetGatewayBundlesApisUsingGETParams{
		timeout: timeout,
	}
}

// NewGetGatewayBundlesApisUsingGETParamsWithContext creates a new GetGatewayBundlesApisUsingGETParams object
// with the ability to set a context for a request.
func NewGetGatewayBundlesApisUsingGETParamsWithContext(ctx context.Context) *GetGatewayBundlesApisUsingGETParams {
	return &GetGatewayBundlesApisUsingGETParams{
		Context: ctx,
	}
}

// NewGetGatewayBundlesApisUsingGETParamsWithHTTPClient creates a new GetGatewayBundlesApisUsingGETParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetGatewayBundlesApisUsingGETParamsWithHTTPClient(client *http.Client) *GetGatewayBundlesApisUsingGETParams {
	return &GetGatewayBundlesApisUsingGETParams{
		HTTPClient: client,
	}
}

/*
GetGatewayBundlesApisUsingGETParams contains all the parameters to send to the API endpoint

	for the get gateway bundles apis using g e t operation.

	Typically these are written to a http.Request.
*/
type GetGatewayBundlesApisUsingGETParams struct {

	/* APIName.

	   Filter by full or partial name of APIs using the policy template created from the bundle.
	*/
	APIName *string

	/* APIStatus.

	   Filter by state of APIs using the policy template created from the bundle.
	*/
	APIStatus *string

	/* ProxyName.

	   Filter by full or partial name of proxies that APIs using the policy template are deployed to.
	*/
	ProxyName *string

	/* TagName.

	   Filter by full or partial tag of APIs using the policy template created from the bundle.
	*/
	TagName *string

	/* UUID.

	   The Gateway bundle uuid.
	*/
	UUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get gateway bundles apis using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetGatewayBundlesApisUsingGETParams) WithDefaults() *GetGatewayBundlesApisUsingGETParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get gateway bundles apis using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetGatewayBundlesApisUsingGETParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get gateway bundles apis using g e t params
func (o *GetGatewayBundlesApisUsingGETParams) WithTimeout(timeout time.Duration) *GetGatewayBundlesApisUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get gateway bundles apis using g e t params
func (o *GetGatewayBundlesApisUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get gateway bundles apis using g e t params
func (o *GetGatewayBundlesApisUsingGETParams) WithContext(ctx context.Context) *GetGatewayBundlesApisUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get gateway bundles apis using g e t params
func (o *GetGatewayBundlesApisUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get gateway bundles apis using g e t params
func (o *GetGatewayBundlesApisUsingGETParams) WithHTTPClient(client *http.Client) *GetGatewayBundlesApisUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get gateway bundles apis using g e t params
func (o *GetGatewayBundlesApisUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIName adds the aPIName to the get gateway bundles apis using g e t params
func (o *GetGatewayBundlesApisUsingGETParams) WithAPIName(aPIName *string) *GetGatewayBundlesApisUsingGETParams {
	o.SetAPIName(aPIName)
	return o
}

// SetAPIName adds the apiName to the get gateway bundles apis using g e t params
func (o *GetGatewayBundlesApisUsingGETParams) SetAPIName(aPIName *string) {
	o.APIName = aPIName
}

// WithAPIStatus adds the aPIStatus to the get gateway bundles apis using g e t params
func (o *GetGatewayBundlesApisUsingGETParams) WithAPIStatus(aPIStatus *string) *GetGatewayBundlesApisUsingGETParams {
	o.SetAPIStatus(aPIStatus)
	return o
}

// SetAPIStatus adds the apiStatus to the get gateway bundles apis using g e t params
func (o *GetGatewayBundlesApisUsingGETParams) SetAPIStatus(aPIStatus *string) {
	o.APIStatus = aPIStatus
}

// WithProxyName adds the proxyName to the get gateway bundles apis using g e t params
func (o *GetGatewayBundlesApisUsingGETParams) WithProxyName(proxyName *string) *GetGatewayBundlesApisUsingGETParams {
	o.SetProxyName(proxyName)
	return o
}

// SetProxyName adds the proxyName to the get gateway bundles apis using g e t params
func (o *GetGatewayBundlesApisUsingGETParams) SetProxyName(proxyName *string) {
	o.ProxyName = proxyName
}

// WithTagName adds the tagName to the get gateway bundles apis using g e t params
func (o *GetGatewayBundlesApisUsingGETParams) WithTagName(tagName *string) *GetGatewayBundlesApisUsingGETParams {
	o.SetTagName(tagName)
	return o
}

// SetTagName adds the tagName to the get gateway bundles apis using g e t params
func (o *GetGatewayBundlesApisUsingGETParams) SetTagName(tagName *string) {
	o.TagName = tagName
}

// WithUUID adds the uuid to the get gateway bundles apis using g e t params
func (o *GetGatewayBundlesApisUsingGETParams) WithUUID(uuid string) *GetGatewayBundlesApisUsingGETParams {
	o.SetUUID(uuid)
	return o
}

// SetUUID adds the uuid to the get gateway bundles apis using g e t params
func (o *GetGatewayBundlesApisUsingGETParams) SetUUID(uuid string) {
	o.UUID = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *GetGatewayBundlesApisUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.APIName != nil {

		// query param apiName
		var qrAPIName string

		if o.APIName != nil {
			qrAPIName = *o.APIName
		}
		qAPIName := qrAPIName
		if qAPIName != "" {

			if err := r.SetQueryParam("apiName", qAPIName); err != nil {
				return err
			}
		}
	}

	if o.APIStatus != nil {

		// query param apiStatus
		var qrAPIStatus string

		if o.APIStatus != nil {
			qrAPIStatus = *o.APIStatus
		}
		qAPIStatus := qrAPIStatus
		if qAPIStatus != "" {

			if err := r.SetQueryParam("apiStatus", qAPIStatus); err != nil {
				return err
			}
		}
	}

	if o.ProxyName != nil {

		// query param proxyName
		var qrProxyName string

		if o.ProxyName != nil {
			qrProxyName = *o.ProxyName
		}
		qProxyName := qrProxyName
		if qProxyName != "" {

			if err := r.SetQueryParam("proxyName", qProxyName); err != nil {
				return err
			}
		}
	}

	if o.TagName != nil {

		// query param tagName
		var qrTagName string

		if o.TagName != nil {
			qrTagName = *o.TagName
		}
		qTagName := qrTagName
		if qTagName != "" {

			if err := r.SetQueryParam("tagName", qTagName); err != nil {
				return err
			}
		}
	}

	// path param uuid
	if err := r.SetPathParam("uuid", o.UUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
