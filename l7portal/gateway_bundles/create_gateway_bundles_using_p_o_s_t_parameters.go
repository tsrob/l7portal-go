// Code generated by go-swagger; DO NOT EDIT.

package gateway_bundles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCreateGatewayBundlesUsingPOSTParams creates a new CreateGatewayBundlesUsingPOSTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateGatewayBundlesUsingPOSTParams() *CreateGatewayBundlesUsingPOSTParams {
	return &CreateGatewayBundlesUsingPOSTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateGatewayBundlesUsingPOSTParamsWithTimeout creates a new CreateGatewayBundlesUsingPOSTParams object
// with the ability to set a timeout on a request.
func NewCreateGatewayBundlesUsingPOSTParamsWithTimeout(timeout time.Duration) *CreateGatewayBundlesUsingPOSTParams {
	return &CreateGatewayBundlesUsingPOSTParams{
		timeout: timeout,
	}
}

// NewCreateGatewayBundlesUsingPOSTParamsWithContext creates a new CreateGatewayBundlesUsingPOSTParams object
// with the ability to set a context for a request.
func NewCreateGatewayBundlesUsingPOSTParamsWithContext(ctx context.Context) *CreateGatewayBundlesUsingPOSTParams {
	return &CreateGatewayBundlesUsingPOSTParams{
		Context: ctx,
	}
}

// NewCreateGatewayBundlesUsingPOSTParamsWithHTTPClient creates a new CreateGatewayBundlesUsingPOSTParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateGatewayBundlesUsingPOSTParamsWithHTTPClient(client *http.Client) *CreateGatewayBundlesUsingPOSTParams {
	return &CreateGatewayBundlesUsingPOSTParams{
		HTTPClient: client,
	}
}

/*
CreateGatewayBundlesUsingPOSTParams contains all the parameters to send to the API endpoint

	for the create gateway bundles using p o s t operation.

	Typically these are written to a http.Request.
*/
type CreateGatewayBundlesUsingPOSTParams struct {

	/* DeleteBundle.

	   The delete bundle file to upload
	*/
	DeleteBundle runtime.NamedReadCloser

	/* InstallBundle.

	   The install bundle file to upload
	*/
	InstallBundle runtime.NamedReadCloser

	/* MetadataFile.

	   The metadata file to upload
	*/
	MetadataFile runtime.NamedReadCloser

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create gateway bundles using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateGatewayBundlesUsingPOSTParams) WithDefaults() *CreateGatewayBundlesUsingPOSTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create gateway bundles using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateGatewayBundlesUsingPOSTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create gateway bundles using p o s t params
func (o *CreateGatewayBundlesUsingPOSTParams) WithTimeout(timeout time.Duration) *CreateGatewayBundlesUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create gateway bundles using p o s t params
func (o *CreateGatewayBundlesUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create gateway bundles using p o s t params
func (o *CreateGatewayBundlesUsingPOSTParams) WithContext(ctx context.Context) *CreateGatewayBundlesUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create gateway bundles using p o s t params
func (o *CreateGatewayBundlesUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create gateway bundles using p o s t params
func (o *CreateGatewayBundlesUsingPOSTParams) WithHTTPClient(client *http.Client) *CreateGatewayBundlesUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create gateway bundles using p o s t params
func (o *CreateGatewayBundlesUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDeleteBundle adds the deleteBundle to the create gateway bundles using p o s t params
func (o *CreateGatewayBundlesUsingPOSTParams) WithDeleteBundle(deleteBundle runtime.NamedReadCloser) *CreateGatewayBundlesUsingPOSTParams {
	o.SetDeleteBundle(deleteBundle)
	return o
}

// SetDeleteBundle adds the deleteBundle to the create gateway bundles using p o s t params
func (o *CreateGatewayBundlesUsingPOSTParams) SetDeleteBundle(deleteBundle runtime.NamedReadCloser) {
	o.DeleteBundle = deleteBundle
}

// WithInstallBundle adds the installBundle to the create gateway bundles using p o s t params
func (o *CreateGatewayBundlesUsingPOSTParams) WithInstallBundle(installBundle runtime.NamedReadCloser) *CreateGatewayBundlesUsingPOSTParams {
	o.SetInstallBundle(installBundle)
	return o
}

// SetInstallBundle adds the installBundle to the create gateway bundles using p o s t params
func (o *CreateGatewayBundlesUsingPOSTParams) SetInstallBundle(installBundle runtime.NamedReadCloser) {
	o.InstallBundle = installBundle
}

// WithMetadataFile adds the metadataFile to the create gateway bundles using p o s t params
func (o *CreateGatewayBundlesUsingPOSTParams) WithMetadataFile(metadataFile runtime.NamedReadCloser) *CreateGatewayBundlesUsingPOSTParams {
	o.SetMetadataFile(metadataFile)
	return o
}

// SetMetadataFile adds the metadataFile to the create gateway bundles using p o s t params
func (o *CreateGatewayBundlesUsingPOSTParams) SetMetadataFile(metadataFile runtime.NamedReadCloser) {
	o.MetadataFile = metadataFile
}

// WriteToRequest writes these params to a swagger request
func (o *CreateGatewayBundlesUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	// form file param deleteBundle
	if err := r.SetFileParam("deleteBundle", o.DeleteBundle); err != nil {
		return err
	}
	// form file param installBundle
	if err := r.SetFileParam("installBundle", o.InstallBundle); err != nil {
		return err
	}
	// form file param metadataFile
	if err := r.SetFileParam("metadataFile", o.MetadataFile); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
