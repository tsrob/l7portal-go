// Code generated by go-swagger; DO NOT EDIT.

package gateway_bundles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// CreateGatewayBundlesUsingPOSTReader is a Reader for the CreateGatewayBundlesUsingPOST structure.
type CreateGatewayBundlesUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateGatewayBundlesUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateGatewayBundlesUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateGatewayBundlesUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateGatewayBundlesUsingPOSTCreated creates a CreateGatewayBundlesUsingPOSTCreated with default headers values
func NewCreateGatewayBundlesUsingPOSTCreated() *CreateGatewayBundlesUsingPOSTCreated {
	return &CreateGatewayBundlesUsingPOSTCreated{}
}

/*
CreateGatewayBundlesUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateGatewayBundlesUsingPOSTCreated struct {
	Payload *models.GatewayBundleCreateResponseDto
}

// IsSuccess returns true when this create gateway bundles using p o s t created response has a 2xx status code
func (o *CreateGatewayBundlesUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create gateway bundles using p o s t created response has a 3xx status code
func (o *CreateGatewayBundlesUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create gateway bundles using p o s t created response has a 4xx status code
func (o *CreateGatewayBundlesUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create gateway bundles using p o s t created response has a 5xx status code
func (o *CreateGatewayBundlesUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create gateway bundles using p o s t created response a status code equal to that given
func (o *CreateGatewayBundlesUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create gateway bundles using p o s t created response
func (o *CreateGatewayBundlesUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateGatewayBundlesUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /policy-management/0.1/gateway-bundles][%d] createGatewayBundlesUsingPOSTCreated  %+v", 201, o.Payload)
}

func (o *CreateGatewayBundlesUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /policy-management/0.1/gateway-bundles][%d] createGatewayBundlesUsingPOSTCreated  %+v", 201, o.Payload)
}

func (o *CreateGatewayBundlesUsingPOSTCreated) GetPayload() *models.GatewayBundleCreateResponseDto {
	return o.Payload
}

func (o *CreateGatewayBundlesUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayBundleCreateResponseDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGatewayBundlesUsingPOSTBadRequest creates a CreateGatewayBundlesUsingPOSTBadRequest with default headers values
func NewCreateGatewayBundlesUsingPOSTBadRequest() *CreateGatewayBundlesUsingPOSTBadRequest {
	return &CreateGatewayBundlesUsingPOSTBadRequest{}
}

/*
CreateGatewayBundlesUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type CreateGatewayBundlesUsingPOSTBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create gateway bundles using p o s t bad request response has a 2xx status code
func (o *CreateGatewayBundlesUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create gateway bundles using p o s t bad request response has a 3xx status code
func (o *CreateGatewayBundlesUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create gateway bundles using p o s t bad request response has a 4xx status code
func (o *CreateGatewayBundlesUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create gateway bundles using p o s t bad request response has a 5xx status code
func (o *CreateGatewayBundlesUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create gateway bundles using p o s t bad request response a status code equal to that given
func (o *CreateGatewayBundlesUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create gateway bundles using p o s t bad request response
func (o *CreateGatewayBundlesUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *CreateGatewayBundlesUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /policy-management/0.1/gateway-bundles][%d] createGatewayBundlesUsingPOSTBadRequest  %+v", 400, o.Payload)
}

func (o *CreateGatewayBundlesUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /policy-management/0.1/gateway-bundles][%d] createGatewayBundlesUsingPOSTBadRequest  %+v", 400, o.Payload)
}

func (o *CreateGatewayBundlesUsingPOSTBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateGatewayBundlesUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
