// Code generated by go-swagger; DO NOT EDIT.

package gateway_bundles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// GetGatewayBundlesMetadataUsingGETReader is a Reader for the GetGatewayBundlesMetadataUsingGET structure.
type GetGatewayBundlesMetadataUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGatewayBundlesMetadataUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGatewayBundlesMetadataUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGatewayBundlesMetadataUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGatewayBundlesMetadataUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGatewayBundlesMetadataUsingGETOK creates a GetGatewayBundlesMetadataUsingGETOK with default headers values
func NewGetGatewayBundlesMetadataUsingGETOK() *GetGatewayBundlesMetadataUsingGETOK {
	return &GetGatewayBundlesMetadataUsingGETOK{}
}

/*
GetGatewayBundlesMetadataUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetGatewayBundlesMetadataUsingGETOK struct {
	Payload models.InputStream
}

// IsSuccess returns true when this get gateway bundles metadata using g e t o k response has a 2xx status code
func (o *GetGatewayBundlesMetadataUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get gateway bundles metadata using g e t o k response has a 3xx status code
func (o *GetGatewayBundlesMetadataUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gateway bundles metadata using g e t o k response has a 4xx status code
func (o *GetGatewayBundlesMetadataUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gateway bundles metadata using g e t o k response has a 5xx status code
func (o *GetGatewayBundlesMetadataUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get gateway bundles metadata using g e t o k response a status code equal to that given
func (o *GetGatewayBundlesMetadataUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get gateway bundles metadata using g e t o k response
func (o *GetGatewayBundlesMetadataUsingGETOK) Code() int {
	return 200
}

func (o *GetGatewayBundlesMetadataUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /policy-management/0.1/gateway-bundles/{uuid}/metadata][%d] getGatewayBundlesMetadataUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetGatewayBundlesMetadataUsingGETOK) String() string {
	return fmt.Sprintf("[GET /policy-management/0.1/gateway-bundles/{uuid}/metadata][%d] getGatewayBundlesMetadataUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetGatewayBundlesMetadataUsingGETOK) GetPayload() models.InputStream {
	return o.Payload
}

func (o *GetGatewayBundlesMetadataUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGatewayBundlesMetadataUsingGETBadRequest creates a GetGatewayBundlesMetadataUsingGETBadRequest with default headers values
func NewGetGatewayBundlesMetadataUsingGETBadRequest() *GetGatewayBundlesMetadataUsingGETBadRequest {
	return &GetGatewayBundlesMetadataUsingGETBadRequest{}
}

/*
GetGatewayBundlesMetadataUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type GetGatewayBundlesMetadataUsingGETBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get gateway bundles metadata using g e t bad request response has a 2xx status code
func (o *GetGatewayBundlesMetadataUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gateway bundles metadata using g e t bad request response has a 3xx status code
func (o *GetGatewayBundlesMetadataUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gateway bundles metadata using g e t bad request response has a 4xx status code
func (o *GetGatewayBundlesMetadataUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gateway bundles metadata using g e t bad request response has a 5xx status code
func (o *GetGatewayBundlesMetadataUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get gateway bundles metadata using g e t bad request response a status code equal to that given
func (o *GetGatewayBundlesMetadataUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get gateway bundles metadata using g e t bad request response
func (o *GetGatewayBundlesMetadataUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetGatewayBundlesMetadataUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /policy-management/0.1/gateway-bundles/{uuid}/metadata][%d] getGatewayBundlesMetadataUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GetGatewayBundlesMetadataUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /policy-management/0.1/gateway-bundles/{uuid}/metadata][%d] getGatewayBundlesMetadataUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GetGatewayBundlesMetadataUsingGETBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGatewayBundlesMetadataUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGatewayBundlesMetadataUsingGETNotFound creates a GetGatewayBundlesMetadataUsingGETNotFound with default headers values
func NewGetGatewayBundlesMetadataUsingGETNotFound() *GetGatewayBundlesMetadataUsingGETNotFound {
	return &GetGatewayBundlesMetadataUsingGETNotFound{}
}

/*
GetGatewayBundlesMetadataUsingGETNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type GetGatewayBundlesMetadataUsingGETNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get gateway bundles metadata using g e t not found response has a 2xx status code
func (o *GetGatewayBundlesMetadataUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gateway bundles metadata using g e t not found response has a 3xx status code
func (o *GetGatewayBundlesMetadataUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gateway bundles metadata using g e t not found response has a 4xx status code
func (o *GetGatewayBundlesMetadataUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gateway bundles metadata using g e t not found response has a 5xx status code
func (o *GetGatewayBundlesMetadataUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get gateway bundles metadata using g e t not found response a status code equal to that given
func (o *GetGatewayBundlesMetadataUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get gateway bundles metadata using g e t not found response
func (o *GetGatewayBundlesMetadataUsingGETNotFound) Code() int {
	return 404
}

func (o *GetGatewayBundlesMetadataUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /policy-management/0.1/gateway-bundles/{uuid}/metadata][%d] getGatewayBundlesMetadataUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetGatewayBundlesMetadataUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /policy-management/0.1/gateway-bundles/{uuid}/metadata][%d] getGatewayBundlesMetadataUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetGatewayBundlesMetadataUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGatewayBundlesMetadataUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
