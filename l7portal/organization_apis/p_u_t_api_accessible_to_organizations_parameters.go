// Code generated by go-swagger; DO NOT EDIT.

package organization_apis

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPUTAPIAccessibleToOrganizationsParams creates a new PUTAPIAccessibleToOrganizationsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPUTAPIAccessibleToOrganizationsParams() *PUTAPIAccessibleToOrganizationsParams {
	return &PUTAPIAccessibleToOrganizationsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPUTAPIAccessibleToOrganizationsParamsWithTimeout creates a new PUTAPIAccessibleToOrganizationsParams object
// with the ability to set a timeout on a request.
func NewPUTAPIAccessibleToOrganizationsParamsWithTimeout(timeout time.Duration) *PUTAPIAccessibleToOrganizationsParams {
	return &PUTAPIAccessibleToOrganizationsParams{
		timeout: timeout,
	}
}

// NewPUTAPIAccessibleToOrganizationsParamsWithContext creates a new PUTAPIAccessibleToOrganizationsParams object
// with the ability to set a context for a request.
func NewPUTAPIAccessibleToOrganizationsParamsWithContext(ctx context.Context) *PUTAPIAccessibleToOrganizationsParams {
	return &PUTAPIAccessibleToOrganizationsParams{
		Context: ctx,
	}
}

// NewPUTAPIAccessibleToOrganizationsParamsWithHTTPClient creates a new PUTAPIAccessibleToOrganizationsParams object
// with the ability to set a custom HTTPClient for a request.
func NewPUTAPIAccessibleToOrganizationsParamsWithHTTPClient(client *http.Client) *PUTAPIAccessibleToOrganizationsParams {
	return &PUTAPIAccessibleToOrganizationsParams{
		HTTPClient: client,
	}
}

/*
PUTAPIAccessibleToOrganizationsParams contains all the parameters to send to the API endpoint

	for the p u t Api accessible to organizations operation.

	Typically these are written to a http.Request.
*/
type PUTAPIAccessibleToOrganizationsParams struct {

	/* APIUuids.

	   apiUuids
	*/
	APIUuids []string

	/* OrgUUID.

	   orgUuid
	*/
	OrgUUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the p u t Api accessible to organizations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PUTAPIAccessibleToOrganizationsParams) WithDefaults() *PUTAPIAccessibleToOrganizationsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the p u t Api accessible to organizations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PUTAPIAccessibleToOrganizationsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the p u t Api accessible to organizations params
func (o *PUTAPIAccessibleToOrganizationsParams) WithTimeout(timeout time.Duration) *PUTAPIAccessibleToOrganizationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the p u t Api accessible to organizations params
func (o *PUTAPIAccessibleToOrganizationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the p u t Api accessible to organizations params
func (o *PUTAPIAccessibleToOrganizationsParams) WithContext(ctx context.Context) *PUTAPIAccessibleToOrganizationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the p u t Api accessible to organizations params
func (o *PUTAPIAccessibleToOrganizationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the p u t Api accessible to organizations params
func (o *PUTAPIAccessibleToOrganizationsParams) WithHTTPClient(client *http.Client) *PUTAPIAccessibleToOrganizationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the p u t Api accessible to organizations params
func (o *PUTAPIAccessibleToOrganizationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIUuids adds the aPIUuids to the p u t Api accessible to organizations params
func (o *PUTAPIAccessibleToOrganizationsParams) WithAPIUuids(aPIUuids []string) *PUTAPIAccessibleToOrganizationsParams {
	o.SetAPIUuids(aPIUuids)
	return o
}

// SetAPIUuids adds the apiUuids to the p u t Api accessible to organizations params
func (o *PUTAPIAccessibleToOrganizationsParams) SetAPIUuids(aPIUuids []string) {
	o.APIUuids = aPIUuids
}

// WithOrgUUID adds the orgUUID to the p u t Api accessible to organizations params
func (o *PUTAPIAccessibleToOrganizationsParams) WithOrgUUID(orgUUID string) *PUTAPIAccessibleToOrganizationsParams {
	o.SetOrgUUID(orgUUID)
	return o
}

// SetOrgUUID adds the orgUuid to the p u t Api accessible to organizations params
func (o *PUTAPIAccessibleToOrganizationsParams) SetOrgUUID(orgUUID string) {
	o.OrgUUID = orgUUID
}

// WriteToRequest writes these params to a swagger request
func (o *PUTAPIAccessibleToOrganizationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.APIUuids != nil {
		if err := r.SetBodyParam(o.APIUuids); err != nil {
			return err
		}
	}

	// path param orgUuid
	if err := r.SetPathParam("orgUuid", o.OrgUUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
