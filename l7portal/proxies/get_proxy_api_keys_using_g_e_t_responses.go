// Code generated by go-swagger; DO NOT EDIT.

package proxies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// GetProxyAPIKeysUsingGETReader is a Reader for the GetProxyAPIKeysUsingGET structure.
type GetProxyAPIKeysUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProxyAPIKeysUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProxyAPIKeysUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetProxyAPIKeysUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProxyAPIKeysUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetProxyAPIKeysUsingGETOK creates a GetProxyAPIKeysUsingGETOK with default headers values
func NewGetProxyAPIKeysUsingGETOK() *GetProxyAPIKeysUsingGETOK {
	return &GetProxyAPIKeysUsingGETOK{}
}

/*
GetProxyAPIKeysUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetProxyAPIKeysUsingGETOK struct {
	Payload *models.APIKeyDeploysGet
}

// IsSuccess returns true when this get proxy Api keys using g e t o k response has a 2xx status code
func (o *GetProxyAPIKeysUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get proxy Api keys using g e t o k response has a 3xx status code
func (o *GetProxyAPIKeysUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get proxy Api keys using g e t o k response has a 4xx status code
func (o *GetProxyAPIKeysUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get proxy Api keys using g e t o k response has a 5xx status code
func (o *GetProxyAPIKeysUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get proxy Api keys using g e t o k response a status code equal to that given
func (o *GetProxyAPIKeysUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get proxy Api keys using g e t o k response
func (o *GetProxyAPIKeysUsingGETOK) Code() int {
	return 200
}

func (o *GetProxyAPIKeysUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /deployments/1.0/proxies/{uuid}/api-keys][%d] getProxyApiKeysUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetProxyAPIKeysUsingGETOK) String() string {
	return fmt.Sprintf("[GET /deployments/1.0/proxies/{uuid}/api-keys][%d] getProxyApiKeysUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetProxyAPIKeysUsingGETOK) GetPayload() *models.APIKeyDeploysGet {
	return o.Payload
}

func (o *GetProxyAPIKeysUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIKeyDeploysGet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProxyAPIKeysUsingGETBadRequest creates a GetProxyAPIKeysUsingGETBadRequest with default headers values
func NewGetProxyAPIKeysUsingGETBadRequest() *GetProxyAPIKeysUsingGETBadRequest {
	return &GetProxyAPIKeysUsingGETBadRequest{}
}

/*
GetProxyAPIKeysUsingGETBadRequest describes a response with status code 400, with default header values.

Bad request due to a validation error.
*/
type GetProxyAPIKeysUsingGETBadRequest struct {
}

// IsSuccess returns true when this get proxy Api keys using g e t bad request response has a 2xx status code
func (o *GetProxyAPIKeysUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get proxy Api keys using g e t bad request response has a 3xx status code
func (o *GetProxyAPIKeysUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get proxy Api keys using g e t bad request response has a 4xx status code
func (o *GetProxyAPIKeysUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get proxy Api keys using g e t bad request response has a 5xx status code
func (o *GetProxyAPIKeysUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get proxy Api keys using g e t bad request response a status code equal to that given
func (o *GetProxyAPIKeysUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get proxy Api keys using g e t bad request response
func (o *GetProxyAPIKeysUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetProxyAPIKeysUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /deployments/1.0/proxies/{uuid}/api-keys][%d] getProxyApiKeysUsingGETBadRequest ", 400)
}

func (o *GetProxyAPIKeysUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /deployments/1.0/proxies/{uuid}/api-keys][%d] getProxyApiKeysUsingGETBadRequest ", 400)
}

func (o *GetProxyAPIKeysUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProxyAPIKeysUsingGETNotFound creates a GetProxyAPIKeysUsingGETNotFound with default headers values
func NewGetProxyAPIKeysUsingGETNotFound() *GetProxyAPIKeysUsingGETNotFound {
	return &GetProxyAPIKeysUsingGETNotFound{}
}

/*
GetProxyAPIKeysUsingGETNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type GetProxyAPIKeysUsingGETNotFound struct {
}

// IsSuccess returns true when this get proxy Api keys using g e t not found response has a 2xx status code
func (o *GetProxyAPIKeysUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get proxy Api keys using g e t not found response has a 3xx status code
func (o *GetProxyAPIKeysUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get proxy Api keys using g e t not found response has a 4xx status code
func (o *GetProxyAPIKeysUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get proxy Api keys using g e t not found response has a 5xx status code
func (o *GetProxyAPIKeysUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get proxy Api keys using g e t not found response a status code equal to that given
func (o *GetProxyAPIKeysUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get proxy Api keys using g e t not found response
func (o *GetProxyAPIKeysUsingGETNotFound) Code() int {
	return 404
}

func (o *GetProxyAPIKeysUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /deployments/1.0/proxies/{uuid}/api-keys][%d] getProxyApiKeysUsingGETNotFound ", 404)
}

func (o *GetProxyAPIKeysUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /deployments/1.0/proxies/{uuid}/api-keys][%d] getProxyApiKeysUsingGETNotFound ", 404)
}

func (o *GetProxyAPIKeysUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
