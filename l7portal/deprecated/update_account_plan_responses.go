// Code generated by go-swagger; DO NOT EDIT.

package deprecated

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// UpdateAccountPlanReader is a Reader for the UpdateAccountPlan structure.
type UpdateAccountPlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAccountPlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewUpdateAccountPlanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAccountPlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateAccountPlanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateAccountPlanBadRequest creates a UpdateAccountPlanBadRequest with default headers values
func NewUpdateAccountPlanBadRequest() *UpdateAccountPlanBadRequest {
	return &UpdateAccountPlanBadRequest{}
}

/*
UpdateAccountPlanBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type UpdateAccountPlanBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update account plan bad request response has a 2xx status code
func (o *UpdateAccountPlanBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update account plan bad request response has a 3xx status code
func (o *UpdateAccountPlanBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update account plan bad request response has a 4xx status code
func (o *UpdateAccountPlanBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update account plan bad request response has a 5xx status code
func (o *UpdateAccountPlanBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update account plan bad request response a status code equal to that given
func (o *UpdateAccountPlanBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update account plan bad request response
func (o *UpdateAccountPlanBadRequest) Code() int {
	return 400
}

func (o *UpdateAccountPlanBadRequest) Error() string {
	return fmt.Sprintf("[PUT /AccountPlans('{uuid}')][%d] updateAccountPlanBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateAccountPlanBadRequest) String() string {
	return fmt.Sprintf("[PUT /AccountPlans('{uuid}')][%d] updateAccountPlanBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateAccountPlanBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateAccountPlanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAccountPlanNotFound creates a UpdateAccountPlanNotFound with default headers values
func NewUpdateAccountPlanNotFound() *UpdateAccountPlanNotFound {
	return &UpdateAccountPlanNotFound{}
}

/*
UpdateAccountPlanNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type UpdateAccountPlanNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update account plan not found response has a 2xx status code
func (o *UpdateAccountPlanNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update account plan not found response has a 3xx status code
func (o *UpdateAccountPlanNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update account plan not found response has a 4xx status code
func (o *UpdateAccountPlanNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update account plan not found response has a 5xx status code
func (o *UpdateAccountPlanNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update account plan not found response a status code equal to that given
func (o *UpdateAccountPlanNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update account plan not found response
func (o *UpdateAccountPlanNotFound) Code() int {
	return 404
}

func (o *UpdateAccountPlanNotFound) Error() string {
	return fmt.Sprintf("[PUT /AccountPlans('{uuid}')][%d] updateAccountPlanNotFound  %+v", 404, o.Payload)
}

func (o *UpdateAccountPlanNotFound) String() string {
	return fmt.Sprintf("[PUT /AccountPlans('{uuid}')][%d] updateAccountPlanNotFound  %+v", 404, o.Payload)
}

func (o *UpdateAccountPlanNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateAccountPlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAccountPlanInternalServerError creates a UpdateAccountPlanInternalServerError with default headers values
func NewUpdateAccountPlanInternalServerError() *UpdateAccountPlanInternalServerError {
	return &UpdateAccountPlanInternalServerError{}
}

/*
UpdateAccountPlanInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type UpdateAccountPlanInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update account plan internal server error response has a 2xx status code
func (o *UpdateAccountPlanInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update account plan internal server error response has a 3xx status code
func (o *UpdateAccountPlanInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update account plan internal server error response has a 4xx status code
func (o *UpdateAccountPlanInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update account plan internal server error response has a 5xx status code
func (o *UpdateAccountPlanInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update account plan internal server error response a status code equal to that given
func (o *UpdateAccountPlanInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update account plan internal server error response
func (o *UpdateAccountPlanInternalServerError) Code() int {
	return 500
}

func (o *UpdateAccountPlanInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /AccountPlans('{uuid}')][%d] updateAccountPlanInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateAccountPlanInternalServerError) String() string {
	return fmt.Sprintf("[PUT /AccountPlans('{uuid}')][%d] updateAccountPlanInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateAccountPlanInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateAccountPlanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
