// Code generated by go-swagger; DO NOT EDIT.

package deprecated

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// DeleteAccountPlanReader is a Reader for the DeleteAccountPlan structure.
type DeleteAccountPlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAccountPlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewDeleteAccountPlanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAccountPlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAccountPlanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteAccountPlanBadRequest creates a DeleteAccountPlanBadRequest with default headers values
func NewDeleteAccountPlanBadRequest() *DeleteAccountPlanBadRequest {
	return &DeleteAccountPlanBadRequest{}
}

/*
DeleteAccountPlanBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type DeleteAccountPlanBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete account plan bad request response has a 2xx status code
func (o *DeleteAccountPlanBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete account plan bad request response has a 3xx status code
func (o *DeleteAccountPlanBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete account plan bad request response has a 4xx status code
func (o *DeleteAccountPlanBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete account plan bad request response has a 5xx status code
func (o *DeleteAccountPlanBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete account plan bad request response a status code equal to that given
func (o *DeleteAccountPlanBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete account plan bad request response
func (o *DeleteAccountPlanBadRequest) Code() int {
	return 400
}

func (o *DeleteAccountPlanBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /AccountPlans('{uuid}')][%d] deleteAccountPlanBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAccountPlanBadRequest) String() string {
	return fmt.Sprintf("[DELETE /AccountPlans('{uuid}')][%d] deleteAccountPlanBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAccountPlanBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAccountPlanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccountPlanNotFound creates a DeleteAccountPlanNotFound with default headers values
func NewDeleteAccountPlanNotFound() *DeleteAccountPlanNotFound {
	return &DeleteAccountPlanNotFound{}
}

/*
DeleteAccountPlanNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type DeleteAccountPlanNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete account plan not found response has a 2xx status code
func (o *DeleteAccountPlanNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete account plan not found response has a 3xx status code
func (o *DeleteAccountPlanNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete account plan not found response has a 4xx status code
func (o *DeleteAccountPlanNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete account plan not found response has a 5xx status code
func (o *DeleteAccountPlanNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete account plan not found response a status code equal to that given
func (o *DeleteAccountPlanNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete account plan not found response
func (o *DeleteAccountPlanNotFound) Code() int {
	return 404
}

func (o *DeleteAccountPlanNotFound) Error() string {
	return fmt.Sprintf("[DELETE /AccountPlans('{uuid}')][%d] deleteAccountPlanNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAccountPlanNotFound) String() string {
	return fmt.Sprintf("[DELETE /AccountPlans('{uuid}')][%d] deleteAccountPlanNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAccountPlanNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAccountPlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccountPlanInternalServerError creates a DeleteAccountPlanInternalServerError with default headers values
func NewDeleteAccountPlanInternalServerError() *DeleteAccountPlanInternalServerError {
	return &DeleteAccountPlanInternalServerError{}
}

/*
DeleteAccountPlanInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type DeleteAccountPlanInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete account plan internal server error response has a 2xx status code
func (o *DeleteAccountPlanInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete account plan internal server error response has a 3xx status code
func (o *DeleteAccountPlanInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete account plan internal server error response has a 4xx status code
func (o *DeleteAccountPlanInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete account plan internal server error response has a 5xx status code
func (o *DeleteAccountPlanInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete account plan internal server error response a status code equal to that given
func (o *DeleteAccountPlanInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete account plan internal server error response
func (o *DeleteAccountPlanInternalServerError) Code() int {
	return 500
}

func (o *DeleteAccountPlanInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /AccountPlans('{uuid}')][%d] deleteAccountPlanInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAccountPlanInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /AccountPlans('{uuid}')][%d] deleteAccountPlanInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAccountPlanInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAccountPlanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
