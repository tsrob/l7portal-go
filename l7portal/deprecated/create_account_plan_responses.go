// Code generated by go-swagger; DO NOT EDIT.

package deprecated

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// CreateAccountPlanReader is a Reader for the CreateAccountPlan structure.
type CreateAccountPlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAccountPlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateAccountPlanCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateAccountPlanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateAccountPlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateAccountPlanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateAccountPlanCreated creates a CreateAccountPlanCreated with default headers values
func NewCreateAccountPlanCreated() *CreateAccountPlanCreated {
	return &CreateAccountPlanCreated{}
}

/*
CreateAccountPlanCreated describes a response with status code 201, with default header values.

CreateAccountPlanCreated create account plan created
*/
type CreateAccountPlanCreated struct {
	Payload *models.AccountPlanFull
}

// IsSuccess returns true when this create account plan created response has a 2xx status code
func (o *CreateAccountPlanCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create account plan created response has a 3xx status code
func (o *CreateAccountPlanCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create account plan created response has a 4xx status code
func (o *CreateAccountPlanCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create account plan created response has a 5xx status code
func (o *CreateAccountPlanCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create account plan created response a status code equal to that given
func (o *CreateAccountPlanCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create account plan created response
func (o *CreateAccountPlanCreated) Code() int {
	return 201
}

func (o *CreateAccountPlanCreated) Error() string {
	return fmt.Sprintf("[POST /AccountPlans][%d] createAccountPlanCreated  %+v", 201, o.Payload)
}

func (o *CreateAccountPlanCreated) String() string {
	return fmt.Sprintf("[POST /AccountPlans][%d] createAccountPlanCreated  %+v", 201, o.Payload)
}

func (o *CreateAccountPlanCreated) GetPayload() *models.AccountPlanFull {
	return o.Payload
}

func (o *CreateAccountPlanCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountPlanFull)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountPlanBadRequest creates a CreateAccountPlanBadRequest with default headers values
func NewCreateAccountPlanBadRequest() *CreateAccountPlanBadRequest {
	return &CreateAccountPlanBadRequest{}
}

/*
CreateAccountPlanBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type CreateAccountPlanBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create account plan bad request response has a 2xx status code
func (o *CreateAccountPlanBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create account plan bad request response has a 3xx status code
func (o *CreateAccountPlanBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create account plan bad request response has a 4xx status code
func (o *CreateAccountPlanBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create account plan bad request response has a 5xx status code
func (o *CreateAccountPlanBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create account plan bad request response a status code equal to that given
func (o *CreateAccountPlanBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create account plan bad request response
func (o *CreateAccountPlanBadRequest) Code() int {
	return 400
}

func (o *CreateAccountPlanBadRequest) Error() string {
	return fmt.Sprintf("[POST /AccountPlans][%d] createAccountPlanBadRequest  %+v", 400, o.Payload)
}

func (o *CreateAccountPlanBadRequest) String() string {
	return fmt.Sprintf("[POST /AccountPlans][%d] createAccountPlanBadRequest  %+v", 400, o.Payload)
}

func (o *CreateAccountPlanBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateAccountPlanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountPlanNotFound creates a CreateAccountPlanNotFound with default headers values
func NewCreateAccountPlanNotFound() *CreateAccountPlanNotFound {
	return &CreateAccountPlanNotFound{}
}

/*
CreateAccountPlanNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type CreateAccountPlanNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this create account plan not found response has a 2xx status code
func (o *CreateAccountPlanNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create account plan not found response has a 3xx status code
func (o *CreateAccountPlanNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create account plan not found response has a 4xx status code
func (o *CreateAccountPlanNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create account plan not found response has a 5xx status code
func (o *CreateAccountPlanNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create account plan not found response a status code equal to that given
func (o *CreateAccountPlanNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create account plan not found response
func (o *CreateAccountPlanNotFound) Code() int {
	return 404
}

func (o *CreateAccountPlanNotFound) Error() string {
	return fmt.Sprintf("[POST /AccountPlans][%d] createAccountPlanNotFound  %+v", 404, o.Payload)
}

func (o *CreateAccountPlanNotFound) String() string {
	return fmt.Sprintf("[POST /AccountPlans][%d] createAccountPlanNotFound  %+v", 404, o.Payload)
}

func (o *CreateAccountPlanNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateAccountPlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountPlanInternalServerError creates a CreateAccountPlanInternalServerError with default headers values
func NewCreateAccountPlanInternalServerError() *CreateAccountPlanInternalServerError {
	return &CreateAccountPlanInternalServerError{}
}

/*
CreateAccountPlanInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type CreateAccountPlanInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this create account plan internal server error response has a 2xx status code
func (o *CreateAccountPlanInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create account plan internal server error response has a 3xx status code
func (o *CreateAccountPlanInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create account plan internal server error response has a 4xx status code
func (o *CreateAccountPlanInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create account plan internal server error response has a 5xx status code
func (o *CreateAccountPlanInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create account plan internal server error response a status code equal to that given
func (o *CreateAccountPlanInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create account plan internal server error response
func (o *CreateAccountPlanInternalServerError) Code() int {
	return 500
}

func (o *CreateAccountPlanInternalServerError) Error() string {
	return fmt.Sprintf("[POST /AccountPlans][%d] createAccountPlanInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateAccountPlanInternalServerError) String() string {
	return fmt.Sprintf("[POST /AccountPlans][%d] createAccountPlanInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateAccountPlanInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateAccountPlanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
