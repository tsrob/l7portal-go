// Code generated by go-swagger; DO NOT EDIT.

package deprecated

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// DeleteApplicationReader is a Reader for the DeleteApplication structure.
type DeleteApplicationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteApplicationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewDeleteApplicationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteApplicationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteApplicationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteApplicationBadRequest creates a DeleteApplicationBadRequest with default headers values
func NewDeleteApplicationBadRequest() *DeleteApplicationBadRequest {
	return &DeleteApplicationBadRequest{}
}

/*
DeleteApplicationBadRequest describes a response with status code 400, with default header values.

Bad Request due to a validation error.
*/
type DeleteApplicationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete application bad request response has a 2xx status code
func (o *DeleteApplicationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete application bad request response has a 3xx status code
func (o *DeleteApplicationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete application bad request response has a 4xx status code
func (o *DeleteApplicationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete application bad request response has a 5xx status code
func (o *DeleteApplicationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete application bad request response a status code equal to that given
func (o *DeleteApplicationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete application bad request response
func (o *DeleteApplicationBadRequest) Code() int {
	return 400
}

func (o *DeleteApplicationBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /Applications('{uuid}')][%d] deleteApplicationBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteApplicationBadRequest) String() string {
	return fmt.Sprintf("[DELETE /Applications('{uuid}')][%d] deleteApplicationBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteApplicationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteApplicationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteApplicationNotFound creates a DeleteApplicationNotFound with default headers values
func NewDeleteApplicationNotFound() *DeleteApplicationNotFound {
	return &DeleteApplicationNotFound{}
}

/*
DeleteApplicationNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type DeleteApplicationNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete application not found response has a 2xx status code
func (o *DeleteApplicationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete application not found response has a 3xx status code
func (o *DeleteApplicationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete application not found response has a 4xx status code
func (o *DeleteApplicationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete application not found response has a 5xx status code
func (o *DeleteApplicationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete application not found response a status code equal to that given
func (o *DeleteApplicationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete application not found response
func (o *DeleteApplicationNotFound) Code() int {
	return 404
}

func (o *DeleteApplicationNotFound) Error() string {
	return fmt.Sprintf("[DELETE /Applications('{uuid}')][%d] deleteApplicationNotFound  %+v", 404, o.Payload)
}

func (o *DeleteApplicationNotFound) String() string {
	return fmt.Sprintf("[DELETE /Applications('{uuid}')][%d] deleteApplicationNotFound  %+v", 404, o.Payload)
}

func (o *DeleteApplicationNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteApplicationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteApplicationInternalServerError creates a DeleteApplicationInternalServerError with default headers values
func NewDeleteApplicationInternalServerError() *DeleteApplicationInternalServerError {
	return &DeleteApplicationInternalServerError{}
}

/*
DeleteApplicationInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type DeleteApplicationInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete application internal server error response has a 2xx status code
func (o *DeleteApplicationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete application internal server error response has a 3xx status code
func (o *DeleteApplicationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete application internal server error response has a 4xx status code
func (o *DeleteApplicationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete application internal server error response has a 5xx status code
func (o *DeleteApplicationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete application internal server error response a status code equal to that given
func (o *DeleteApplicationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete application internal server error response
func (o *DeleteApplicationInternalServerError) Code() int {
	return 500
}

func (o *DeleteApplicationInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /Applications('{uuid}')][%d] deleteApplicationInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteApplicationInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /Applications('{uuid}')][%d] deleteApplicationInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteApplicationInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteApplicationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
