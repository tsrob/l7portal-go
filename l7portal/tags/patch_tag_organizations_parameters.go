// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPatchTagOrganizationsParams creates a new PatchTagOrganizationsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchTagOrganizationsParams() *PatchTagOrganizationsParams {
	return &PatchTagOrganizationsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchTagOrganizationsParamsWithTimeout creates a new PatchTagOrganizationsParams object
// with the ability to set a timeout on a request.
func NewPatchTagOrganizationsParamsWithTimeout(timeout time.Duration) *PatchTagOrganizationsParams {
	return &PatchTagOrganizationsParams{
		timeout: timeout,
	}
}

// NewPatchTagOrganizationsParamsWithContext creates a new PatchTagOrganizationsParams object
// with the ability to set a context for a request.
func NewPatchTagOrganizationsParamsWithContext(ctx context.Context) *PatchTagOrganizationsParams {
	return &PatchTagOrganizationsParams{
		Context: ctx,
	}
}

// NewPatchTagOrganizationsParamsWithHTTPClient creates a new PatchTagOrganizationsParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchTagOrganizationsParamsWithHTTPClient(client *http.Client) *PatchTagOrganizationsParams {
	return &PatchTagOrganizationsParams{
		HTTPClient: client,
	}
}

/*
PatchTagOrganizationsParams contains all the parameters to send to the API endpoint

	for the patch tag organizations operation.

	Typically these are written to a http.Request.
*/
type PatchTagOrganizationsParams struct {

	/* Action.

	   Use the value 'remove' to delete Tag-Organization associations
	*/
	Action *string

	/* OrganizationUuids.

	   organizationUuids
	*/
	OrganizationUuids []string

	/* TagUUID.

	   tagUuid
	*/
	TagUUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch tag organizations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchTagOrganizationsParams) WithDefaults() *PatchTagOrganizationsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch tag organizations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchTagOrganizationsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the patch tag organizations params
func (o *PatchTagOrganizationsParams) WithTimeout(timeout time.Duration) *PatchTagOrganizationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch tag organizations params
func (o *PatchTagOrganizationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch tag organizations params
func (o *PatchTagOrganizationsParams) WithContext(ctx context.Context) *PatchTagOrganizationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch tag organizations params
func (o *PatchTagOrganizationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch tag organizations params
func (o *PatchTagOrganizationsParams) WithHTTPClient(client *http.Client) *PatchTagOrganizationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch tag organizations params
func (o *PatchTagOrganizationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAction adds the action to the patch tag organizations params
func (o *PatchTagOrganizationsParams) WithAction(action *string) *PatchTagOrganizationsParams {
	o.SetAction(action)
	return o
}

// SetAction adds the action to the patch tag organizations params
func (o *PatchTagOrganizationsParams) SetAction(action *string) {
	o.Action = action
}

// WithOrganizationUuids adds the organizationUuids to the patch tag organizations params
func (o *PatchTagOrganizationsParams) WithOrganizationUuids(organizationUuids []string) *PatchTagOrganizationsParams {
	o.SetOrganizationUuids(organizationUuids)
	return o
}

// SetOrganizationUuids adds the organizationUuids to the patch tag organizations params
func (o *PatchTagOrganizationsParams) SetOrganizationUuids(organizationUuids []string) {
	o.OrganizationUuids = organizationUuids
}

// WithTagUUID adds the tagUUID to the patch tag organizations params
func (o *PatchTagOrganizationsParams) WithTagUUID(tagUUID string) *PatchTagOrganizationsParams {
	o.SetTagUUID(tagUUID)
	return o
}

// SetTagUUID adds the tagUuid to the patch tag organizations params
func (o *PatchTagOrganizationsParams) SetTagUUID(tagUUID string) {
	o.TagUUID = tagUUID
}

// WriteToRequest writes these params to a swagger request
func (o *PatchTagOrganizationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Action != nil {

		// query param action
		var qrAction string

		if o.Action != nil {
			qrAction = *o.Action
		}
		qAction := qrAction
		if qAction != "" {

			if err := r.SetQueryParam("action", qAction); err != nil {
				return err
			}
		}
	}
	if o.OrganizationUuids != nil {
		if err := r.SetBodyParam(o.OrganizationUuids); err != nil {
			return err
		}
	}

	// path param tagUuid
	if err := r.SetPathParam("tagUuid", o.TagUUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
