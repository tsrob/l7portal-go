// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tsrob/l7portal-go/models"
)

// PatchTagOrganizationsReader is a Reader for the PatchTagOrganizations structure.
type PatchTagOrganizationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchTagOrganizationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchTagOrganizationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchTagOrganizationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchTagOrganizationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchTagOrganizationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchTagOrganizationsOK creates a PatchTagOrganizationsOK with default headers values
func NewPatchTagOrganizationsOK() *PatchTagOrganizationsOK {
	return &PatchTagOrganizationsOK{}
}

/*
PatchTagOrganizationsOK describes a response with status code 200, with default header values.

OK
*/
type PatchTagOrganizationsOK struct {
	Payload []string
}

// IsSuccess returns true when this patch tag organizations o k response has a 2xx status code
func (o *PatchTagOrganizationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch tag organizations o k response has a 3xx status code
func (o *PatchTagOrganizationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch tag organizations o k response has a 4xx status code
func (o *PatchTagOrganizationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch tag organizations o k response has a 5xx status code
func (o *PatchTagOrganizationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch tag organizations o k response a status code equal to that given
func (o *PatchTagOrganizationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the patch tag organizations o k response
func (o *PatchTagOrganizationsOK) Code() int {
	return 200
}

func (o *PatchTagOrganizationsOK) Error() string {
	return fmt.Sprintf("[PATCH /tenant-admin/1.0/tags/{tagUuid}/organizations][%d] patchTagOrganizationsOK  %+v", 200, o.Payload)
}

func (o *PatchTagOrganizationsOK) String() string {
	return fmt.Sprintf("[PATCH /tenant-admin/1.0/tags/{tagUuid}/organizations][%d] patchTagOrganizationsOK  %+v", 200, o.Payload)
}

func (o *PatchTagOrganizationsOK) GetPayload() []string {
	return o.Payload
}

func (o *PatchTagOrganizationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchTagOrganizationsBadRequest creates a PatchTagOrganizationsBadRequest with default headers values
func NewPatchTagOrganizationsBadRequest() *PatchTagOrganizationsBadRequest {
	return &PatchTagOrganizationsBadRequest{}
}

/*
PatchTagOrganizationsBadRequest describes a response with status code 400, with default header values.

Bad Request due to Invalid Uuid.
*/
type PatchTagOrganizationsBadRequest struct {
	Payload *models.LongerError
}

// IsSuccess returns true when this patch tag organizations bad request response has a 2xx status code
func (o *PatchTagOrganizationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch tag organizations bad request response has a 3xx status code
func (o *PatchTagOrganizationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch tag organizations bad request response has a 4xx status code
func (o *PatchTagOrganizationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch tag organizations bad request response has a 5xx status code
func (o *PatchTagOrganizationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch tag organizations bad request response a status code equal to that given
func (o *PatchTagOrganizationsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the patch tag organizations bad request response
func (o *PatchTagOrganizationsBadRequest) Code() int {
	return 400
}

func (o *PatchTagOrganizationsBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /tenant-admin/1.0/tags/{tagUuid}/organizations][%d] patchTagOrganizationsBadRequest  %+v", 400, o.Payload)
}

func (o *PatchTagOrganizationsBadRequest) String() string {
	return fmt.Sprintf("[PATCH /tenant-admin/1.0/tags/{tagUuid}/organizations][%d] patchTagOrganizationsBadRequest  %+v", 400, o.Payload)
}

func (o *PatchTagOrganizationsBadRequest) GetPayload() *models.LongerError {
	return o.Payload
}

func (o *PatchTagOrganizationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LongerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchTagOrganizationsNotFound creates a PatchTagOrganizationsNotFound with default headers values
func NewPatchTagOrganizationsNotFound() *PatchTagOrganizationsNotFound {
	return &PatchTagOrganizationsNotFound{}
}

/*
PatchTagOrganizationsNotFound describes a response with status code 404, with default header values.

Entity not Found
*/
type PatchTagOrganizationsNotFound struct {
	Payload *models.ErrorEntity
}

// IsSuccess returns true when this patch tag organizations not found response has a 2xx status code
func (o *PatchTagOrganizationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch tag organizations not found response has a 3xx status code
func (o *PatchTagOrganizationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch tag organizations not found response has a 4xx status code
func (o *PatchTagOrganizationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch tag organizations not found response has a 5xx status code
func (o *PatchTagOrganizationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch tag organizations not found response a status code equal to that given
func (o *PatchTagOrganizationsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the patch tag organizations not found response
func (o *PatchTagOrganizationsNotFound) Code() int {
	return 404
}

func (o *PatchTagOrganizationsNotFound) Error() string {
	return fmt.Sprintf("[PATCH /tenant-admin/1.0/tags/{tagUuid}/organizations][%d] patchTagOrganizationsNotFound  %+v", 404, o.Payload)
}

func (o *PatchTagOrganizationsNotFound) String() string {
	return fmt.Sprintf("[PATCH /tenant-admin/1.0/tags/{tagUuid}/organizations][%d] patchTagOrganizationsNotFound  %+v", 404, o.Payload)
}

func (o *PatchTagOrganizationsNotFound) GetPayload() *models.ErrorEntity {
	return o.Payload
}

func (o *PatchTagOrganizationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchTagOrganizationsInternalServerError creates a PatchTagOrganizationsInternalServerError with default headers values
func NewPatchTagOrganizationsInternalServerError() *PatchTagOrganizationsInternalServerError {
	return &PatchTagOrganizationsInternalServerError{}
}

/*
PatchTagOrganizationsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. Certain fields are missing from the request.
*/
type PatchTagOrganizationsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this patch tag organizations internal server error response has a 2xx status code
func (o *PatchTagOrganizationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch tag organizations internal server error response has a 3xx status code
func (o *PatchTagOrganizationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch tag organizations internal server error response has a 4xx status code
func (o *PatchTagOrganizationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch tag organizations internal server error response has a 5xx status code
func (o *PatchTagOrganizationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch tag organizations internal server error response a status code equal to that given
func (o *PatchTagOrganizationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the patch tag organizations internal server error response
func (o *PatchTagOrganizationsInternalServerError) Code() int {
	return 500
}

func (o *PatchTagOrganizationsInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /tenant-admin/1.0/tags/{tagUuid}/organizations][%d] patchTagOrganizationsInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchTagOrganizationsInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /tenant-admin/1.0/tags/{tagUuid}/organizations][%d] patchTagOrganizationsInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchTagOrganizationsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchTagOrganizationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
